Logic in computer science From Wikipedia, the free encyclopedia Jump to navigation Jump to search Academic discipline For the academic conference LICS, see IEEE Symposium on Logic in Computer Science . Diagrammatic representation of computer logic gates Logic in computer science covers the overlap between the field of logic and that of computer science . The topic can essentially be divided into three main areas Theoretical foundations and analysis Use of computer technology to aid logicians Use of concepts from logic for computer applications Contents 1 Theoretical foundations and analysis 2 Computers to assist logicians 3 Logic applications for computers 4 See also 5 References 6 Further reading 7 External links Theoretical foundations and analysis  edit  Logic plays a fundamental role in computer science. Some of the key areas of logic that are particularly significant are computability theory formerly called recursion theory, modal logic and category theory . The theory of computation is based on concepts defined by logicians and mathematicians such as Alonzo Church and Alan Turing . 1  2  Church first showed the existence of algorithmically unsolvable problems using his notion of lambda-definability. Turing gave the first compelling analysis of what can be called a mechanical procedure and Kurt Gdel asserted that he found Turings analysis perfect. 3  In addition some other major areas of theoretical overlap between logic and computer science are Gdels incompleteness theorem proves that any logical system powerful enough to characterize arithmetic will contain statements that can neither be proved nor disproved within that system. This has direct application to theoretical issues relating to the feasibility of proving the completeness and correctness of software. 4  The frame problem is a basic problem that must be overcome when using first-order logic to represent the goals and state of an artificial intelligence agent. 5  The Curry-Howard correspondence is a relation between logical systems and software. This theory established a precise correspondence between proofs and programs. In particular it showed that terms in the simply-typed lambda-calculus correspond to proofs of intuitionistic propositional logic. Category theory represents a view of mathematics that emphasizes the relations between structures. It is intimately tied to many aspects of computer science type systems for programming languages, the theory of transition systems, models of programming languages and the theory of programming language semantics. 6  Computers to assist logicians  edit  One of the first applications to use the term Artificial Intelligence was the Logic Theorist system developed by Allen Newell , J.C. Shaw, and Herbert Simon in 1956. One of the things that a logician does is to take a set of statements in logic and deduce the conclusions additional statements that must be true by the laws of logic. For example, If given a logical system that states All humans are mortal and Socrates is human a valid conclusion is Socrates is mortal. Of course this is a trivial example. In actual logical s ystems the statements can be numerous and complex. It was realized early on that this kind of analysis could be significantly aided by the use of computers. The Logic Theorist validated the theoretical work of Bertrand Russell and Alfred North Whitehead in their influential work on mathematical logic called Principia Mathematica . In addition, subsequent systems have been utilized by logicians to validate and discover new logical theorems and proofs. 7  Logic applications for computers  edit  There has always been a strong influence from mathematical logic on the field of Artificial Intelligence AI . From the beginning of the field it was realized that technology to automate logical inferences could have great potential to solve problems and draw conclusions from facts. Ron Brachman has described first-order logic FOL as the metric by which all AI knowledge representation formalisms should be evaluated. There is no more general or powerful known method for describing and analyzing information than FOL. The reason FOL itself is simply not used as a computer language is that it is actually too expressive, in the sense that FOL can easily express statements that no computer, no matter how powerful, could ever solve. For this reason every form of k nowledge representation is in some sense a trade off between expressivity and computability. The more expressive the language is, the closer it is to FOL, the more likely it is to be slower and prone to an infinite loop. 8  For example, IF THEN rules used in Expert Systems approximate to a very limited subset of FOL. Rather than arbitrary formulas with the full range of logical operators the starting point is simply what logicians refer to as Modus Ponens . As a result, rule based systems can support high-performance computation, especially if they take advantage of optimization algorithms and compilation. 9  Another major area of research for logical theory was software engineering. Research projects such as the Knowledge-Based Software Assistant and Programmers Apprentice programs applied logical theory to validate the correctness of software specifications. They also used them to transform the specifications into efficient code on diverse platforms and to prove the equivalence between the implementation and the specification. 10  This formal transformation driven approach is often far more effortful than traditional software development. However, in specific domains with appropriate formalisms and reusable templates the approach has proven viable for commercial products. The appropriate domains are usually those such as weapons systems, security systems, and real time financial systems where failure o f the system has excessively high human or financial cost. An example of such a domain is Very Large Scale Integrated VLSI Design the process for designing the chips used for the CPUs and other critical components of digital devices. An error in a chip is catastrophic. Unlike software, chips cant be patched or updated. As a result, there is commercial justification for using formal methods to prove that the implementation corresponds to the specification. 11  Another important application of logic to computer technology has been in the area of frame languages and automatic classifiers. Frame languages such ais KL-ONE have a rigid semantics. Definitions in KL-ONE can be directly mapped to set theory and the predicate calculus. This allows specialized theorem provers called classifiers to analyze the various declarations between sets, subsets, and relations in a given model. In this way the model can be validated and any inconsistent definitions flagged. The classifier can also infer new inf ormation, for example define new sets based on existing information and change the definition of existing sets based on new data. The level of flexibility is ideal for handling the ever changing world of the Internet. Classifier technology is built on top of languages such as the Web Ontology Language to allow a logical semantic level on to the existing Internet. This layer of is called the Semantic web . 12  13  Temporal logic is used for reasoning in concurrent systems . 14  See also  edit  Automated reasoning Computational logic Logic programming References  edit   Lewis, Harry R.  Christos H. Papadimitriou 1981. Elements of the Theory of Computation . Englewood Cliffs, New Jersey Prentice-Hall. ISBN   0-13-273417-6 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-positionright .1em ce nter.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-outpu t .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em  Davis, Martin . Influences of Mathematical Logic on Computer Science. In Rolf Herken ed.. The Universal Turing Machine . Springer Verlag . Retrieved 26 December 2013 .  Kennedy, Juliette. Interpreting Godel . Cambridge University Press . Retrieved 17 August 2015 .  Hofstadter, Douglas R. Gdel, Escher, Bach An Eternal Golden Braid . Basic Books. ISBN   978-0465026562 .  McCarthy, J  P.J. Hayes 1969. Some philosophical problems from the standpoint of artificial intelligence . Machine Intelligence . 4  463502.  Barr, Michael Charles Wells 1990. Category Theory for Computer . Prentice-Hall.  Newell, Allen J.C. Shaw H.C. Simon 1963. Empirical explorations with the logic theory machine. In Ed Feigenbaum ed.. Computers and Thought . McGraw Hill. pp.  109133. ISBN   978-0262560924 .  Levesque, Hector Ronald Brachman 1985. A Fundamental Tradeoff in Knowledge Representation and Reasoning. In Ronald Brachman and Hector J. Levesque ed.. Reading in Knowledge Representation . Morgan Kaufmann. p.  49. ISBN   0-934613-01-X . The good news in reducing KR service to theorem proving is that we now have a very clear, very specific notion of what the KR system should do the bad new is that it is also clear that the services can not be provided... deciding whether or not a sentence in FOL is a theorem... is unsolvable.  Forgy, Charles 1982. Rete A Fast Algorithm for the Many PatternMany Object Pattern Match Problem PDF . Artificial Intelligence . 19  1737. doi  10.10160004-37028290020-0 . Archived from the original PDF on 2013-12-27 . Retrieved 25 December 2013 . Cite uses deprecated parameter dead-url  help   Rich, Charles Richard C. Waters November 1987. The Programmers Apprentice Project A Research Overview PDF . IEEE Expert . Retrieved 26 December 2013 .  Stavridou, Victoria 1993. Formal Methods in Circuit Design . Press Syndicate of the University of Cambridge. ISBN   0-521-443369 . Retrieved 26 December 2013 .  MacGregor, Robert June 1991. Using a description classifier to enhance knowledge representation . IEEE Expert . 6 3 4146. doi  10.110964.87683 . Retrieved 10 November 2013 .  Berners-Lee, Tim  James Hendler Ora Lassila May 17, 2001. The Semantic Web A new form of Web content that is meaningful to computers will unleash a revolution of new possibilities . Scientific American . 284  3443. doi  10.1038scientificamerican0501-34 . Archived from the original on April 24, 2013. Cite uses deprecated parameter deadurl  help   Colin Stirling 1992. Modal and Temporal Logics. In S. Abramsky D. M. Gabbay T. S. E. Maibaum eds.. Handbook of Logic in Computer Science . II . Oxford University Press. pp.  477563. ISBN   0-19-853761-1 . Further reading  edit  Augusto, Luis M. 2017. Logical consequences. Theory and applications An introduction . London College Publications. ISBN   978-1-84890-236-7 . Ben-Ari, Mordechai 2003. Mathematical Logic for Computer Science 2nd ed.. Springer-Verlag . ISBN   1-85233-319-7 . Huth, Michael Ryan, Mark 2004. Logic in Computer Science Modelling and Reasoning about Systems 2nd ed.. Cambridge University Press . ISBN   0-521-54310-X . Burris, Stanley N. 1997. Logic for Mathematics and Computer Science . Prentice Hall . ISBN   0-13-285974-2 . External links  edit  Article on Logic and Artificial Intelligence at the Stanford Encyclopedia of Philosophy . IEEE Symposium on Logic in Computer Science LICS Alwen Tiu, Introduction to logic video recording of a lecture at ANU Logic Summer School 09 aimed mostly at computer scientists v t e Logic Outline History Fields Computer science Inference Philosophy of logic Proof Semantics Syntax Logics Classical Informal Critical thinking Reason Mathematical Non-classical Philosophical Theories Argumentation Metalogic Metamathematics Set Foundations Abduction Analytic and synthetic propositions Contradiction Paradox Antinomy Deduction Deductive closure Definition Description Entailment Linguistic Form Induction Logical truth Name Necessity and sufficiency Probability Reference Statement Substitution Truth Validity Lists topics Mathematical logic Boolean algebra Set theory other Logicians Rules of inference Paradoxes Fallacies Logic symbols Portal Category WikiProject   talk  changes Retrieved from  httpsen.wikipedia.orgwindex.phptitleLogic_in_computer_science oldid912954318  Categories  Formal methods Logic in computer science Hidden categories CS1 errors deprecated parameters Articles with short description