Team software process From Wikipedia, the free encyclopedia Jump to navigation Jump to search Software development Core activities Processes Requirements Design Engineering Construction Testing Debugging Deployment Maintenance Paradigms and models Agile Cleanroom Incremental Prototyping Spiral V model Waterfall Methodologies and frameworks ASD DevOps DAD DSDM FDD IID Kanban Lean SD LeSS MDD MSF PSP RAD RUP SAFe Scrum SEMAT TSP UP XP Supporting disciplines Configuration management Documentation Software quality assurance SQA Project management User experience Practices ATDD BDD CCO CI CD DDD PP SBE Stand-up TDD Tools Compiler Debugger Profiler GUI designer Modeling IDE Build automation Release automation Infrastructure as code Testing Standards and Bodies of Knowledge BABOK CMMI IEEE standards ISO 9001 ISOIEC standards PMBOK SWEBOK ITIL Glossaries Artificial intelligence Computer science Electrical and electronics engineering v t e In combination with the personal software process PSP, the team software process  TSP  provides a defined operational process framework that is designed to help teams of managers and engineers organize projects and produce software the principles products that range in size from small projects of several thousand lines of code KLOC to very large projects greater than half a million lines of code. The TSP is intended to improve the levels of quality and produ ctivity of a teams software development project, in order to help them better meet the cost and schedule commitments of developing a software system. 1  2  3  4  The initial version of the TSP was developed and piloted by Watts Humphrey in the late 1990s 5  and the Technical Report 6  for TSP sponsored by the U.S. Department of Defense was published in November 2000. The book by Watts Humphrey, 7  Introduction to the Team Software Process , presents a view of the TSP intended for use in academic settings, that focuses on the process of building a software production team, establishing team goals, distributing team roles, and other teamwork-related activities. Contents 1 Introduction to TSP 2 How TSP works 3 Latest developments 4 Publications 5 See also 6 References 7 External links Introduction to TSP  edit  The primary goal of TSP is to create a team environment for establishing and maintaining a self-directed team, and supporting disciplined individual work as a base of PSP framework. Self-directed team means that the team manages itself, plans and tracks their work, manages the quality of their work, and works proactively to meet team goals. TSP has two principal components tea m-building and team-working. Team-building is a process that defines roles for each team member and sets up teamwork through TSP launch and periodical relaunch. Team-working is a process that deals with engineering processes and practices utilized by the team. TSP, in short, provides engineers and managers with a way that establishes and manages their team to produce the high-q uality software on schedule and budget. How TSP works  edit  Before engineers can participate in the TSP, it is required that they have already learned about the PSP, so that the TSP can work effectively. Training is also required for other team members, the team lead and management. The TSP software development cycle begins with a planning process called the launch, led by a coach who has been specially trained, and is either certified or provisional. 8  9  The launch is designed to begin the team building process, and during this time teams and managers establish goals, define team roles, assess risks, estimate effort, allocate tasks, and produce a team plan. During an execution phase, developers track planned and actual effort, schedule, and defects meeting regularly usually weekly to report status and revise plans. A develo pment cycle ends with a Post Mortem to assess performance, revise planning parameters, and capture lessons learned for process improvement. The coach role focuses on supporting the team and the individuals on the team as the process expert while being independent of direct project management responsibility. 10  11  The team leader role is different from the coach role in that, team leaders are responsible to management for products and project outcomes while the coach is responsible for developing individual and team performance. 12  13  Latest developments  edit  TSP has been adapted to work with other types of knowledge work , including systems engineering 14  and services. 15  Mapping TSP to CMMI practices was documented in 2010, 16  and piloted as an alternative path to implement CMMI process improvement. 17  18  A body of knowledge BOK was issued in 2010. 19  The coach mentor program guidebook was released in 2010. 20  According to a study by Capers Jones TSP is one of the most successful development methodologies regarding schedule, quality and budget TCO 21  Publications  edit  TSP Leading a Development Team 2005 TSP Coaching Development Teams 2005 See also  edit  Personal software process PSP Watts Humphrey References  edit   Jones, Capers 2009. Software Engineering Best Practices . McGraw-Hill. p.  11. ISBN   9780071621618 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation . cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-po sitionright .1em center.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno -repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-o utput .cs1-registration,.mw-parser-output .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em  Kindler, Nosh B Krishnakanthan, Vasantha Tinaikar, Ranjit. Applying Lean to Application Development . McKinsey Quarterly, May 2007  Agile Capital Consulting . Archived from the original on July 3, 2017 . Retrieved July 3, 2017 . Cite uses deprecated parameter deadurl  help   Ker, J. I., Wang, Y., Hajli, M. N., Song, J.,  Ker, C. W. 2014. Deploying lean in healthcare Evaluating information technology effectiveness in US hospital pharmacies. International Journal of Information Management , 344, 556560.  McAndrews, Donald 1998. The Team Software ProcessSM TSPSM An Overview and Preliminary Results of Using Disciplined Practices . Cite journal requires journal  help   Humphrey, Watts. The Team Software Process PDF . Software Engineering Institute.  Humphrey, Watts 1999. Introduction to the Team Software Process . Addison Wesley.  Humphrey, Watts. The Team Software Process Body of Knowledge . Software Engineering Institute.  Chick, Timothy. Team Software Process TSP Coach Mentoring Program Guidebook Version 1.1 . Software Engineering Institute.  Humphrey, Watts. The Team Software Process Body of Knowledge . Software Engineering Institute.  Humphrey, Watts 2005. TSP Coaching Development Teams . Addison Wesley.  Humphrey, Watts. The Team Software Process Body of Knowledge . Software Engineering Institute.  Humphrey, Watts 2005. TSP Coaching Development Teams . Addison Wesley.  Carleton, Anita. Extending Team Software Process TSP to Systems Engineering A NAVAIR Experience Report PDF . Software Engineering Institute.  Battle, Ed. Leading  Learning  Using TSP at the MSG Level PDF . Naval Oceanographic Office.  James McHale, Timothy A. Chick and Eugene Miluk December 2010. Implementation Guidance for the Accelerated Improvement Method AIM PDF . Software Engineering Institute . Retrieved October 11, 2016 . CS1 maint uses authors parameter  link   Webb, David April 2007. CMMI Level 5 and the Team Software Process . Cross Talk .  Mondragon, Oscar. AIM Case Study PDF . Software Engineering Excellence Center.  Humphrey, Watts. The Team Software Process Body of Knowledge . Software Engineering Institute.  Chick, Timothy. Team Software Process TSP Coach Mentoring Program Guidebook Version 1.1 . Software Engineering Institute.  Jones, Capers 2013. Evaluating ten software development methodologies . Archived from the original on 29 June 2013. Cite uses deprecated parameter dead-url  help  External links  edit  TSP homepage Retrieved from  httpsen.wikipedia.orgwindex.phptitleTeam_software_process oldid895737345  Categories  Software development process Hidden categories CS1 errors deprecated parameters CS1 errors missing periodical CS1 maint uses authors parameter