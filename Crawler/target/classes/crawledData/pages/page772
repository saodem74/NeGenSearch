JOVIAL From Wikipedia, the free encyclopedia Jump to navigation Jump to search Programming language JOVIAL Paradigm procedural , imperative , structured Designed  by System Development Corporation Developer Software Engineering Associates, Inc. SEA First  appeared 1960 Major implementations mainframe, micro, PC, Mac OS X , Microsoft Windows , Linux , SPARC, PowerPC, 1750A, other legacy systems Influenced by ALGOL , SAGE Influenced CMS-2 , Coral 66 , and SYMPL JOVIAL is a high-level computer programming language similar to ALGOL , specialized for the development of embedded systems specialized computer systems designed to perform one or a few dedicated functions, usually embedded as part of a complete device including mechanical parts. It was a major system programming language through the 1960s and 70s. Contents 1 History 2 Influence 3 Features 4 Applications 5 Example 6 References 7 External links History  edit  JOVIAL was developed as a new high-order programming language beginning in 1959 by a team at System Development Corporation SDC headed by Jules Schwartz to compose software for the electronics of military aircraft. 1  The name JOVIAL is an acronym for  J ules O wn V ersion of the I nternational A lgorithmic L anguage The International Algorithmic Language IAL was a name originally proposed for ALGOL 58 . According to Schwartz the language was originally called OVIAL , but this met with opposition for various reasons. JOVIAL was then suggested, with no meaning attached to the J. Somewhat jokingly it was suggested that the language be named after Schwartz, since he was chairing the meeting, and this unofficial name stuck. 2  During the 1960s JOVIAL was a part of the US Military L-project series, in particular 465L the SACCS project, due to a lack of real-time processing languages available. Some 95 percent of the SACCS project, managed by ITT with software primarily written by SDC, was written in JOVIAL. The software project took two years and fewer than 1400 programmer years, less than half of the equivalent time in the SAGE L-project. 3  During the late 1970s and early 1980s, the U.S. Air Force adopted a standardized CPU , the MIL-STD-1750A , and subsequent JOVIAL programs were built for that processor. Several commercial vendors provided compilers and related tools to build JOVIAL for processors such as the MIL-STD-1750A, including Advanced Computer Techniques ACT, TLD Systems , Proprietary Software Systems PSS, and others. 4  5  JOVIAL was standardized during 1973 with MIL-STD-1589 and was revised during 1984 with MIL-STD-1589C . It is still much used to update and maintain software on older military vehicles and aircraft. There are three dialects in common use J3, J3B-2, and J73. As of 2010 update  , JOVIAL is no longer maintained and distributed by the USAF JOVIAL Program Office JPO. Software previously distributed by the JPO is still available through commercial resources at Software Engineering Associates, Inc. SEA as are other combinations of hosttarget processors including Microsoft Windows , Linux , Mac OS X on PowerPC , SPARC , VAX , 1750A , PowerPC , TI-9989 , Zilog Z800x , Motorola 680x0 and IBM System 360  System 370  System z . In addition DDC-I , which acquired parts of Advanced Computer Techniques, also still lists JOVIAL compilers and related tools. 6  Most software implemented in JOVIAL is mission critical , and maintenance is getting more difficult. In December 2014, it was reported that software derived from JOVIAL code produced in the 1960s was involved in a major failure of the United Kingdom s air traffic control infrastructure, and that the agency that uses it was having to train its IT staff in JOVIAL so they could maintain this software, which was not scheduled for replacement until 2016. 7  Conversion of JOVIAL code to new platforms is therefore becoming more common. JOVIAL rehosting and retargeting is currently done by Software Engineering Associates. Conversions of JOVIAL to other languages is currently done by Semantic Designs, whose DMS Software Reengineering Toolkit was used to convert some of the JOVIAL mission software for the B-2 bomber to C . 8  Influence  edit  Languages influenced by JOVIAL include CORAL , SYMPL , Space Programming Language SPL, and to some extent CMS-2 . 9  An interactive subset of JOVIAL called TINT, similar to JOSS was developed in the 1960s. 2  Features  edit  JOVIAL includes features not found in standard ALGOL, such as records , arrays of records, and inline assembly language . 10  Applications  edit  Notable systems using JOVIAL include Milstar Communications Satellite Advanced Cruise Missile B-52 , B-1B , 11  B-2 bombers  C-130 , C-141 , C-17 transport aircraft F-111 , F-15 , F-16 prior to Block 50, F-117 fighter aircraft LANTIRN U-2 aircraft Boeing E-3 Sentry AWACS aircraft Prior to Block 4045 Navy Aegis cruisers Army Multiple Launch Rocket System  MLRS  Army Sikorsky UH-60 Black Hawk helicopters F100 , F117 , F119 jet engines NORAD air defense  control system Hughes HME-5118ME system NATO Air Defence Ground Environment NADGE system RL10 rocket engines Civil NAS National Airspace System Air Traffic Control Airborne radar systems with embedded JOVIAL software include the APG-70 , APG-71 and APG-73 . 12  Example  edit  The following example is taken from COMPUTER PROGRAMMING MANUAL FOR THE JOVIAL J73 LANGUAGE. 13  PROC RETRIEVECODEVALUE BEGIN ITEM CODE U ITEM VALUE F VALUE  -99999. FOR I0 BY 1 WHILE I 1000 IF CODE  TABCODEI BEGIN VALUE  TABVALUEI EXIT END END This example defines a procedure named RETRIEVE which takes an unsigned integer input argument CODE and a floating-point output argument VALUE . It searches the 1000-element array TABCODE for an entry that matches CODE , and then sets the floating-point variable VALUE to the element of array TABVALUE having the same matching array index. If no matching element is found, VALUE is set to 99999.0 . References  edit   Oral History interview with Jules I. Schwartz , Charles Babbage Institute , University of Minnesota. Schwartz worked for the Rand Corporation on various defense related projects SAGE and JOHNNIAC in particular. When Rand organized the System Development Corporation , Schwartz went to the new company. For most of the interview, Schwartz describes his association with SAGE, his part in the computer laboratory work on timesharing for the ANFSQ-32 computer, computer networks, control system projects such as TDMS, and his interactions with J. C. R. Licklider , Lawrence G. Roberts , and Robert Saxton Taylor . He discusses his later position at Computer Sciences Corporation .  a b Schwartz, Jules I. August 8, 1978. The Development of Jovial PDF . ACM SIGPLAN Notices . 13 8 203. doi  10.1145960118.808385 . Retrieved January 28, 2015 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-positionright .1em ce nter.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-outpu t .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em  Campbell-Kelly, Martin. From airline reservations to Sonic the Hedgehog a history of the software industry Cambridge Mass The MIT Press, 2003 46-7. ISBN   0-262-03303-8 .  Oral history interview with Oscar Schachter , see p. 17. Charles Babbage Institute , University of Minnesota.  JOVIAL J73 and MIL-STD-1750A ISA Software Support Tools. AdaJOVIAL Newsletter . High Order Language Control Facility, Wright-Patterson AFB, U.S. Air Force. September 1993. pp.  2124.  Mature Development Systems, Field Proven on Hundreds of Applications . DDC-I . Retrieved January 10, 2016 .  Gordon Rayner December 12, 2014. UK flights chaos Air traffic control computers using software from the 1960s . Daily Telegraph . Retrieved 2014-12-14 .  Semantic Designs. Semantic Designs Aligns with Northrop Grumman to Modernize B-2 Spirit Bomber Software Systems . Retrieved January 28, 2015 .  U.S. Navy 1978, Digital Computer Basics Rate Training Manual, NAVEDTRA 10088-B , U.S. Navy  Halang, Wolfgang A. Stoyenko, Alexander D. 1991. Constructing Predictable Real Time Systems . Springer Verlag. p.  31. ISBN   978-1-4615-4032-8 .  Jovial to smooth U.S. Air Force shift to Ada . Defense Electronics . March 1, 1984. Archived from the original on 2012-10-12 . Retrieved January 28, 2015 . Cite uses deprecated parameter dead-url  help   ANAPG-73, Warfighters Encyclopedia Archived 2004-11-05 at the Wayback Machine  Softech, Inc. June 1981. COMPUTER PROGRAMMING MANUAL FOR THE JOVIAL J73 LANGUAGE PDF . Rome, NY ROME AIR DEVELOPMENT CENTER. p.  12 . Retrieved May 16, 2018 . External links  edit  The Development of Jovial MIL-STD-1589C, MILITARY STANDARD JOVIAL J73 PDF . United States Department of Defense . 6 Jul 1984. April 2006 archive of the JOVIAL Program Office Page on Jules Schwartz , including film of a humorous talk on the development of JOVIAL  dead link  DODSSP U.S. Department of Defense Single Stock Point for Military Specifications, Standards and Related Publications Software Engineering Associates DDC-I, Inc. DDC-I JOVIAL Compiler System DJCS Video of Jules Schwartz giving a humorous talk on the development of JOVIAL Retrieved from  httpsen.wikipedia.orgwindex.phptitleJOVIAL oldid913372166  Categories  Procedural programming languages Avionics programming languages Systems programming languages High Integrity Programming Language ALGOL 58 dialect Embedded systems Hidden categories CS1 errors deprecated parameters Webarchive template wayback links Articles with short description Articles containing potentially dated statements from 2010 All articles containing potentially dated statements All articles with dead external links Articles with dead external links from October 2010