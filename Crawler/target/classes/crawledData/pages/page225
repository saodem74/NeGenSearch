Template talkSoftware development process From Wikipedia, the free encyclopedia Jump to navigation Jump to search Contents 1 Where to use this template 2 XP  Agile 3 confused with MIS 4 Software engineering added in the title 5 A new Software Engineering Template 6 Some questions about the current template 6.1 The place of the template in the article 6.2 Models in software development 6.3 Process development models and methods 6.4 Process development methods 6.5 Further general comment 7 CMMCMMi 8 Executable UML and UML 9 This Template is Misleading 10 LAFABLE Where to use this template  edit  It seems to me that this template belongs on all the pages in the activities and models section, but not always the supporting disciplines -- some of the latter, like Project management , are more general than software. -- David.alex.lamb 2139, 23 February 2006 UTC XP  Agile  edit  Since eXtreme is an Agile method , why is it listed as a sub-process as opposed to say Scrum or any other other Agile methods and approaches -- Walter Grlitz 0429, 31 March 2006 UTC Only because it was much more commonly mentioned than other agile methods at the time I created the entry. If it is now no more common than any other, perhaps it should go -- but Im not inclined to do so myself just yet. David.alex.lamb 0725, 8 March 2007 UTC Well - someone should remove it, since right now the structure is wrong and misleading 84.112.16.84 1153, 15 April 2007 UTC confused with MIS  edit  So what is the difference between Software development process and Management Information System ... -- Ramu50  talk  2310, 19 August 2008 UTC One describes a process exclusively for developing software the other describes a process for managing information that may or may not include software development. Oicumayberight  talk  2030, 17 October 2008 UTC Software engineering added in the title  edit  I have readded Software engineering in the templates title. I think the Software development process is the hart of software engineering and visa versa. Templates like this should state its domain. I admit though, that the dubble title isnt perfect. Maybe it is a solution to recreate this template as a horizontal collapsable Software engineering template. This template will have the main scope, but will have the option to give a better overview of all aspects related to the Software development process. I think the current template is rather limited in scope. -- Marcel Douwe Dekker  talk  0829, 13 October 2008 UTC I strongly disagree  There are parts of the software development process that are obviously not the domain of engineering. In the book Great Software Debates , Alan M. Davis states in the chapter Requirements , subchapter The Missing Piece of Software Development   Students of engineering learn engineering and are rarely exposed to finance or marketing. Students of marketing learn marketing and are rarely exposed to finance or engineering. Most of us become specialists in just one area. To complicate matters, few of us meet interdisciplinary people in the workforce, so there are few roles to mimic. Yet, software product planning is critic al to the development success and absolutely requires knowledge of multiple disciplines. 1   Software engineering was listed in the template as a related discipline. By making it the title of the template, your implying that everything in the template every step of the software development process falls under the category of engineering, as if all product researchers, developers and marketers should report to someone with the title of software engineer. Oicumayberight  talk  2014, 17 October 2008 UTC I am not going to refer you again. I am going to replace this whole template by a software engineering template sone, but I am going to do some more research first. The problem here is not the software engineering in the title, but the whole very selective view the template is offering on the software development process. Now I already stated that I believe that the Software development process is the central issue software engineering . This is not just a related issue. Your reference to a subchapter in one book about software development debates makes no sense to me. There are dozens of introduction books about software engineering. Do you want to tell me, that those books are not about software engineering -- Marcel Douwe Dekker  talk  2153, 17 October 2008 UTC Im not denying that there are books about software engineering. That doesnt contradict the argument made by Alan Davis. If you are making the case that software engineering is part of the software development process, then I agree. If you are making the case that software development is summed up by software engineering, then I strongly disagree. Oicumayberight  talk  0835, 18 October 2008 UTC I dont know exactly what you mean with summed up. But stating that there are books about software engineering is rather an understatement. There is an over 40 years tradition here. If you are interested you should take a look at the original two The NATO Software Engineering Conferences - reports from 1968 and 1969 rapports. This already focusses on what they have called the systems development proces of large-scale software systems. In recent Software engineering study books you still find the similar scope. But I first going to study some more about want happened in the main time. -- Marcel Douwe Dekker  talk  1009, 18 October 2008 UTC In simple mathematical engineering terms Software Development  Software Engineering. Software Development  Software Engineering. Software Development  Software Engineering  Marketing  many other multidisciplinary skills. Oicumayberight  talk  0015, 19 October 2008 UTC This is just on theory, which doesnt fit the practice. I can show you a dozend Software Engineering books which introduces the field and are build around the Software development process. -- Marcel Douwe Dekker  talk  2020, 20 October 2008 UTC References  Alan M. Davis. Great Software Debates October 8, 2004, pp125-128 Wiley-IEEE Computer Society Press A new Software Engineering Template  edit  I designed a new Software Engineering Template to replace this template, see Template talkSoftware Engineering . -- Marcel Douwe Dekker  talk  2020, 20 October 2008 UTC I disagree that it should replace this template. This template is about a multidisciplinary process that includes software engineering but is not summed up by software engineering. Software engineering describes a skill that evolves much faster than any one process. You are doing both software engineers and those who work with software engineers a disservice by trying to monopo lize all the software development terminology under the umbrella of software engineering. Oicumayberight  talk  0300, 21 October 2008 UTC I have responded on the TalkSoftware engineering here -- Marcel Douwe Dekker  talk  1258, 21 October 2008 UTC You can try to oversimplify it by saying that software engineering is the main discipline. Im sure there are product developers and project managers that would disagree with you, but thats beside the point. The point is that software development is multidisciplinary. Youre trying to pull the disciplines of software development that have little to do with engineering under the umbrella of software engineering as if those functions are a less important subclass of engineering. The article and the template are titled software development process, not software engineering process. You are just in denial that development is broader in scope than engineering. Oicumayberight  talk  0007, 22 October 2008 UTC I have responded on the TalkSoftware engineering here -- Marcel Douwe Dekker  talk  0956, 22 October 2008 UTC This template was better the way it was because it laid it out in steps and was highly visible at the top for those who may have only been interested in a particular step. I know that software engineering is not a step-by-step process, so I think its futile to have the software engineering template replace the software development process template. There should be two separate templates, one for the broader software development process and the other for the field or skill of software engineering. Your oversimplifying both subjects by merging the templates. Oicumayberight  talk  2238, 22 October 2008 UTC I have responded on the TalkSoftware engineering here -- Marcel Douwe Dekker  talk  2341, 22 October 2008 UTC Some questions about the current template  edit  I have agreed to keep this template for now. I do think it shouldnt interfer with images such as in the Requirements analysis . These images should come first. Second question. I recently added a link to the data model article, which I think could better be removed again. If I am not mistaken all other items listed here are about models of the development process This off cause fitt the purpose of the template. Now data models are a different category of models, and should therefor better be removed Last but not least. The template now is giving a list of process development models But arent there a lot more process models here. A lot of older software development methodologies, for example Jackson System Development are also giving models of the development process. Now I am not sure about all new methodologies here. But isnt the current listing rather selective -- Marcel Douwe Dekker  talk  0107, 23 October 2008 UTC On the first question I think the way the template was handled on the requirements analysis page was fine. As long as that familiar template is there somewhere near the top for those who just want to quickly step through the articles. On the second question, Im not sure if data models should be removed, but I lean towards saying yes. Data models seem to be more related to data processing , more about using software than developing it. I know there is a gray area there which is summed up by database design and database development of database management systems which involve selecting the right software, configuring it and sometime programming scripts or APIs . On the third question, if there are articles for it, then maybe they should be included if there arent too many. If the processes are obsolete, then maybe the template can have a separate section for obsolete models. If some of those models have been made obsolete by newer models, then maybe those models should be merged with the articles of the newer model explaining the diff erence. If the articles are more than a dozen or two, then maybe all of them should be removed from the template and listed in the main article or even a separate article for obsolete models. Oicumayberight  talk  0144, 23 October 2008 UTC Thanks for your response. Again there are multiple items which I will take one at the time. -- Marcel Douwe Dekker  talk  1427, 23 October 2008 UTC The place of the template in the article  edit  A place of the template near the top is all right with me too. -- Marcel Douwe Dekker  talk  1427, 23 October 2008 UTC Models in software development  edit  The question I asked about the datamodel being listed is in fact part of problem I am working on to determine, what kind of diagramsmodels exist in the field of software engineering in particular and computer science in general For example I have raised the question here if the subjects of the Logical data model , Logical schema and Semantic data model are about one single subject, or if they are different. I just made a proposal to merge them in the Logical data model article, see TalkLogical data model . I am also active on WikiCommons, see for example here , where I have been restructuring all diagrams in the field of computer science. No I havent head an answer on the logical data model question yet And why not And why couldnt you give me a firm answer about datamodels should be listed or not I dont mean that you should have I think the main problem here is, that this is a rather undetermined field. There is no clear understanding and overview about models in software development. Now you have argued that I am trying to simplify things here. I am merely trying to get a more clear and differentiated view here. I think here is possible progress to be made. Some kind of overview could help -- Marcel Douwe Dekker  talk  1427, 23 October 2008 UTC Process development models and methods  edit  There is an other thing I dont understand in the listing of models in the template Agile    Cleanroom    Data model    Iterative    RAD    RUP    Spiral    Waterfall    XP    Scrum    V-Model They are all listed as models here. But for me there are two separate things The models of the software development process Spiral model, Waterfall model, V-Model And the other items listed exclusive datamodel, which I consider Development methodes containing a model of the development process. This is a differentation, I am trying to make in the software egineering template. -- Marcel Douwe Dekker  talk  1433, 23 October 2008 UTC Process development methods  edit  I already mentioned Jackson System Development as a Process development methods. Now I will like to take a closer look at what methods exist here. I was under the impression that there are dozends of them. I will get back on this. -- Marcel Douwe Dekker  talk  1437, 23 October 2008 UTC Further general comment  edit  Please comment on separate items and here with general comment. -- Marcel Douwe Dekker  talk  1437, 23 October 2008 UTC CMMCMMi  edit  Im curious, is there any reason CMMCMMi is not considered a software development process It seems to me that it is definitely a major player in the field. Ill add it if there is no opposition. Preceding unsigned comment added by Topkai22  talk  contribs  1854, 3 February 2009 UTC It has been placed into the section Standards and BOKs. -- Softzen  talk  1220, 21 August 2015 UTC Executable UML and UML  edit  I have just see here  replaced Executable UML by UML for the following reasons First, UML was not yet listed, and executable UML is just a single language in the UML family. If one of the UML family should be listed, it should be UML Second, there is no doubt Executable UML is notable, but it doesnt seem notable enough to be listed here. Other items listed like Scrum RAD DSDM RUP UML XP Agile have triggered a whole movement in the Software engineering community. It doesnt seem that Executable UML has a similar impact as other items listed. -- Mdd  talk  1911, 29 November 2012 UTC Your corrections are mistaken UML is not a development method, so it doesnt belong in the category. Executable UML is a major basis for the definition of MDA and is pretty much the basis for the new fUML initiative. It is disingenuous to argue that it either in its UML incarnation or as the Shlaer-Mellor method hasnt had significant impact on software developmentengineering. Lwriemen  talk  2009, 29 November 2012 UTC I am aware that UML is not a development method, and I already had my doubts including it in the set of development methods. So I removed it again for now. However, I am quite sure that Executable UML should not be listed here at the moment. Let us first try to solve the problems around that article. -- Mdd  talk  2057, 29 November 2012 UTC This Template is Misleading  edit  Activities and Steps. There is not, and has never been, a shred of empirical evidence that software development work can be meaningfully divided into the activities and steps listed in this template. These steps are channeling a RUPIBMPlan-Driven worldview. They represent a hyper-rationalized, oversimplified view of development as translated from an idealized engineering process. There are severa l theories of the software development process  SCI Theory, FBS Framework, Boomerang  that could be drawn on to improve, but I dont know how to fix this without changing about 20 different articles. Methodologies. Scrum is a project management framework. TDD is a practice. XP is a method. Iterative is class of methods that includes basically all of them. Agile is a philosophy or worldview, and a fuzzy category of methods. V and Dual Vee are hypothetical, academic methods that have never had any significant uptake. Dumping all of these into the same category is misleading  it implies fa lse equivalence. Supporting Disciplines. These look straight out of RUP to me. Anyone have any ideas for how to sort out this template Paul Ralph Lancaster University  talk  1956, 15 March 2013 UTC First, do not use edit link on a talk page unless you know what you are doing. Use the WP feature. Misleading or not, but the   misleading   ambox should not be transcluded to articles, which could suggest problems with either articles content or doubts about inclusion of the   Software development process   navbox to a particular article, which are not the case. Incnis Mrsi  talk  2015, 15 March 2013 UTC Splitting up into a new section Paradigms and models seems a sound solution. Done. -- Softzen  talk  1248, 21 August 2015 UTC LAFABLE  edit  The Large Agile Framework Appropriate for Big, Lumbering Enterprises parody website that Mike Cohn released as an April Fools joke some years back has made an appearance as an ostensibly valid link on the Scaled Agile Framework page and in the template for Software development processes . I have removed these with appropriate comments. Lets watch out for this coming back. Davidjcmorris  Talk   1915, 14 November 2017 UTC Retrieved from  httpsen.wikipedia.orgwindex.phptitleTemplate_talkSoftware_development_process oldid810439803 