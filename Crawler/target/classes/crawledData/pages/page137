Object model From Wikipedia, the free encyclopedia Jump to navigation Jump to search This article includes a list of references , related reading or external links , but its sources remain unclear because it lacks inline citations . Please help to improve this article by introducing more precise citations.  March 2010   Learn how and when to remove this template message  In computing , object model has two related but distinct meanings The properties of objects in general in a specific computer programming language , technology, notation or methodology that uses them. Examples are the object models of Java , the Component Object Model COM , or Object-Modeling Technique OMT . Such object models are usually defined using concepts such as class , generic function , message , inheritance , polymorphism , and encapsulation . There is an extensive literature on formalized object models as a subset of the formal semantics of programming languages . A collection of objects or classes through which a program can examine and manipulate some specific parts of its world. In other words, the object-oriented interface to some service or system. Such an interface is said to be the object model of the represented service or system. For example, the Document Object Model DOM 1 is a collection of objects that represent a page in a web browser , used by script programs to examine and dynamically change the page. There is a Microsoft Excel object model 2 for controlling Microsoft Excel from another program, and the ASCOM Telescope Driver 3 is an object model for controlling an astronomical telescope. An object model consists of the following important features Object Reference Objects can be accessed via object references. To invoke a method in an object, the object reference and method name are given, together with any arguments. Interfaces An interface provides a definition of the signature of a set of methods without specifying their implementation. An object will provide a particular interface if its class contains code that implement the method of that interface. An interface also defines types that can be used to declare the type of variables or parameters and return values of methods. Actions An action in object-oriented programming OOP is initiated by an object invoking a method in another object. An invocation can include additional information needed to carry out the method. The receiver executes the appropriate method and then returns control to the invoking object, sometimes supplying a result. Exceptions Programs can encounter various errors and unexpected conditions of varying seriousness. During the execution of the method many different problems may be discovered. Exceptions provide a clean way to deal with error conditions without complicating the code. A block of code may be defined to throw an exception whenever particular unexpected conditions or errors arise. This means that control passes to another block of code that catches the exception. See also  edit  Object-oriented programming Object-oriented analysis and design Object database Object Management Group Domain-driven design Eigenclass model Literature  edit  Weisfeld, Matt 2003. The Object-Oriented Thought Process 2nd Edition . Sams. ISBN   0-672-32611-6 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation . cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-po sitionright .1em center.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno -repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-o utput .cs1-registration,.mw-parser-output .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em Fowler, Martin 1996. Analysis Patterns Reusable Object Models . Addison-Wesley. ISBN   0-201-89542-0 . K. Fisher F. Honsell  J.C. Mitchell 1994. A Lambda Calculus of Objects and Method Specialization PDF . Nordic Journal of Computing . 1  337. Marini, Joe 2002. Document Object Model Processing Structured Documents . OsborneMcGray-Hill. ISBN   0-07-222436-3 . Lippman, Stanley 1996. Inside the C Object Model . Addison-Wesley Professional. ISBN   0-201-83454-5 . External links  edit  Document Object Model DOM The official W3C definition of the DOM. The Java Object Model The Ruby Object Model Data Structure in Detail Object Membership The core structure of object-oriented programming Object Model Features Matrix A representative sample of the design space of object models sense 1. ASCOM Standards web site v t e Software engineering Fields Computer programming Requirements engineering Software deployment Software design Software maintenance Software testing Systems analysis Formal methods Concepts Data modeling Enterprise architecture Functional specification Modeling language Orthogonality Programming paradigm Software Software archaeology Software architecture Software configuration management Software development methodology Software development process Software quality Software quality assurance Software verification and validation Structured analysis Orientations Agile Aspect-oriented Object orientation Ontology Service orientation SDLC Models Developmental Agile EUP Executable UML Incremental model Iterative model Prototype model RAD UP Scrum Spiral model V-Model Waterfall model XP Other SPICE CMMI Data model ER model Function model Information model Metamodeling Object model Systems model View model Languages IDEF UML USL SysML Software engineers Victor Basili Kent Beck Grady Booch Fred Brooks Barry Boehm Peter Chen Danese Cooper Ward Cunningham Tom DeMarco Edsger W. Dijkstra Delores M. Etter Martin Fowler Adele Goldstine Margaret Hamilton C. A. R. Hoare Lois Haibt Mary Jean Harrold Grace Hopper Watts Humphrey Michael A. Jackson Ivar Jacobson Alan Kay Nancy Leveson Stephen J. Mellor Bertrand Meyer David Parnas Trygve Reenskaug Winston W. Royce James Rumbaugh Mary Shaw Peri Tarr Elaine Weyuker Niklaus Wirth Edward Yourdon Related fields Computer science Computer engineering Project management Risk management Systems engineering Category Commons Retrieved from  httpsen.wikipedia.orgwindex.phptitleObject_model oldid901597472  Categories  Object-oriented programming Hidden categories Articles lacking in-text citations from March 2010 All articles lacking in-text citations