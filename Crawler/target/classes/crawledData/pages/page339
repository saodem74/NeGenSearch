Multiprocessing From Wikipedia, the free encyclopedia Jump to navigation Jump to search This article needs additional citations for verification . Please help improve this article by adding citations to reliable sources . Unsourced material may be challenged and removed. Find sources   Multiprocessing     news    newspapers    books    scholar    JSTOR  February 2014   Learn how and when to remove this template message  Multiprocessing is the use of two or more central processing units CPUs within a single computer system . 1  2  The term also refers to the ability of a system to support more than one processor or the ability to allocate tasks between them. There are many variations on this basic theme, and the definition of multiprocessing can vary with context, mostly as a function of how CPUs are defined  multiple cores on one die , multiple dies in one package , multiple packages in one system unit , etc.. According to some on-line dictionaries, a multiprocessor is a computer system having two or more processing units multiple processors each sharing main memory and peripherals, in order to simultaneously process programs. 3  4  A 2009 textbook defined multiprocessor system similarly, but noting that the processors may share some or all of the systems memory and IO facilities it also gave tightly coupled system as a synonymous term. 5  At the operating system level, multiprocessing is sometimes used to refer to the execution of multiple concurrent processes in a system, with each process running on a separate CPU or core, as opposed to a single process at any one instant. 6  7  When used with this definition, multiprocessing is sometimes contrasted with multitasking , which may use just a single processor but switch it in time slices between tasks i.e. a time-sharing system . Multiprocessing however means true parallel execution of multiple processes using more than one processor. 7  Multiprocessing doesnt necessarily mean that a single process or task uses more than one processor simultaneously the term parallel processing is generally used to denote that scenario. 6  Other authors prefer to refer to the operating system techniques as multiprogramming and reserve the term multiprocessing for the hardware aspect of having more than one processor. 2  8  The remainder of this article discusses multiprocessing only in this hardware sense. In Flynns taxonomy , multiprocessors as defined above are MIMD machines. 9  10  As they are normally construed to be tightly coupled share memory, multiprocessors are not the entire class of MIMD machines, which also contains message passing multicomputer systems. 9  Contents 1 Pre-history 2 Key topics 2.1 Processor symmetry 2.1.1 Masterslave multiprocessor system 2.2 Instruction and data streams 2.3 Processor coupling 2.3.1 Tightly coupled multiprocessor system 2.3.2 Loosely coupled multiprocessor system 3 See also 4 References Pre-history  edit  Possibly the first expression of the idea of multiprocessing was written by Luigi Federico Menabrea in 1842, about Charles Babbage s analytical engine as translated by Ada Lovelace  the machine can be brought into play so as to give several results at the same time, which will greatly abridge the whole amount of the processes. 11  Key topics  edit  Processor symmetry  edit  In a multiprocessing system, all CPUs may be equal, or some may be reserved for special purposes. A combination of hardware and operating system software design considerations determine the symmetry or lack thereof in a given system. For example, hardware or software considerations may require that only one particular CPU respond to all hardware interrupts, whereas all other work in the system may be distributed equally among CPUs or execution of kernel-mode code may be restricted to only one particular CPU, wherea s user-mode code may be executed in any combination of processors. Multiprocessing systems are often easier to design if such restrictions are imposed, but they tend to be less efficient than systems in which all CPUs are utilized. Systems that treat all CPUs equally are called symmetric multiprocessing SMP systems. In systems where all CPUs are not equal, system resources may be divided in a number of ways, including asymmetric multiprocessing ASMP, non-uniform memory access NUMA multiprocessing, and clustered multiprocessing. Masterslave multiprocessor system  edit  In a masterslave multiprocessor system, the master CPU is in control of the computer and the slave CPUs performs assigned tasks. The CPUs can be completely different in terms of speed and architecture. Some or all of the CPUs can have share common bus, each can also have a private bus for private resources, or they may be isolated except for a common communications pat hway. Likewise, the CPUs can share common RAM andor have private RAM that the other processors cannot access. The roles of master and slave can change from one CPU to another. An early example of a masterslave multiprocessor system is the TandyRadio Shack TRS-80 Model 16 desktop computer which came out in February 1982 and ran the multi-usermulti-tasking Xenix operating system, Microsofts version of UNIX called TRS-XENIX. The Model 16 has 3 microprocessors, an 8-bit Zilog Z80 CPU running at 4MHz, a 16-bit Motorola 68000 CPU running at 6MHz and an Intel 8021 in the keyboard. When the system was booted, the Z-80 was the master and the Xenix boot process initialized the slave 68000, and then transferred control to the 68000, whereupon the CPUs changed roles and the Z-80 became a slave processor that was responsible for all IO operations including disk, communications, printer and network, as well as the keyboard and integrated mon itor, while the operating system and applications ran on the 68000 CPU. The Z-80 could be used to do other tasks. The earlier TRS-80 Model II , which was released in 1979, could also be considered a multiprocessor system as it had both a Z-80 CPU and an Intel 8021 12  microprocessor in the keyboard. The 8021 made the Model II the first desktop computer system with a separate detachable lightweight keyboard connected with by a single thin flexible wire, and likely the first keyboard to use a dedicated microprocessor, both attributes that would later be copied years later by Apple and IBM. Instruction and data streams  edit  In multiprocessing, the processors can be used to execute a single sequence of instructions in multiple contexts  single-instruction, multiple-data or SIMD, often used in vector processing , multiple sequences of instructions in a single context  multiple-instruction, single-data or MISD, used for redundancy in fail-safe systems and sometimes applied to describe pipelined processors or hyper-threading , or multiple sequences of instructions in multiple contexts  multiple-instruction, multiple-data or MIMD. Processor coupling  edit  Tightly coupled multiprocessor system  edit  Tightly coupled multiprocessor systems contain multiple CPUs that are connected at the bus level. These CPUs may have access to a central shared memory SMP or UMA , or may participate in a memory hierarchy with both local and shared memory SM NUMA . The IBM p690 Regatta is an example of a high end SMP system. Intel Xeon processors dominated the multiprocessor market for business PCs and were the only major x86 option until the release of AMD s Opteron range of processors in 2004. Both ranges of processors had their own onboard cache but provided access to shared memory the Xeon processors via a common pipe and the Opteron processors via independent pathways to the system RAM . Chip multiprocessors, also known as multi-core computing, involves more than one processor placed on a single chip and can be thought of the most extreme form of tightly coupled multiprocessing. Mainframe systems with multiple processors are often tightly coupled. Loosely coupled multiprocessor system  edit  Main article shared nothing architecture Loosely coupled multiprocessor systems often referred to as clusters  are based on multiple standalone single or dual processor commodity computers interconnected via a high speed communication system  Gigabit Ethernet is common. A Linux Beowulf cluster is an example of a loosely coupled system. Tightly coupled systems perform better and are physically smaller than loosely coupled systems, but have historically required greater initial investments and may depreciate rapidly nodes in a loosely coupled system are usually inexpensive commodity computers and can be recycled as independent machines upon retirement from the cluster. Power consumption is also a consideration. Tightly coupled systems tend to be much more energy efficient than clusters. This is because considerable economy can be realized by designing components to work together from the beginning in tightly coupled systems, whereas loosely coupled systems use components that were not necessarily intended specifically for use in such systems. Loosely coupled systems have the ability to run different operating systems or OS versions on different systems. See also  edit  Symmetric multiprocessing Asymmetric multiprocessing Multi-core processor BMDFM  Binary Modular Dataflow Machine, a SMP MIMD runtime environment Software lockout OpenHMPP References  edit   Raj Rajagopal 1999. Introduction to Microsoft Windows NT Cluster Server Programming and Administration . CRC Press. p.  4. ISBN   978-1-4200-7548-9 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-positionright .1em ce nter.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-outpu t .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em  a b Mike Ebbers John Kettner Wayne OBrien Bill Ogden 2012. Introduction to the New Mainframe zOS Basics . IBM. p.  96. ISBN   978-0-7384-3534-3 .  Multiprocessor dictionary definition - multiprocessor defined . www.yourdictionary.com . Retrieved 16 March 2018 .  multiprocessor . Retrieved 16 March 2018  via The Free Dictionary.  Irv Englander 2009. The architecture of Computer Hardware and Systems Software. An Information Technology Approach 4th ed.. Wiley. p.  265. ISBN   978-0471715429 .  a b Deborah Morley Charles Parker 13 February 2012. Understanding Computers Today and Tomorrow, Comprehensive . Cengage Learning. p.  183. ISBN   1-133-19024-3 .  a b Shibu K. V. Introduction to Embedded Systems . Tata McGraw-Hill Education. p.  402. ISBN   978-0-07-014589-4 .  Ashok Arora 2006. Foundations of Computer Science . Laxmi Publications. p.  149. ISBN   978-81-7008-971-1 .  a b Ran Giladi 2008. Network Processors Architecture, Programming, and Implementation . Morgan Kaufmann. p.  293. ISBN   978-0-08-091959-1 .  Sajjan G. Shiva 20 September 2005. Advanced Computer Architectures . CRC Press. p.  221. ISBN   978-0-8493-3758-1 .  L. F. Menabrea October 1842. Sketch of The Analytical Engine Invented by Charles Babbage . Bibliothque Universelle de Genve 82. Likewise, when a long series of identical computations is to be performed, such as those required for the formation of numerical tables, the machine can be brought into play so as to give several results at the same time, which will greatly abridge the whole amount of the processes.  TRS-80 Model II Technical Reference Manual . Radio Shack. 1980. p.  135. v t e Parallel computing General Distributed computing Parallel computing Massively parallel Cloud computing High-performance computing Multiprocessing Manycore processor GPGPU Computer network Systolic array Levels Bit Instruction Thread Task Data Memory Loop Pipeline Multithreading Temporal Simultaneous SMT Speculative SpMT Preemptive Cooperative Clustered Multi-Thread CMT Hardware scout Theory PRAM model PEM Model Analysis of parallel algorithms Amdahls law Gustafsons law Cost efficiency KarpFlatt metric Slowdown Speedup Elements Process Thread Fiber Instruction window Array data structure Coordination Multiprocessing Memory coherency Cache coherency Cache invalidation Barrier Synchronization Application checkpointing Programming Stream processing Dataflow programming Models Implicit parallelism Explicit parallelism Concurrency Non-blocking algorithm Hardware Flynns taxonomy SISD SIMD SIMT MISD MIMD Dataflow architecture Pipelined processor Superscalar processor Vector processor Multiprocessor symmetric asymmetric Memory shared distributed distributed shared UMA NUMA COMA Massively parallel computer Computer cluster Grid computer Hardware acceleration APIs Ateji PX Boost.Thread Chapel Charm Cilk Coarray Fortran CUDA Dryad C AMP Global Arrays MPI OpenMP OpenCL OpenHMPP OpenACC TPL PLINQ PVM POSIX Threads RaftLib UPC TBB ZPL Problems Automatic parallelization Deadlock Livelock Deterministic algorithm Embarrassingly parallel Parallel slowdown Race condition Software lockout Scalability Starvation   Category parallel computing Media related to Parallel computing at Wikimedia Commons Retrieved from  httpsen.wikipedia.orgwindex.phptitleMultiprocessing oldid897534210  Categories  Parallel computing Classes of computers Computing terminology Hidden categories Use dmy dates from April 2014 Articles needing additional references from February 2014 All articles needing additional references