Network scheduler From Wikipedia, the free encyclopedia Jump to navigation Jump to search This article is about scheduling in networking. For scheduling in computing generally, see Scheduling computing . Packets queuing in a FIFO first in, first out data structure. A network scheduler , also called packet scheduler , queueing discipline , qdisc or queueing algorithm , is an arbiter on a node in packet switching communication network. It manages the sequence of network packets in the transmit and receive queues of the network interface controller . There are several network schedulers available for the different operating systems , that implement many of the existing network scheduling algorithms . The network scheduler logic decides which network packet to forward next. The network scheduler is associated with a queuing system, storing the network packets temporarily until they are transmitted. Systems may have a single or multiple queues in which case each may hold the packets of one flow , classification, or priority. In some cases it may not be possible to schedule all transmissions within the constraints of the system. In these cases the network scheduler is responsible for deciding which traffic to forward and what gets dropped . Contents 1 Algorithms 2 Bufferbloat 3 Terminology and responsibilities 4 Implementations 4.1 Linux kernel 4.2 BSD and OpenBSD 5 See also 6 Notes 7 References Algorithms  edit  In the course of time many network queueing disciplines have been developed. Each of these provides specific reordering or dropping of network packets inside various transmit or receive buffers . 1  2  Queuing disciplines are commonly used as attempts to compensate for various networking conditions, like reducing the latency for certain classes of network packets, and are generally used as part of quality of service QoS measures. 3  4  5  Examples of algorithms suitable for managing network traffic include AVQ  adaptive virtual queue  6  CBQ  class-based queueing  discipline CHOKe CHOose and Keep for responsive flows, CHOose and Kill for unresponsive flows is a variant of RED CoDel controlled delay and fairflow queue CoDel CAKE Common Applications Kept Enhanced, implemented in linux kernel 7  Credit-based fair queuing DRR  deficit round robin  and DWRR, implementation e.g. written by Patrick McHardy for the Linux kernel 8  and published under the GNU General Public License . FaQ FavourQueue 9  GCRA  generic cell rate algorithm  HFF  heavy-hitter filter  10  HFSC  hierarchical fair-service curve  HTB  hierarchical token bucket  11  QFQ  quick fair queueing  12  FQ  fair queuing  and WFQ  weighted fair queuing  FIFO  first in, first out  pkt_sched fq fair queue packet scheduler 13  NETEM network emulator 14  PIE  proportional integral controller enhanced  15  RED  random early detection  ARED  advanced random early detection  GRED  generalized random early detection  RRED  robust random early detection  WRED  weighted random early detection  RR  round-robin  and WRR  weighted round robin  SFB  stochastic fair blue  as well as RSFB resilient SFB SFQ stochastic fairness queuing 16  TBF  token bucket filter  17  TEQL  trivial link equalizer  Several of the above have been implemented as Linux kernel modules 18  and are freely available . Bufferbloat  edit  Bufferbloat is a phenomenon in packet-switched networks in which excess buffering of packets causes high latency and packet delay variation . Bufferbloat can be addressed by a network scheduler that strategically discards packets to avoid an unnecessarily high buffering backlog. Examples include CoDel and Random early detection . Terminology and responsibilities  edit  A network scheduler may have responsibility in implementation of specific network traffic control initiatives. Network traffic control is an umbrella term for all measures aimed at reducing congest, latency and packet loss. Specifically, active queue management AQM is the selective dropping of queued network packets to achieve the larger goal of preventing excessive network congestion. The scheduler must choose which packets to drop. Traffic shaping smooths the bandwidth requirements of traffic flows by delaying transmission packets when they are queued in bursts. The scheduler decides the timing for the transmitted packets. Quality of service is the prioritization of traffic based on service class  Differentiated services  or reserved connection  Integrated services . Implementations  edit  This section needs expansion . You can help by adding to it .  October 2018  Linux kernel  edit  The Linux kernels packet scheduler is part of the network stack, together with netfilter , nftables , and Berkeley Packet Filter . The Linux kernel packet scheduler is an integral part of the Linux kernels network stack and manages the transmit and receive ring buffers of all NICs, by working on the layer 2 of the OSI model and handling Ethernet frames , for example. The packet scheduler is configured using the utility called tc short for traffic control. As the default queuing discipline, the packet scheduler uses a FIFO implementation called pfifo_fast , 19  although systemd since its version 217 changes the default queuing discipline to fq_codel . 20  The ifconfig and ip utilities enable system administrators to configure the buffer sizes txqueuelen and rxqueuelen for each device separately in terms of number of Ethernet frames regardless of their size. The Linux kernels network stack contains several other buffers, which are not managed by the network scheduler. a  Berkeley Packet Filter filters can be attached to the packet schedulers classifiers. The eBPF functionality brought by version 4.1 of the Linux kernel in 2015 extends the classic BPF programmable classifiers to eBPF. 21  These can be compiled using the LLVM eBPF backend and loaded into a running kernel using the tc utility. 22  BSD and OpenBSD  edit  ALTQ is the implementation of a network scheduler for BSDs . As of OpenBSD version 5.5 ALTQ was replaced by the HFSC scheduler. See also  edit  Network congestion Queue abstract data type Queueing theory Statistical time division multiplexing Traffic shaping Traffic classification Type of service Notes  edit   The overall size of all buffers has been the point of critique by the Bufferbloat project, which provided a partial solution with CoDel that has been primarily tested in OpenWrt . References  edit   Traffic Control HOWTO Classless Queuing Disciplines qdiscs . tldp.org . Retrieved November 24, 2013 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation . cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-po sitionright .1em center.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno -repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-o utput .cs1-registration,.mw-parser-output .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em  Saravanan Radhakrishnan September 30, 1999. QoS Support in Linux Queuing Disciplines . qos.ittc.ku.edu . Retrieved March 18, 2014 .  Traffic Control HOWTO Components of Linux Traffic Control . tldp.org . Retrieved November 24, 2013 .  Traffic Control HOWTO Traditional Elements of Traffic Control . tldp.org . Retrieved November 24, 2013 .  Queuing Disciplines Order of Packet Transmission and Dropping PDF . tau.ac.il . October 25, 2006 . Retrieved March 18, 2014 .  httpciteseerx.ist.psu.eduviewdocdownloaddoi10.1.1.108.4477 reprep1 typepdf  Let them run CAKE . LWN.net .  DRR Linux kernel network scheduler module . kernel.org . Retrieved 2013-09-07 .  FavorQueue a Parameterless Active Queue Management to Improve TCP Traffic Performance PDF .  Heavy-Hitter Filter qdisc . kernel.org .  HTB Linux kernel network scheduler module . kernel.org . Retrieved 2013-09-07 .  QFQ Linux kernel network scheduler module . kernel.org . Retrieved 2013-09-07 .  Fair Queue packet scheduler committed to Linux kernel 3.12 .  Network emulator Linux kernel network scheduler module . kernel.org . Retrieved 2013-09-07 .  Proportional Integral controller Enhanced PIE . kernel.org .  SFQ Linux kernel network scheduler module . kernel.org . Retrieved 2013-09-07 .  TBF Linux kernel network scheduler module . kernel.org . Retrieved 2013-09-07 .  The Linux kernel network scheduler . kernel.org . 2012-12-26 . Retrieved 2013-09-07 .  Linux Advanced Routing and Traffic Control HOWTO, Section 9.2.1. pfifo_fast . lartc.org . 2012-05-19 . Retrieved 2014-09-19 .  systemd System and Service Manager NEWS file . freedesktop.org . 2015-05-22 . Retrieved 2015-06-09 .  Linux kernel 4.1, Section 11. Networking . kernelnewbies.org . 2015-06-21.  BPF and XDP Reference Guide . Cilium documentation web site . v t e Computer science Note This template roughly follows the 2012 ACM Computing Classification System . Hardware Printed circuit board Peripheral Integrated circuit Very Large Scale Integration Systems on Chip SoCs Energy consumption Green computing Electronic design automation Hardware acceleration Computer systems organization Computer architecture Embedded system Real-time computing Dependability Networks Network architecture Network protocol Network components Network scheduler Network performance evaluation Network service Software organization Interpreter Middleware Virtual machine Operating system Software quality Software notations and tools Programming paradigm Programming language Compiler Domain-specific language Modeling language Software framework Integrated development environment Software configuration management Software library Software repository Software development Software development process Requirements analysis Software design Software construction Software deployment Software maintenance Programming team Open-source model Theory of computation Model of computation Formal language Automata theory Computational complexity theory Logic Semantics Algorithms Algorithm design Analysis of algorithms Algorithmic efficiency Randomized algorithm Computational geometry Mathematics of computing Discrete mathematics Probability Statistics Mathematical software Information theory Mathematical analysis Numerical analysis Information systems Database management system Information storage systems Enterprise information system Social information systems Geographic information system Decision support system Process control system Multimedia information system Data mining Digital library Computing platform Digital marketing World Wide Web Information retrieval Security Cryptography Formal methods Security services Intrusion detection system Hardware security Network security Information security Application security Humancomputer interaction Interaction design Social computing Ubiquitous computing Visualization Accessibility Concurrency Concurrent computing Parallel computing Distributed computing Multithreading Multiprocessing Artificial intelligence Natural language processing Knowledge representation and reasoning Computer vision Automated planning and scheduling Search methodology Control method Philosophy of artificial intelligence Distributed artificial intelligence Machine learning Supervised learning Unsupervised learning Reinforcement learning Multi-task learning Cross-validation Graphics Animation Rendering Image manipulation Graphics processing unit Mixed reality Virtual reality Image compression Solid modeling Applied computing E-commerce Enterprise software Computational mathematics Computational physics Computational chemistry Computational biology Computational social science Computational engineering Computational healthcare Digital art Electronic publishing Cyberwarfare Electronic voting Video games Word processing Operations research Educational technology Document management Book Category Portal Outline WikiProject Commons Retrieved from  httpsen.wikipedia.orgwindex.phptitleNetwork_scheduler oldid913806935  Categories  Linux kernel features Network performance Network scheduling algorithms Network theory Hidden categories Articles to be expanded from October 2018 All articles to be expanded Articles using small message boxes