V-Model From Wikipedia, the free encyclopedia Jump to navigation Jump to search For the version specific to software development, see V-Model software development . The V-model of the systems engineering process. 1  Software development Core activities Processes Requirements Design Engineering Construction Testing Debugging Deployment Maintenance Paradigms and models Agile Cleanroom Incremental Prototyping Spiral V model Waterfall Methodologies and frameworks ASD DevOps DAD DSDM FDD IID Kanban Lean SD LeSS MDD MSF PSP RAD RUP SAFe Scrum SEMAT TSP UP XP Supporting disciplines Configuration management Documentation Software quality assurance SQA Project management User experience Practices ATDD BDD CCO CI CD DDD PP SBE Stand-up TDD Tools Compiler Debugger Profiler GUI designer Modeling IDE Build automation Release automation Infrastructure as code Testing Standards and Bodies of Knowledge BABOK CMMI IEEE standards ISO 9001 ISOIEC standards PMBOK SWEBOK ITIL Glossaries Artificial intelligence Computer science Electrical and electronics engineering v t e The V-model is a graphical representation of a systems development lifecycle . It is used to produce rigorous development lifecycle models and project management models. The V-model falls into three broad categories, the German V-Modell , a general testing model and the US government standard. 2  The V-model summarizes the main steps to be taken in conjunction with the corresponding deliverables within computerized system validation framework, or project life cycle development. It describes the activities to be performed and the results that have to be produced during product development. The left side of the V represents the decomposition of requirements, and creation of system specifications. The right side of the V represents integration of parts and their validation. 3  4  5  6  7  However, requirements need to be validated first against the higher level requirements or user needs. Furthermore, there is also something as validation of system models e.g. FEM. This can partially be done at the left side also. To claim that validation only occurs at the right side may not be correct. The easiest way is to say that verification is always against the requir ements technical terms and validation always against the real world or the user needs. Validation can be expressed by the query Are you building the right thing and verification by Are you building it right Contents 1 Types 1.1 V-Modell 1.2 General testing 1.3 US government standard 2 Validation vs. verification 3 Objectives 4 V-model topics 4.1 Systems engineering and verification 4.2 The two streams 4.2.1 Specification stream 4.2.2 Testing stream 5 Applications 6 Advantages 7 Limits 8 See also 9 References 10 External links Types  edit  There are three general types of V-model. V-Modell  edit  The German V-Model V-Modell, the official project management methodology of the German government. It is roughly equivalent to PRINCE2 , but more directly relevant to software development. 8  The key attribute of using a V representation was to require proof that the products from the left-side of the V were acceptable by the appropriate test and integration organization implementing the right-side of the V. 9  10  11  General testing  edit  Throughout the testing community worldwide, the V-model is widely seen as a vaguer illustrative depiction of the software development process as described in the International Software Testing Qualifications Board Foundation Syllabus for software testers. 12  There is no single definition of this model, which is more directly covered in the alternative article on the V-Model software development . US government standard  edit  The US also has a government standard V-model which dates back about 20 years like its German counterpart. Its scope is a narrower systems development lifecycle model, but far more detailed and more rigorous than most UK practitioners and testers would understand by the V-model. 13  14  3  4  15  16  Validation vs. verification  edit  It is sometimes said that validation can be expressed by the query Are you building the right thing and verification by Are you building it right In practice, the usage of these terms varies. The PMBOK guide , also adopted by the IEEE as a standard jointly maintained by INCOSE, the Systems engineering Research Council SERC, and IEEE Computer Society defines them as follows in its 4th edition 17   Validation. The assurance that a product, service, or system meets the needs of the customer and other identified stakeholders. It often involves acceptance and suitability with external customers. Contrast with verification .  Verification . The evaluation of whether or not a product, service, or system complies with a regulation, requirement, specification, or imposed condition. It is often an internal process. Contrast with validation . Objectives  edit  The V-model provides guidance for the planning and realization of projects. The following objectives are intended to be achieved by a project execution Minimization of project risks  The V-model improves project transparency and project control by specifying standardized approaches and describing the corresponding results and responsible roles. It permits an early recognition of planning deviations and risks and improves process management, thus reducing the project risk. Improvement and guarantee of quality  As a standardized process model, the V-Model ensures that the results to be provided are complete and have the desired quality. Defined interim results can be checked at an early stage. Uniform product contents will improve readability, understandability and verifiability. Reduction of total cost over the entire project and system life cycle  The effort for the development, production, operation and maintenance of a system can be calculated, estimated and controlled in a transparent manner by applying a standardized process model. The results obtained are uniform and easily retraced. This reduces the acquirers dependency on the supplier and the effort for subsequent activities and projects. Improvement of communication between all stakeholders  The standardized and uniform description of all relevant elements and terms is the basis for the mutual understanding between all stakeholders. Thus, the frictional loss between user, acquirer, supplier and developer is reduced. V-model topics  edit  Systems engineering and verification. 18  Systems engineering and verification  edit  The systems engineering process SEP provides a path for improving the cost-effectiveness of complex systems as experienced by the system owner over the entire life of the system, from conception to retirement. 1  It involved early and comprehensive identification of goals, a concept of operations that describes user needs and the operating environment, thorough and testable system requirements, detailed design, implementation, rigorous acceptance testing of the implemented system to ensure it meets the stated requirements system verification, measuring its effectiveness in addressing goals system validation, on-going operation and maintenance, system upgrades over time, and eventual retirement. 1  3  4  7  The process emphasizes requirements-driven design and testing. All design elements and acceptance tests must be traceable to one or more system requirements and every requirement must be addressed by at least one design element and acceptance test. Such rigor ensures nothing is done unnecessarily and everything that is necessary is accomplished. 1  3  The two streams  edit  Specification stream  edit  The specification stream mainly consists of User requirement specifications Functional requirement specifications Design specifications Testing stream  edit  The testing stream generally consists of Installation qualification IQ Operational qualification OQ Performance qualification PQ The development stream can consist depending on the system type and the development scope of customization, configuration or coding. Applications  edit  Off-Core alternatives illustrating upward and downward iterations and Time and Maturity dimension. Source - K. Forsberg and H. Mooz 2004 3  7  The V-model is used to regulate the software development process within the German federal administration. Nowadays it is still the standard for German federal administration and defense projects, as well as software developers within the region. The concept of the V-model was developed simultaneously, but independently, in Germany and in the United States in the late 1980s The German V-model was originally developed by IABG in Ottobrunn, near Munich, in cooperation with the Federal Office for Defense Technology and Procurement in Koblenz, for the Federal Ministry of Defense. It was taken over by the Federal Ministry of the Interior for the civilian public authorities domain in summer 1992. 19  The US V-model, as documented in the 1991 proceedings for the National Council on Systems Engineering NCOSE now INCOSE as of 1995, 7  was developed for satellite systems involving hardware, software, and human interaction. The V-model first appeared at Hughes Aircraft circa 1982 as part of the pre-proposal effort for the FAA Advanced Automation System AAS program. It eventually formed the test strategy for the Hughes AAS Design Competition Phase DCP proposal. It was created to show the test and integration approach which was driven by new challenges to surface latent defects in the software. The need for this new level of latent defect detection was driven by the goal to start automating the thinking and planning processes of the air traffic controller as envisioned by the automated enroute air traffic control AERA program. The reason the V is so powerful comes from the Hughes culture of coupling all text and analysis to multi dimensional images. It was the foundation of Sequential Thematic Organization of Publications STOP 20  created by Hughes in 1963 and used until Hughes was divested by the Howard Hughes Medical Institute in 1985. 21  The US Department of Defense puts the systems engineering process interactions into a V-model relationship. 22  It has now found widespread application in commercial as well as defense programs. Its primary use is in project management 3  4  and throughout the project lifecycle. One fundamental characteristic of the US V-model is that time and maturity move from left to right and one cannot move back in time. All iteration is along a vertical line to higher or lower levels in the system hierarchy, as shown in the figure. 3  4  7  This has proven to be an important aspect of the model. The expansion of the model to a dual-Vee concept is treated in reference. 3  As the V-model is publicly available many companies also use it. In project management it is a method comparable to PRINCE2 and describes methods for project management as well as methods for system development . The V-Model, while rigid in process, can be very flexible in application, especially as it pertains to the scope outside of the realm of the System Development Lifecycle normal parameters. Advantages  edit  These are the advantages V-model offers in front of other systems development models The users of the V-model participate in the development and maintenance of the V-model. A change control board publicly maintains the V-Model. The change control board meets anywhere from every day to weekly and processes all change requests received during system development and test. 23  The V-model provides concrete assistance on how to implement an activity and its work steps, defining explicitly the events needed to complete a work step each activity schema contains instructions, recommendations and detailed explanations of the activity. 24  Limits  edit  The following aspects are not covered by the V-model, they must be regulated in addition, or the V-Model must be adapted accordingly 25  26  The placing of contracts for services is not regulated. The organization and execution of operation, maintenance, repair and disposal of the system are not covered by the V-model. However, planning and preparation of a concept for these tasks are regulated in the V-model. The V-model addresses software development within a project rather than a whole organization. See also  edit  IBM Rational Unified Process as a supporting software process Systems architecture Systems design Theory U References  edit   a b c d Clarus Concept of Operations Archived 2009-07-05 at the Wayback Machine , Publication No. FHWA-JPO-05-072, Federal Highway Administration FHWA, 2005.  The Dangerous  Seductive V Model , accessed January 9, 2013.  a b c d e f g h Forsberg, K., Mooz, H., Cotterman, H. Visualizing Project Management, 3rd edition, John Wiley and Sons, New York, NY, 2005. Pages 108-116, 242-248, 341-360.  a b c d e International Council On Systems Engineering INCOSE, Systems Engineering Handbook Version 3.1, August 2007, pages 3.3 to 3.8  Forsberg, K., Mooz, H. 1998. System Engineering for Faster, Cheaper, Better PDF . Center of Systems Management. Archived from the original PDF on April 20, 2003. Cite journal requires journal  help  CS1 maint multiple names authors list  link  .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation . cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-po sitionright .1em center.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno -repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-o utput .cs1-registration,.mw-parser-output .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em  The SE VEE . SEOR, George Mason University. Archived from the original on October 18, 2007 . Retrieved May 26, 2007 . Cite uses deprecated parameter dead-url  help   a b c d e Forsberg, K. and Mooz, H., The Relationship of Systems Engineering to the Project Cycle Archived 2009-02-27 at the Wayback Machine , First Annual Symposium of the National Council On Systems Engineering NCOSE, October 1991  V-Modell site in German , accessed January 9, 2013.  German Directive 250, Software Development Standard for the German Federal Armed Forces, V-Model, Software Lifecycle Process Model, August 1992  Fundamentals of the V-Modell . Retrieved 14 Apr 2016 .  V-Modell XT, Part 1 Fundamentals of the V-Modell PDF . Retrieved 14 Apr 2016 .  International Software Testing Qualifications Board  Foundation Level Syllabus , accessed January 9, 2013.  Systems Engineering for Intelligent Transportation Systems PDF . US Dept. of Transportation. p.  10 . Retrieved June 9, 2007 .  US Dept of Transportation, Federal Highway Administration. Systems Engineering Guidebook for ITS , accessed January 9, 2013.  BUILDING ON A LEGACY RENEWED FOCUS ON SYSTEMS ENGINEERING IN DEFENSE ACQUISITION PDF . Retrieved 14 Apr 2016 .  Using V Models for Testing . Retrieved 14 Apr 2016 .  IEEE . IEEE Guide--Adoption of the Project Management Institute PMI Standard A Guide to the Project Management Body of Knowledge PMBOK Guide--Fourth Edition . p.  452. doi  10.1109IEEESTD.2011.6086685 . ISBN   978-0-7381-6817-3 . Retrieved December 7, 2012 .  Systems Engineering Fundamentals. Defense Acquisition University Press, 2001.  V-Model Lifecycle Process Model . v-modell.iabg.de. Archived from the original on March 3, 2016 . Retrieved December 24, 2015 . Cite uses deprecated parameter dead-url  help   Sequential Thematic Organization of Publications STOP . Archived from the original on February 3, 2008 . Retrieved December 24, 2015 . Cite uses deprecated parameter dead-url  help   Sobkiw, Walter 2008-01-01. Sustainable Development Possible with Creative System Engineering . ISBN   978-0615216300 .  A New Systems Engineering Model and an Old, Familiar Friend Figure 2 V-9 Process Interactions PDF . Defense AT L. Apr 2006. p.  51 . Retrieved 7 Apr 2016 .  Further Development of the V-Modell broken link . v-modell.iabg.de. Archived from the original on April 23, 2011 . Retrieved December 24, 2015 . Cite uses deprecated parameter dead-url  help   Overview of the Activity Model of the V-Modell broken link . v-modell.iabg.de. Archived from the original on July 19, 2011 . Retrieved December 24, 2015 . Cite uses deprecated parameter dead-url  help   Limits of the VModel . v-modell.iabg.de. Archived from the original on May 21, 2011 . Retrieved December 24, 2015 . Cite uses deprecated parameter dead-url  help   Christian Bucanac, The V-Model External links  edit  Wikimedia Commons has media related to V-models . INCOSE G2SEBOK 3.30 Vee Model of Systems Engineering Design and Integration . g2sebok.incose.org . International Council on Systems Engineering . Archived from the original on 2007-09-27. Das V-Modell XT . cio.bund.de in German. Federal Office for Information Security BMI. Using V Models for Testing . insights.sei.cmu.edu . Software Engineering Institute , Carnegie Mellon University . 11 November 2013. v t e Systems engineering Subfields Aerospace engineering Biological systems engineering Configuration management Earth systems engineering and management Electrical engineering Enterprise systems engineering Performance engineering Reliability engineering Safety engineering Processes Requirements engineering Functional specification System integration Verification and validation Design review Concepts Business process System System lifecycle V-Model Systems development life cycle Tools Decision-making Function modelling IDEF Optimization Quality function deployment System dynamics Systems Modeling Language Systems analysis Systems modeling Work breakdown structure People James S. Albus Ruzena Bajcsy Benjamin S. Blanchard Wernher von Braun Kathleen Carley Harold Chestnut Wolt Fabrycky Barbara Grosz Arthur David Hall III Derek Hitchins Robert E. Machol Radhika Nagpal Simon Ramo Joseph Francis Shea Katia Sycara Manuela M. Veloso John N. Warfield Related fields Control engineering Computer engineering Industrial engineering Operations research Project management Quality management Risk management Software engineering Category Retrieved from  httpsen.wikipedia.orgwindex.phptitleV-Model oldid914281746  Categories  Software project management Systems engineering Hidden categories Webarchive template wayback links CS1 errors missing periodical CS1 maint multiple names authors list CS1 errors deprecated parameters Commons category link is on Wikidata CS1 German-language sources de