Safety-critical system From Wikipedia, the free encyclopedia    Redirected from Safety-critical  Jump to navigation Jump to search This article needs additional citations for verification . Please help improve this article by adding citations to reliable sources . Unsourced material may be challenged and removed. Find sources   Safety-critical system     news    newspapers    books    scholar    JSTOR  April 2009   Learn how and when to remove this template message  A safety-critical system SCS 1  or life-critical system is a system whose failure or malfunction may result in one or more of the following outcomes 2  3  death or serious injury to people loss or severe damage to equipmentproperty environmental harm A safety-related system or sometimes safety-involved system  comprises everything hardware, software, and human aspects needed to perform one or more safety functions, in which failure would cause a significant increase in the safety risk for the people andor environment involved. 4  Safety-related systems are those that do not have full responsibility for controlling hazards such as loss of life, severe injury or severe environmental damage . The malfunction of a safety-involved system would only be that hazardous in conjunction with the failure of other systems or human error . Some safety organizations provide guidance on safety-related systems, for example the Health and Safety Executive HSE in the United Kingdom . 5  Risks of this sort are usually managed with the methods and tools of safety engineering . A safety-critical system is designed to lose less than one life per billion 10 9  hours of operation. 6  7  Typical design methods include probabilistic risk assessment , a method that combines failure mode and effects analysis FMEA with fault tree analysis . Safety-critical systems are increasingly computer -based. Contents 1 Reliability regimes 2 Software engineering for safety-critical systems 3 Examples of safety-critical systems 3.1 Infrastructure 3.2 Medicine 11  3.3 Nuclear engineering 13  3.4 Recreation 3.5 Transport 3.5.1 Railway 14  3.5.2 Automotive 16  3.5.3 Aviation 17  3.5.4 Spaceflight 18  4 See also 5 References 6 External links Reliability regimes  edit  Several reliability regimes for safety-critical systems exist Fail-operational systems continue to operate when their control systems fail. Examples of these include elevators , the gas thermostats in most home furnaces, and passively safe nuclear reactors . Fail-operational mode is sometimes unsafe. Nuclear weapons launch-on-loss-of-communications was rejected as a control system for the U.S. nuclear forces because it is fail-operational a loss of communications would cause launch, so this mode of operation was considered too risky. This is contrasted with the Fail-deadly behavior of the Perimeter system built during the Soviet era. 8  Fail-soft systems are able to continue operating on an interim basis with reduced efficiency in case of failure. 9  Most spare tires are an example of this They usually come with certain restrictions e.g. a speed restriction and lead to lower fuel economy. Another example is the Safe Mode found in most Windows operating systems. Fail-safe systems become safe when they cannot operate. Many medical systems fall into this category. For example, an infusion pump can fail, and as long as it alerts the nurse and ceases pumping, it will not threaten the loss of life because its safety interval is long enough to permit a human response. In a similar vein, an industrial or domestic burner controller can fail, but must fail in a safe mode i.e. turn combustion off when they detect faults. Famously, nuclear weapon systems that launch-on-command are fail-safe, because if the communications systems fail, launch cannot be commanded. Railway signaling is designed to be fail-safe. Fail-secure systems maintain maximum security when they cannot operate. For example, while fail-safe electronic doors unlock during power failures, fail-secure ones will lock, keeping an area secure. Fail-Passive systems continue to operate in the event of a system failure. An example includes an aircraft autopilot . In the event of a failure, the aircraft would remain in a controllable state and allow the pilot to take over and complete the journey and perform a safe landing. Fault-tolerant systems avoid service failure when faults are introduced to the system. An example may include control systems for ordinary nuclear reactors . The normal method to tolerate faults is to have several computers continually test the parts of a system, and switch on hot spares for failing subsystems. As long as faulty subsystems are replaced or repaired at normal maintenance intervals, these systems are considered safe. The computers, power supplies and control terminals used by human beings must all be duplicated in th ese systems in some fashion. Software engineering for safety-critical systems  edit  Software engineering for safety-critical systems is particularly difficult. There are three aspects which can be applied to aid the engineering software for life-critical systems. First is process engineering and management. Secondly, selecting the appropriate tools and environment for the system. This allows the system developer to effectively test the system by emulation and observe its effectiv eness. Thirdly, address any legal and regulatory requirements, such as FAA requirements for aviation. By setting a standard for which a system is required to be developed under, it forces the designers to stick to the requirements. The avionics industry has succeeded in producing standard methods for producing life-critical avionics software . Similar standards exist for automotive  ISO 26262 , Medical  IEC 62304  and nuclear  IEC 61513  industries. The standard approach is to carefully code, inspect, document, test, verify and analyze the system. Another approach is to certify a production system, a compiler , and then generate the systems code from specifications. Another approach uses formal methods to generate proofs that the code meets requirements. 10  All of these approaches improve the software quality in safety-critical systems by testing or eliminating manual steps in the development process, because people make mistakes, and these mistakes are the most common cause of potential life-threatening errors. Examples of safety-critical systems  edit  Infrastructure  edit  Circuit breaker Emergency services dispatch systems Electricity generation , transmission and distribution Fire alarm Fire sprinkler Fuse electrical Fuse hydraulic Telecommunications Burner Control systems Medicine 11   edit  The technology requirements can go beyond avoidance of failure, and can even facilitate medical intensive care which deals with healing patients, and also life support which is for stabilizing patients. Heart-lung machines Mechanical ventilation systems Infusion pumps and Insulin pumps Radiation therapy machines Robotic surgery machines Defibrillator machines Dialysis machines Devices that electronically monitor vital functions electrography especially, electrocardiography , ECG or EKG, and electroencephalography , EEG Medical imaging devices  X ray , computerized tomography - CT or CAT, different magnetic resonance imaging- MRI- techniques, positron emission tomography - PET Even healthcare information systems have significant safety implications 12  Nuclear engineering 13   edit  Nuclear reactor control systems Recreation  edit  Amusement rides Climbing equipment Parachutes SCUBA Equipment Transport  edit  Railway 14   edit  Railway signalling and control systems Platform detection to control train doors 15  Automatic train stop 15  Automotive 16   edit  Airbag systems Braking systems Seat belts Power Steering systems Advanced driver-assistance systems Electronic throttle control Battery management system for hybrids and electric vehicles Electric park brake Shift by wire systems Drive by wire systems Park by wire Aviation 17   edit  Air traffic control systems Avionics , particularly fly-by-wire systems Radio navigation RAIM Engine control systems Aircrew life support systems Flight planning to determine fuel requirements for a flight Spaceflight 18   edit  Human spaceflight vehicles Rocket range launch safety systems Launch vehicle safety Crew rescue systems Crew transfer systems See also  edit  Safety-related system Safety-Critical Systems Club Mission critical Reliability theory Reliable system design Redundancy engineering Factor of safety Nuclear reactor Biomedical engineering SAPHIRE risk analysis software Formal methods Therac-25 Zonal Safety Analysis References  edit   Safety-critical system . encyclopedia.com . Retrieved 15 April 2017 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation . cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-po sitionright .1em center.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno -repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-o utput .cs1-registration,.mw-parser-output .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em  Sommerville, Ian 2015. Software Engineering PDF . Pearson India. ISBN   978-9332582699 .  Sommerville, Ian. Critical systems . an Sommervilles book website . Retrieved 18 April 2018 .  FAQ  Edition 2.0 E Key concepts. IEC 61508  Functional Safety . International Electrotechnical Commission . Retrieved 23 October 2016 .  Part 1 Key guidance. Managing competence for safety-related systems PDF . UK Health and Safety Executive . 2007 . Retrieved 23 October 2016 .  AC 25.1309-1A  Bowen, Jonathan P. April 2000. The Ethics of Safety-Critical Systems. Communications of the ACM . 43 4. pp.  9197. doi  10.1145332051.332078 .  Inside the Apocalyptic Soviet Doomsday Machine . WIRED .  Definition fail-soft .  Bowen, Jonathan P. Stavridou, Victoria July 1993. Safety-critical systems, formal methods and standards. Software Engineering Journal . 8 4. IEEBCS. pp.  189209. doi  10.1049sej.1993.0025 .  Medical Device Safety System Design A Systematic Approach . mddionline.com .  Anderson RJ, Smith MF, editors. Confidentiality, Privacy and Safety of Healthcare Systems. Special edition of Health Informatics Journal, December 1998.  Safety of Nuclear Reactors . world-nuclear.org .  Safety-Critical Systems in Rail Transportation PDF . Rtos.com . Archived from the original PDF on 2013-12-19 . Retrieved 2016-10-23 . Cite uses deprecated parameter deadurl  help   a b 1  Safety-Critical Automotive Systems . sae.org .  Leanna Rierson. Developing Safety-Critical Software A Practical Guide for Aviation Software and DO-178C Compliance . ISBN   978-1-4398-1368-3 .  NASA Procedures and Guidelines   NPG 8705.2 PDF . Dept.aoe.vt.edu . June 19, 2003 . Retrieved 2016-10-23 . External links  edit  An Example of a Life-Critical System Safety-critical systems Virtual Library Explanation of Fail Operational and Fail Passive in Avionics Retrieved from  httpsen.wikipedia.orgwindex.phptitleSafety-critical_system oldid901480951  Categories  Engineering failures Formal methods Software quality Hazards Safety Risk analysis Safety engineering Computer systems Control engineering Systems engineering Hidden categories CS1 errors deprecated parameters Articles needing additional references from April 2009 All articles needing additional references