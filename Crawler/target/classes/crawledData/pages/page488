Computer science From Wikipedia, the free encyclopedia Jump to navigation Jump to search Study of the theoretical foundations of information and computation Computer sciences redirects here. For the American corporation, see Computer Sciences Corporation . Computer science deals with the theoretical foundations of computation and practical techniques for their application. Computer science History Outline Glossary Category Portal v t e Computer science sometimes called computation science or computing science , but not to be confused with computational science or software engineering  is the study of processes that interact with data and that can be represented as data in the form of programs . It enables the use of algorithms to manipulate , store , and communicate digital information . A computer scientist studies the theory of computation and the practice of designing software systems . 1  Its fields can be divided into theoretical and practical disciplines . Computational complexity theory is highly abstract, while computer graphics emphasizes real-world applications. Programming language theory considers approaches to the description of computational processes, while computer programming itself involves the use of programming languages and complex systems . Humancomputer interaction considers the challenges in making computers useful, usable, and accessible . .mw-parser-output .toclimit-2 .toclevel-1 ul,.mw-parser-output .toclimit-3 .toclevel-2 ul,.mw-parser-output .toclimit-4 .toclevel-3 ul,.mw-parser-output .toclimit-5 .toclevel-4 ul,.mw-parser-output .toclimit-6 .toclevel-5 ul,.mw-parser-output .toclimit-7 .toclevel-6 uldisplaynone Contents 1 History 1.1 Contributions 2 Etymology 3 Philosophy 4 Fields 4.1 Theoretical computer science 4.1.1 Data structures and algorithms 4.1.2 Theory of computation 4.1.3 Information and coding theory 4.1.4 Programming language theory 4.1.5 Formal methods 4.2 Computer systems 4.2.1 Computer architecture and computer engineering 4.2.2 Computer performance analysis 4.2.3 Concurrent, parallel and distributed systems 4.2.4 Computer networks 4.2.5 Computer security and cryptography 4.2.6 Databases 4.3 Computer applications 4.3.1 Computer graphics and visualization 4.3.2 Humancomputer interaction 4.3.3 Scientific computing 4.3.4 Artificial intelligence 4.4 Software engineering 5 Discoveries 6 Programming paradigms 7 Academia 8 Education 8.1 Challenges 9 See also 10 Notes 11 References 12 Further reading 12.1 Overview 12.2 Selected literature 12.3 Articles 12.4 Curriculum and classification 13 External links 13.1 Bibliography and academic search engines 13.2 Professional organizations 13.3 Misc History  edit  Main article History of computer science History of computing Hardware Hardware before 1960 Hardware 1960s to present Software Software Unix Free software and open-source software Computer science Artificial intelligence Compiler construction Computer science Operating systems Programming languages Prominent pioneers Software engineering Modern concepts General-purpose CPUs Graphical user interface Internet Laptops Personal computers Video games World Wide Web By country Bulgaria Poland Romania Soviet Bloc Soviet Union Yugoslavia Timeline of computing before 1950 19501979 19801989 19901999 20002009 20102019 more timelines ... Glossary of computer science Category v t e Charles Babbage , sometimes referred to as the father of computing. 2  Ada Lovelace is often credited with publishing the first algorithm intended for processing on a computer. 3  The earliest foundations of what would become computer science predate the invention of the modern digital computer . Machines for calculating fixed numerical tasks such as the abacus have existed since antiquity, aiding in computations such as multiplication and division. Algorithms for performing computations have existed since antiquity, even before the development of sophisticated computing equipment. Wilhelm Schickard designed and constructed the first working mechanical calculator in 1623. 4  In 1673, Gottfried Leibniz demonstrated a digital mechanical calculator, called the Stepped Reckoner . 5  He may be considered the first computer scientist and information theorist, for, among other reasons, documenting the binary number system. In 1820, Thomas de Colmar launched the mechanical calculator industry note 1  when he released his simplified arithmometer , which was the first calculating machine strong enough and reliable enough to be used daily in an office environment. Charles Babbage started the design of the first automatic mechanical calculator , his Difference Engine , in 1822, which eventually gave him the idea of the first programmable mechanical calculator , his Analytical Engine . 6  He started developing this machine in 1834, and in less than two years, he had sketched out many of the salient features of the modern computer. 7  A crucial step was the adoption of a punched card system derived from the Jacquard loom  7  making it infinitely programmable. note 2  In 1843, during the translation of a French article on the Analytical Engine, Ada Lovelace wrote, in one of the many notes she included, an algorithm to compute the Bernoulli numbers , which is considered to be the first published algorithm ever specifically tailored for implementation on a computer. 8  Around 1885, Herman Hollerith invented the tabulator , which used punched cards to process statistical information eventually his company became part of IBM . Following Babbage, although unaware of his earlier work, Percy Ludgate in 1909 published 9  the 2 nd of the only two designs for mechanical analytical engines in history. In 1937, one hundred years after Babbages impossible dream, Howard Aiken convinced IBM, which was making all kinds of punched card equipment and was also in the calculator business 10  to develop his giant programmable calculator, the ASCCHarvard Mark I , based on Babbages Analytical Engine, which itself used cards and a central computing unit. When the machine was finished, some hailed it as Babbages dream come true. 11  During the 1940s, as new and more powerful computing machines such as the AtanasoffBerry computer and ENIAC were developed, the term computer came to refer to the machines rather than their human predecessors. 12  As it became clear that computers could be used for more than just mathematical calculations, the field of computer science broadened to study computation in general. In 1945, IBM founded the Watson Scientific Computing Laboratory at Columbia University in New York City . The renovated fraternity house on Manhattans West Side was IBMs first laboratory devoted to pure science. The lab is the forerunner of IBMs Research Division, which today operates research facilities around the world. 13  Ultimately, the close relationship between IBM and the university was instrumental in the emergence of a new scientific discipline, with Columbia offering one of the first academic-credit courses in computer science in 1946. 14  Computer science began to be established as a distinct academic discipline in the 1950s and early 1960s. 15  16  The worlds first computer science degree program, the Cambridge Diploma in Computer Science , began at the University of Cambridge Computer Laboratory in 1953. The first computer science department in the United States was formed at Purdue University in 1962. 17  Since practical computers became available, many applications of computing have become distinct areas of study in their own rights. Although many initially believed it was impossible that computers themselves could actually be a scientific field of study, in the late fifties it gradually became accepted among the greater academic population. 18  19  It is the now well-known IBM brand that formed part of the computer science revolution during this time. IBM short for International Business Machines released the IBM 704 20  and later the IBM 709 21  computers, which were widely used during the exploration period of such devices. Still, working with the IBM computer was frustrating  if you had misplaced as much as one letter in one instruction, the program would crash, and you would have to start the whole process over again. 18  During the late 1950s, the computer science discipline was very much in its developmental stages, and such issues were commonplace. 19  Time has seen significant improvements in the usability and effectiveness of computing technology . 22  Modern society has seen a significant shift in the users of computer technology, from usage only by experts and professionals, to a near- ubiquitous user base. Initially, computers were quite costly, and some degree of humanitarian aid was needed for efficient usein part from professional computer operators. As computer adoption became more widespread and affordable, less human assistance was needed for common usage. See also History of computing and History of informatics Contributions  edit  The German military used the Enigma machine shown here during World War II for communications they wanted kept secret. The large-scale decryption of Enigma traffic at Bletchley Park was an important factor that contributed to Allied victory in WWII. 23  Despite its short history as a formal academic discipline, computer science has made a number of fundamental contributions to science and societyin fact, along with electronics , it is a founding science of the current epoch of human history called the Information Age and a driver of the information revolution , seen as the third major leap in human technological progress after the Industrial Revolution 17501850 CE and the Agricultural Revolution 80005000 BCE. These contributions include The start of the  Digital Revolution , which includes the current Information Age and the Internet . 24  A formal definition of computation and computability , and proof that there are computationally unsolvable and intractable problems. 25  The concept of a programming language , a tool for the precise expression of methodological information at various levels of abstraction. 26  In cryptography , breaking the Enigma code was an important factor contributing to the Allied victory in World War II. 23  Scientific computing enabled practical evaluation of processes and situations of great complexity, as well as experimentation entirely by software. It also enabled advanced study of the mind, and mapping of the human genome became possible with the Human Genome Project . 24  Distributed computing projects such as Foldinghome explore protein folding . Algorithmic trading has increased the efficiency and liquidity of financial markets by using artificial intelligence , machine learning , and other statistical and numerical techniques on a large scale. 27  High frequency algorithmic trading can also exacerbate volatility . 28  Computer graphics and computer-generated imagery have become ubiquitous in modern entertainment, particularly in television, cinema , advertising, animation and video games. Even films that feature no explicit CGI are usually filmed now on digital cameras , or edited or post-processed using a digital video editor. 29  30  Simulation of various processes, including computational fluid dynamics , physical, electrical, and electronic systems and circuits, as well as societies and social situations notably war games along with their habitats, among many others. Modern computers enable optimization of such designs as complete aircraft. Notable in electrical and electronic circuit design are SPICE, 31  as well as software for physical realization of new or modified designs. The latter includes essential design software for integrated circuits .  citation needed  Artificial intelligence is becoming increasingly important as it gets more efficient and complex. There are many applications of AI, some of which can be seen at home, such as robotic vacuum cleaners . It is also present in video games and on the modern battlefield in drones, anti-missile systems, and squad support robots . 32  Humancomputer interaction combines novel algorithms with design strategies that enable rapid human performance, low error rates, ease in learning, and high satisfaction. Researchers use ethnographic observation and automated data collection to understand user needs, then conduct usability tests to refine designs. Key innovations include the direct manipulation , selectable web links, touchscreen designs, mobile applications, and virtual reality . Etymology  edit  See also Informatics   Etymology Although first proposed in 1956, 19  the term computer science appears in a 1959 article in Communications of the ACM , 33  in which Louis Fein argues for the creation of a Graduate School in Computer Sciences analogous to the creation of Harvard Business School in 1921, 34  justifying the name by arguing that, like management science , the subject is applied and interdisciplinary in nature, while having the characteristics typical of an academic discipline. 33  His efforts, and those of others such as numerical analyst George Forsythe , were rewarded universities went on to create such departments, starting with Purdue in 1962. 35  Despite its name, a significant amount of computer science does not involve the study of computers themselves. Because of this, several alternative names have been proposed. 36  Certain departments of major universities prefer the term computing science , to emphasize precisely that difference. Danish scientist Peter Naur suggested the term datalogy , 37  to reflect the fact that the scientific discipline revolves around data and data treatment, while not necessarily involving computers. The first scientific institution to use the term was the Department of Datalogy at the University of Copenhagen, founded in 1969, with Peter Naur being the first professor in datalogy. The term is used mainly in the Scandinavian countries. An a lternative term, also proposed by Naur, is data science  this is now used for a multi-disciplinary field of data analysis, including statistics and databases. Also, in the early days of computing, a number of terms for the practitioners of the field of computing were suggested in the Communications of the ACM  turingineer , turologist , flow-charts-man , applied meta-mathematician , and applied epistemologist . 38  Three months later in the same journal, comptologist was suggested, followed next year by hypologist . 39  The term computics has also been suggested. 40  In Europe, terms derived from contracted translations of the expression automatic information e.g. informazione automatica in Italian or information and mathematics are often used, e.g. informatique French, Informatik German, informatica Italian, Dutch, informtica Spanish, Portuguese, informatika  Slavic languages and Hungarian  or pliroforiki   , which means informatics in Greek . Similar words have also been adopted in the UK as in the School of Informatics of the University of Edinburgh . 41  In the U.S., however, informatics is linked with applied computing, or computing in the context of another domain. 42  A folkloric quotation, often attributed tobut almost certainly not first formulated by Edsger Dijkstra , states that computer science is no more about computers than astronomy is about telescopes. note 3  The design and deployment of computers and computer systems is generally considered the province of disciplines other than computer science. For example, the study of computer hardware is usually considered part of computer engineering , while the study of commercial computer systems and their deployment is often called information technology or information systems . However, there has been much cross-fertilization of ideas between the various computer-related disciplines. Computer science research also often intersects other disciplines, such as philosophy, cognitive science , linguistics , mathematics , physics , biology , statistics , and logic . Computer science is considered by some to have a much closer relationship with mathematics than many scientific disciplines, with some observers saying that computing is a mathematical science. 15  Early computer science was strongly influenced by the work of mathematicians such as Kurt Gdel , Alan Turing , Rzsa Pter and Alonzo Church and there continues to be a useful interchange of ideas between the two fields in areas such as mathematical logic , category theory , domain theory , and algebra . 19  The relationship between Computer Science and Software Engineering is a contentious issue, which is further muddied by disputes over what the term Software Engineering means, and how computer science is defined. 43  David Parnas , taking a cue from the relationship between other engineering and science disciplines, has claimed that the principal focus of computer science is studying the properties of computation in general, while the principal focus of software engineering is the design of specific computations to achieve practical goals, making the two separate but complementary disciplines. 44  The academic, political, and funding aspects of computer science tend to depend on whether a department formed with a mathematical emphasis or with an engineering emphasis. Computer science departments with a mathematics emphasis and with a numerical orientation consider alignment with computational science . Both types of departments tend to make efforts to bridge the field educationally if not across all research. Philosophy  edit  Main article Philosophy of computer science A number of computer scientists have argued for the distinction of three separate paradigms in computer science. Peter Wegner argued that those paradigms are science, technology, and mathematics. 45  Peter Denning s working group argued that they are theory, abstraction modeling, and design. 46  Amnon H. Eden described them as the rationalist paradigm which treats computer science as a branch of mathematics, which is prevalent in theoretical computer science, and mainly employs deductive reasoning , the technocratic paradigm which might be found in engineering approaches, most prominently in software engineering, and the scientific paradigm which approaches computer-related artifacts from the empirical perspective of natural sciences , identifiable in some branches of artificial intelligence . 47  Fields  edit  .mw-parser-output .templatequoteoverflowhiddenmargin1em 0padding0 40px.mw-parser-output .templatequote .templatequoteciteline-height1.5emtext-alignleftpadding-left1.6emmargin-top0 Computer science is no more about computers than astronomy is about telescopes.  Michael Fellows Further information Outline of computer science As a discipline, computer science spans a range of topics from theoretical studies of algorithms and the limits of computation to the practical issues of implementing computing systems in hardware and software. 48  49  CSAB , formerly called Computing Sciences Accreditation Boardwhich is made up of representatives of the Association for Computing Machinery ACM, and the IEEE Computer Society IEEE CS 50  identifies four areas that it considers crucial to the discipline of computer science theory of computation , algorithms and data structures , programming methodology and languages , and computer elements and architecture . In addition to these four areas, CSAB also identifies fields such as software engineering, artificial intelligence, computer networking and communication, database systems, parallel computation, distributed computation, humancomputer interaction, computer graphics, operating systems, and numerical and symbolic computation as being important areas of computer science. 48  Theoretical computer science  edit  Main article Theoretical computer science Theoretical Computer Science is mathematical and abstract in spirit, but it derives its motivation from practical and everyday computation. Its aim is to understand the nature of computation and, as a consequence of this understanding, provide more efficient methodologies. All studies related to mathematical, logic and formal concepts and methods could be considered as theoretical computer science, provided that the motivation is clearly drawn from the field of computing . Data structures and algorithms  edit  Main articles Data structure and Algorithm Data structures and algorithms are the study of commonly used computational methods and their computational efficiency. O  n 2  Analysis of algorithms Algorithms Data structures Combinatorial optimization Computational geometry Theory of computation  edit  Main article Theory of computation According to Peter Denning , the fundamental question underlying computer science is, What can be efficiently automated 15  Theory of computation is focused on answering fundamental questions about what can be computed and what amount of resources are required to perform those computations. In an effort to answer the first question, computability theory examines which computational problems are solvable on various theoretical models of computation . The second question is addressed by computational complexity theory , which studies the time and space costs associated with different approaches to solving a multitude of computational problems. The famous P  NP problem, one of the Millennium Prize Problems , 51  is an open problem in the theory of computation. P  NP GNITIRW-TERCES Automata theory Computability theory Computational complexity theory Cryptography Quantum computing theory Information and coding theory  edit  Main articles Information theory and Coding theory Information theory is related to the quantification of information. This was developed by Claude Shannon to find fundamental limits on signal processing operations such as compressing data and on reliably storing and communicating data. 52  Coding theory is the study of the properties of codes systems for converting information from one form to another and their fitness for a specific application. Codes are used for data compression , cryptography , error detection and correction , and more recently also for network coding . Codes are studied for the purpose of designing efficient and reliable data transmission methods. 53  Programming language theory  edit  Main article Programming language theory Programming language theory is a branch of computer science that deals with the design, implementation, analysis, characterization, and classification of programming languages and their individual features . It falls within the discipline of computer science, both depending on and affecting mathematics , software engineering, and linguistics . It is an active research area, with numerous dedicated academic journals.   x  Int displaystyle Gamma vdash xtextInt Type theory Compiler design Programming languages Formal methods  edit  Main article Formal methods Formal methods are a particular kind of mathematically based technique for the specification , development and verification of software and hardware systems. 54  The use of formal methods for software and hardware design is motivated by the expectation that, as in other engineering disciplines, performing appropriate mathematical analysis can contribute to the reliability and robustness of a design. They form an important theoretical underpinning for software engineering, especially where safety or security is involved. Formal methods are a useful adjunct to software testing since they help avoid errors and can also give a framework for testing. For industrial use, tool support is required. However, the high cost of using formal methods means that they are usually only used in the development of high-integrity and life-critical systems , where safety or security is of utmost importance. Formal methods are best described as the application of a fairly broad variety of theoretical computer science fundamentals, in particular logic calculi, formal languages , automata theory , and program semantics , but also type systems and algebraic data types to problems in software and hardware specification and verification. Computer systems  edit  Computer architecture and computer engineering  edit  Main articles Computer architecture and Computer engineering Computer architecture, or digital computer organization, is the conceptual design and fundamental operational structure of a computer system. It focuses largely on the way by which the central processing unit performs internally and accesses addresses in memory. 55  The field often involves disciplines of computer engineering and electrical engineering, selecting and interconnecting hardware components to create computers that meet functional, performance, and cost goals. Digital logic Microarchitecture Multiprocessing Ubiquitous computing Systems architecture Operating systems Computer performance analysis  edit  Main articles Computer performance and Benchmark computing Computer performance analysis is the study of work flowing through computers with the general goals of improving throughput , controlling response time , using resources efficiently, eliminating bottlenecks , and predicting performance under anticipated peak loads. 56  Benchmarks are used to compare the performance of systems carrying different chips andor system architectures. 57  Concurrent, parallel and distributed systems  edit  Main articles Concurrency computer science and Distributed computing Concurrency is a property of systems in which several computations are executing simultaneously, and potentially interacting with each other. 58  A number of mathematical models have been developed for general concurrent computation including Petri nets , process calculi and the Parallel Random Access Machine model. 59  When multiple computers are connected in a network while using concurrency, this is known as a distributed system. Computers within that distributed system have their own private memory, and information can be exchanged to achieve common goals. 60  Computer networks  edit  Main article Computer network This branch of computer science aims to manage networks between computers worldwide. Computer security and cryptography  edit  Main articles Computer security and Cryptography Computer security is a branch of computer technology with an objective of protecting information from unauthorized access, disruption, or modification while maintaining the accessibility and usability of the system for its intended users. Cryptography is the practice and study of hiding encryption and therefore deciphering decryption information. Modern cryptography is largely related to computer science, for many encryption and decryption algorithms are based on their computational complexity. Databases  edit  Main article Database This article is missing information about a structured set of data held in a computer, especially one that is accessible in various ways. . Please expand the article to include this information. Further details may exist on the talk page .  September 2018  A database is intended to organize, store, and retrieve large amounts of data easily. Digital databases are managed using database management systems to store, create, maintain, and search data, through database models and query languages . Computer applications  edit  Computer graphics and visualization  edit  Main article Computer graphics computer science Computer graphics is the study of digital visual contents and involves the synthesis and manipulation of image data. The study is connected to many other fields in computer science, including computer vision , image processing , and computational geometry , and is heavily applied in the fields of special effects and video games . Humancomputer interaction  edit  Main article Humancomputer interaction Research that develops theories, principles, and guidelines for user interface designers, so they can create satisfactory user experiences with desktop, laptop, and mobile devices. Scientific computing  edit  Scientific computing or computational science  is the field of study concerned with constructing mathematical models and quantitative analysis techniques and using computers to analyze and solve scientific problems. In practical use, it is typically the application of computer simulation and other forms of computation to problems in various scientific disciplines. Numerical analysis Computational physics Computational chemistry Bioinformatics Artificial intelligence  edit  Main article Artificial intelligence Artificial intelligence AI aims to or is required to synthesize goal-orientated processes such as problem-solving, decision-making, environmental adaptation, learning, and communication found in humans and animals. From its origins in cybernetics and in the Dartmouth Conference 1956, artificial intelligence research has been necessarily cross-disciplinary, drawing on areas of expertise such as applied mathematics , symbolic logic , semiotics , electrical engineering , philosophy of mind , neurophysiology , and social intelligence . AI is associated in the popular mind with robotic development , but the main field of practical application has been as an embedded component in areas of software development , which require computational understanding. The starting point in the late 1940s was Alan Turing s question Can computers think, and the question remains effectively unanswered, although the Turing test is still used to assess computer output on the scale of human intelligence. But the automation of evaluative and predictive tasks has been increasingly successful as a substitute for human monitoring and intervention in domains of computer application involving complex real-world data. Machine learning Computer vision Image processing Pattern recognition Data mining Evolutionary computation Knowledge representation and reasoning Natural language processing Robotics Software engineering  edit  Main article Software engineering See also Computer programming Software engineering is the study of designing, implementing, and modifying software in order to ensure it is of high quality, affordable, maintainable, and fast to build. It is a systematic approach to software design, involving the application of engineering practices to software. Software engineering deals with the organizing and analyzing of softwareit doesnt just deal wi th the creation or manufacture of new software, but its internal maintenance and arrangement. Discoveries  edit  The philosopher of computing Bill Rapaport noted three Great Insights of Computer Science  61  Gottfried Wilhelm Leibniz s, George Boole s, Alan Turing s, Claude Shannon s, and Samuel Morse s insight there are only two objects that a computer has to deal with in order to represent anything. note 4  All the information about any computable problem can be represented using only 0 and 1 or any other bistable pair that can flip-flop between two easily distinguishable states, such as onoff, magnetizedde-magnetized, high-voltagelow-voltage, etc.. See also Digital physics Alan Turing s insight there are only five actions that a computer has to perform in order to do anything. Every algorithm can be expressed in a language for a computer consisting of only five basic instructions 62  move left one location move right one location read symbol at current location print 0 at current location print 1 at current location. See also Turing machine Corrado Bhm and Giuseppe Jacopini s insight there are only three ways of combining these actions into more complex ones that are needed in order for a computer to do anything. 63  Only three rules are needed to combine any set of basic instructions into more complex ones sequence  first do this, then do that selection  IF such-and-such is the case, THEN do this, ELSE do that repetition  WHILE such-and-such is the case DO this. Note that the three rules of Boehms and Jacopinis insight can be further simplified with the use of goto which means it is more elementary than structured programming . See also Elementary function arithmetic   Friedmans grand conjecture Programming paradigms  edit  Main article Programming paradigm Programming languages can be used to accomplish different tasks in different ways. Common programming paradigms include Functional programming , a style of building the structure and elements of computer programs that treats computation as the evaluation of mathematical functions and avoids state and mutable data. It is a declarative programming paradigm, which means programming is done with expressions or declarations instead of statements. 64  Imperative programming , a programming paradigm that uses statements that change a programs state. 65  In much the same way that the imperative mood in natural languages expresses commands, an imperative program consists of commands for the computer to perform. Imperative programming focuses on describing how a program operates. Object-oriented programming , a programming paradigm based on the concept of objects, which may contain data, in the form of fields, often known as attributes and code, in the form of procedures, often known as methods. A feature of objects is that an objects procedures can access and often modify the data fields of the object with which they are associated. Thus Object-oriented computer programs are made out of objects that interact with one another. 66  Many languages offer support for multiple paradigms, making the distinction more a matter of style than of technical capabilities. 67  Academia  edit  Further information List of computer science conferences and CategoryComputer science journals Conferences are important events for computer science research. During these conferences, researchers from the public and private sectors present their recent work and meet. Unlike in most other academic fields, in computer science, the prestige of conference papers is greater than that of journal publications. 68  69  One proposed explanation for this is the quick development of this relatively new field requires rapid review and distribution of results, a task better handled by conferences than by journals. 70  Education  edit  Computer Science , known by its near synonyms, Computing , Computer Studies , Information Technology IT and Information and Computing Technology ICT, has been taught in UK schools since the days of batch processing , mark sensitive cards and paper tape but usually to a select few students. 71  In 1981, the BBC produced a micro-computer and classroom network and Computer Studies became common for GCE O level students 1116-year-old, and Computer Science to A level students. Its importance was recognised, and it became a compulsory part of the National Curriculum , for Key Stage 3  4. In September 2014 it became an entitlement for all 7,000,000 pupils over the age of 4. 72  In the US , with 14,000 school districts deciding the curriculum, provision was fractured. 73  According to a 2010 report by the Association for Computing Machinery ACM and Computer Science Teachers Association CSTA, only 14 out of 50 states have adopted significant education standards for high school computer science. 74  Israel, New Zealand, and South Korea have included computer science in their national secondary education curricula, 75  76  and several others are following. 77  Challenges  edit  In many countries, there is a significant gender gap in computer science education. In 2012, only 20 percent of computer science degrees in the United States were awarded to women. 78  The gender gap is also a problem in other western countries. 79  The gap is smaller, or nonexistent, in some parts of the world. In 2011, women earned half of the computer science degrees in Malaysia . 80  In 2001, 55 percent of computer science graduates in Guyana were women. 79  See also  edit  Main articles Glossary of computer science and Outline of computer science Computer science portal Information technology List of computer scientists List of important publications in computer science List of pioneers in computer science List of unsolved problems in computer science List of terms relating to algorithms and data structures Software engineering Computer science  Wikipedia book Notes  edit   In 1851  The introduction of punched cards into the new engine was important not only as a more convenient form of control than the drums, or because programs could now be of unlimited extent, and could be stored and repeated without the danger of introducing errors in setting the machine by hand it was important also because it served to crystallize Babbages feeling that he had inve nted something really new, something much more than a sophisticated calculating machine. Bruce Collier , 1970  See the entry  Computer science  on Wikiquote for the history of this quotation.  The word anything is written in quotation marks because there are things that computers cannot do. One example is to answer the question if an arbitrary given computer program will eventually finish or run forever the Halting problem . References  edit   WordNet Search3.1 . Wordnetweb.princeton.edu . Retrieved May 14, 2012 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation . cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-po sitionright .1em center.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno -repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-o utput .cs1-registration,.mw-parser-output .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em  Charles Babbage Institute Who Was Charles Babbage . cbi.umn.edu . Retrieved December 28, 2016 .  Ada Lovelace  Babbage Engine  Computer History Museum . www.computerhistory.org . Retrieved December 28, 2016 .  Wilhelm Schickard  Ein Computerpionier PDF in German.  Keates, Fiona June 25, 2012. A Brief History of Computing . The Repository . The Royal Society.  Science MuseumIntroduction to Babbage . Archived from the original on September 8, 2006 . Retrieved September 24, 2006 .  a b Anthony Hyman 1982. Charles Babbage, pioneer of the computer .  A Selection and Adaptation From Adas Notes found in Ada, The Enchantress of Numbers, by Betty Alexandra Toole Ed.D. Strawberry Press, Mill Valley, CA . Archived from the original on February 10, 2006 . Retrieved May 4, 2006 . Cite uses deprecated parameter deadurl  help   The John Gabriel Byrne Computer Science Collection  In this sense Aiken needed IBM, whose technology included the use of punched cards, the accumulation of numerical data, and the transfer of numerical data from one register to another, Bernard Cohen , p.44 2000  Brian Randell , p. 187, 1975  The Association for Computing Machinery ACM was founded in 1947.  IBM Archives 1945 . Ibm.com . Retrieved March 19, 2019 .  IBM100  The Origins of Computer Science . Ibm.com. September 15, 1995 . Retrieved March 19, 2019 .  a b c Denning, Peter J. 2000. Computer Science The Discipline PDF . Encyclopedia of Computer Science . Archived from the original PDF on May 25, 2006.  Some EDSAC statistics . University of Cambridge . Retrieved November 19, 2011 .  Computer science pioneer Samuel D. Conte dies at 85 . Purdue Computer Science. July 1, 2002 . Retrieved December 12, 2014 .  a b Levy, Steven 1984. Hackers Heroes of the Computer Revolution . Doubleday. ISBN   978-0-385-19195-1 .  a b c d Tedre, Matti 2014. The Science of Computing Shaping a Discipline . Taylor and Francis  CRC Press.  IBM 704 Electronic Data Processing SystemCHM Revolution . Computerhistory.org . Retrieved July 7, 2013 .  IBM 709 a powerful new data processing system PDF . Computer History Museum. Archived from the original PDF on March 4, 2016 . Retrieved December 12, 2014 . Cite uses deprecated parameter dead-url  help   Timeline of Computer History . Computer History Museum . Retrieved November 24, 2015 .  a b David Kahn , The Codebreakers , 1967, ISBN   0-684-83130-9 .  a b Computer Science   Achievements and Challenges circa 2000 PDF . Archived from the original PDF on September 11, 2006 . Retrieved January 11, 2007 . Cite uses deprecated parameter deadurl  help   Constable, R.L. March 2000. Computer Science Achievements and Challenges circa 2000 PDF . Cite journal requires journal  help   Abelson, H.  G.J. Sussman with J. Sussman 1996. Structure and Interpretation of Computer Programs 2nd ed.. MIT Press. ISBN   978-0-262-01153-2 . The computer revolution is a revolution in the way we think and in the way we express what we think. The essence of this change is the emergence of what might best be called procedural epistemology  the study of the structure of knowledge from an imperative point of view, as opposed to the more declarative point of view taken by classical mathematical subjects.  Black box traders are on the march . The Telegraph . August 26, 2006. Archived from the original on June 21, 2008. Cite uses deprecated parameter deadurl  help   Kirilenko, Andrei A. Kyle, Albert S. Samadi, Mehrdad Tuzun, Tugkan January 6, 2017. The Impact of High Frequency Trading on an Electronic Market. Papers.ssrn.com. doi  10.2139ssrn.1686004 . SSRN   1686004 . Cite journal requires journal  help   Maly, Timy January 30, 2013. How Digital Filmmakers Produced a Gorgeous Sci-Fi Movie on a Kickstarter Budget . Wired . Retrieved November 24, 2015 .  Matthau, Charles January 8, 2015. How Tech Has Shaped Film Making The Film vs. Digital Debate Is Put to Rest . Wired . Retrieved November 24, 2015 .  Muhammad H. Rashid, 2016. SPICE for Power Electronics and Electric Power. CRC Press. p. 6. ISBN   978-1-4398-6047-2 .  Marko B. Popovic, 2019. Biomechatronics. Elsevier Science. p. 501. ISBN   978-0-12-813041-4 .  a b Louis Fine 1959. The Role of the University in Computers, Data Processing, and Related Fields. Communications of the ACM . 2 9 714. doi  10.1145368424.368427 .  Stanford University Oral History . Stanford University . Retrieved May 30, 2013 .  Donald Knuth 1972. George Forsythe and the Development of Computer Science . Comms. ACM . Archived October 20, 2013, at the Wayback Machine  Matti Tedre 2006. The Development of Computer Science A Sociocultural Perspective PDF . p.  260 . Retrieved December 12, 2014 .  Peter Naur 1966. The science of datalogy. Communications of the ACM . 9 7 485. doi  10.1145365719.366510 .  Weiss, E.A. Corley, Henry P.T. Communications of the ACM. Communications of the ACM . 1 4 6. doi  10.1145368796.368802 .  Communications of the ACM 21p.4  IEEE Computer 2812 p.136  P. Mounier-Kuhn, LInformatique en France, de la seconde guerre mondiale au Plan Calcul. Lmergence dune science , Paris, PUPS, 2010, ch. 3  4.  Groth, Dennis P. March 13, 2010. Why an Informatics Degree  February 2010  Communications of the ACM . Cacm.acm.org . Retrieved March 19, 2019 .  Tedre, M. 2011. Computing as a Science A Survey of Competing Viewpoints. Minds and Machines . 21 3 361387. doi  10.1007s11023-011-9240-4 .  Parnas, D.L. 1998. Software engineering programmes are not computer science programmes. Annals of Software Engineering . 6  1937. doi  10.1023A1018949113292 . , p. 19 Rather than treat software engineering as a subfield of computer science, I treat it as an element of the set, Civil Engineering, Mechanical Engineering, Chemical Engineering, Electrical Engineering,   Wegner, P. October 1315, 1976. Research paradigms in computer scienceProceedings of the 2nd international Conference on Software Engineering . San Francisco, California, United States IEEE Computer Society Press, Los Alamitos, CA.  Denning, P.J. Comer, D.E. Gries, D. Mulder, M.C. Tucker, A. Turner, A.J. Young, P.R. January 1989. Computing as a discipline. Communications of the ACM . 32  923. doi  10.114563238.63239 .  Eden, A.H. 2007. Three Paradigms of Computer Science PDF . Minds and Machines . 17 2 135167. CiteSeerX   10.1.1.304.7763 . doi  10.1007s11023-007-9060-8 . Archived from the original PDF on February 15, 2016. Cite uses deprecated parameter deadurl  help   a b Computer Science as a Profession . Computing Sciences Accreditation Board. May 28, 1997. Archived from the original on June 17, 2008 . Retrieved May 23, 2010 .  Committee on the Fundamentals of Computer Science Challenges and Opportunities, National Research Council 2004. Computer Science Reflections on the Field, Reflections from the Field . National Academies Press. ISBN   978-0-309-09301-9 .  CSAB Leading Computer Education . CSAB. August 3, 2011 . Retrieved November 19, 2011 .  Clay Mathematics Institute P  NP Archived October 14, 2013, at the Wayback Machine  P. Collins, Graham October 14, 2002. Claude E. Shannon Founder of Information Theory . Scientific American . Retrieved December 12, 2014 .  Van-Nam Huynh Vladik Kreinovich Songsak Sriboonchitta 2012. Uncertainty Analysis in Econometrics with Applications. Springer Science  Business Media. p. 63. ISBN   978-3-642-35443-4 .  Phillip A. Laplante, 2010. Encyclopedia of Software Engineering Three-Volume Set Print. CRC Press. p. 309. ISBN   978-1-351-24926-3 .  A. Thisted, Ronald April 7, 1997. Computer Architecture PDF . The University of Chicago.  Wescott, Bob 2013. The Every Computer Performance Book, Chapter 3 Useful laws . CreateSpace . ISBN   978-1-4826-5775-3 .  Lawrence A. Tomei, 2009. Lexicon of Online and Distance Learning. R L Education. p. 29. ISBN   978-1-60709-285-8 .  Jiacun Wang, 2017. Real-Time Embedded Systems. Wiley. p. 12. ISBN   978-1-119-42070-5 .  Gordana Dodig-Crnkovic Raffaela Giovagnoli 2013. Computing Nature Turing Centenary Perspective. Springer Science  Business Media. p. 247. ISBN   978-3-642-37225-4 .  Simon Elias Bibri 2018. Smart Sustainable Cities of the Future The Untapped Potential of Big Data Analytics and ContextAware Computing for Advancing Sustainability. Springer. p. 74. ISBN   978-3-319-73981-6 .  Rapaport, William J. September 20, 2013. What Is Computation . State University of New York at Buffalo.  B. Jack Copeland, 2012. Alan Turings Electronic Brain The Struggle to Build the ACE, the Worlds Fastest Computer. OUP Oxford. p. 107. ISBN   978-0-19-960915-4 .  Charles W. Herbert, 2010. An Introduction to Programming Using Alice 2.2. Cengage Learning. p. 122. ISBN   0-538-47866-7 .  Md. Rezaul Karim Sridhar Alla 2017. Scala and Spark for Big Data Analytics Explore the concepts of functional programming, data streaming, and machine learning. Packt Publishing Ltd. p. 87. ISBN   978-1-78355-050-0 .  Lex Sheehan, 2017. Learning Functional Programming in Go Change the way you approach your applications using functional programming in Go. Packt Publishing Ltd. p. 16. ISBN   978-1-78728-604-7 .  Evelio Padilla, 2015. Substation Automation Systems Design and Implementation. Wiley. p. 245. ISBN   978-1-118-98730-8 .  Multi-Paradigm Programming Language . developer.mozilla.org . Mozilla Foundation . Archived from the original on August 21, 2013.  Meyer, Bertrand April 2009. Viewpoint Research evaluation for computer science. Communications of the ACM . 25 4 3134. doi  10.11451498765.1498780 .  Patterson, David August 1999. Evaluating Computer Scientists and Engineers For Promotion and Tenure . Computing Research Association.  Fortnow, Lance August 2009. Viewpoint Time for Computer Science to Grow Up . Communications of the ACM . 52 8 3335. doi  10.11451536616.1536631 .  Burns, Judith April 3, 2016. Computer science A-level 1970s style . Retrieved February 9, 2019 .  Jones, Michael October 1915. Developing a Computer Science Curriculum in England Exploring Approaches in the USA PDF . Winston Churchill Memorial Trust . Retrieved February 9, 2019 .  Computer Science Not Just an Elective Anymore . Education Week . February 25, 2014.  Wilson, Cameron Sudol, Leigh Ann Stephenson, Chris Stehlik, Mark 2010. Running on Empty The Failure to Teach K12 Computer Science in the Digital Age PDF . ACM.  A is for algorithm . The Economist . April 26, 2014.  Computing at School International comparisons PDF . Retrieved July 20, 2015 .  Adding Coding to the Curriculum . The New York Times . March 23, 2014.  Percentage of Bachelors degrees conferred to women, by major 19702012 . June 14, 2014 . Retrieved July 20, 2015 .  a b James, Justin. IT gender gap Where are the female programmers . TechRepublic .  what sic  gender is science PDF . Retrieved July 20, 2015 . Further reading  edit  .mw-parser-output .refbeginfont-size90margin-bottom0.5em.mw-parser-output .refbegin-hanging-indentsullist-style-typenonemargin-left0.mw-parser-output .refbegin-hanging-indentsulli,.mw-parser-output .refbegin-hanging-indentsdlddmargin-left0padding-left3.2emtext-indent-3.2emlist-stylenone.mw-parser-output .refbegin-100font-size100 Overview  edit  Tucker, Allen B. 2004. Computer Science Handbook 2nd ed.. Chapman and HallCRC. ISBN   978-1-58488-360-9 . Within more than 70 chapters, every one new or significantly revised, one can find any kind of information and references about computer science one can imagine.  all in all, there is absolute nothing about Computer Science that can not be found in the 2.5 kilogram-encyclopaedia with its 110 survey articles . Christoph Meinel, Zentralblatt MATH  van Leeuwen, Jan 1994. Handbook of Theoretical Computer Science . The MIT Press. ISBN   978-0-262-72020-5 .  this set is the most unique and possibly the most useful to the theoretical computer science community, in support both of teaching and research . The books can be used by anyone wanting simply to gain an understanding of one of these areas, or by someone desiring to be in research in a topic, or by instructors wishing to find timely information on a subject they are teaching outside their major areas of expertise. Rocky Ross, SIGACT News  Ralston, Anthony  Reilly, Edwin D.  Hemmendinger, David 2000. Encyclopedia of Computer Science 4th ed.. Groves Dictionaries. ISBN   978-1-56159-248-7 . Since 1976, this has been the definitive reference work on computer, computing, and computer science.  Alphabetically arranged and classified into broad subject areas, the entries cover hardware, computer systems, information and data, software, the mathematics of computing, theory of computation, methodologies, applications, and computing milieu. The editors have done a commendable job of blending historical perspective and practical reference information. The encyclopedia remains essential for most public and academic library reference collections. Joe Accardin, Northeastern Illinois Univ., Chicago Edwin D. Reilly 2003. Milestones in Computer Science and Information Technology . Greenwood Publishing Group. ISBN   978-1-57356-521-9 . Selected literature  edit  Knuth, Donald E. 1996. Selected Papers on Computer Science . CSLI Publications, Cambridge University Press . Collier, Bruce 1990. The little engine that couldve The calculating machines of Charles Babbage . Garland Publishing Inc. ISBN   978-0-8240-0043-1 . Cohen, Bernard 2000. Howard Aiken, Portrait of a computer pioneer . The MIT press. ISBN   978-0-262-53179-5 . Tedre, Matti 2014. The Science of Computing Shaping a Discipline . CRC Press, Taylor  Francis . Randell, Brian 1973. The origins of Digital computers, Selected Papers . Springer-Verlag. ISBN   978-3-540-06169-4 . Covering a period from 1966 to 1993, its interest lies not only in the content of each of these papers  still timely today  but also in their being put together so that ideas expressed at different times complement each other nicely. N. Bernard, Zentralblatt MATH  Articles  edit  Peter J. Denning. Is computer science science , Communications of the ACM, April 2005. Peter J. Denning, Great principles in computing curricula , Technical Symposium on Computer Science Education, 2004. Research evaluation for computer science, Informatics Europe report . Shorter journal version Bertrand Meyer, Christine Choppy, Jan van Leeuwen and Jorgen Staunstrup, Research evaluation for computer science , in Communications of the ACM , vol. 52, no. 4, pp.  3134, April 2009. Curriculum and classification  edit  Association for Computing Machinery . 1998 ACM Computing Classification System . 1998. Joint Task Force of Association for Computing Machinery ACM, Association for Information Systems AIS and IEEE Computer Society IEEE CS. Computing Curricula 2005 The Overview Report . September 30, 2005. Norman Gibbs , Allen Tucker. A model curriculum for a liberal arts degree in computer science. Communications of the ACM , Volume 29 Issue 3, March 1986. External links  edit  Wikibooks has a book on the topic of Informatics Practices for Class XI CBSE Computer science at Wikipedias sister projects Definitions from Wiktionary Media from Wikimedia Commons News from Wikinews Quotations from Wikiquote Texts from Wikisource Textbooks from Wikibooks Resources from Wikiversity Library resources about Computer science Resources in your library Resources in other libraries Computer science at Curlie Scholarly Societies in Computer Science What is Computer Science Best Papers Awards in Computer Science since 1996 Photographs of computer scientists by Bertrand Meyer EECS.berkeley.edu Bibliography and academic search engines  edit  CiteSeer x  article  search engine, digital library and repository for scientific and academic papers with a focus on computer and information science. DBLP Computer Science Bibliography  article  computer science bibliography website hosted at Universitt Trier, in Germany. The Collection of Computer Science Bibliographies  article  Professional organizations  edit  Association for Computing Machinery IEEE Computer Society Informatics Europe AAAI AAAS Computer Science Misc  edit  Computer ScienceStack Exchange  a community-run question-and-answer site for computer science What is computer science Is computer science science Computer Science Software Must be Considered as an Independent Discipline. v t e Computer science Note This template roughly follows the 2012 ACM Computing Classification System . Hardware Printed circuit board Peripheral Integrated circuit Very Large Scale Integration Systems on Chip SoCs Energy consumption Green computing Electronic design automation Hardware acceleration Computer systems organization Computer architecture Embedded system Real-time computing Dependability Networks Network architecture Network protocol Network components Network scheduler Network performance evaluation Network service Software organization Interpreter Middleware Virtual machine Operating system Software quality Software notations and tools Programming paradigm Programming language Compiler Domain-specific language Modeling language Software framework Integrated development environment Software configuration management Software library Software repository Software development Software development process Requirements analysis Software design Software construction Software deployment Software maintenance Programming team Open-source model Theory of computation Model of computation Formal language Automata theory Computational complexity theory Logic Semantics Algorithms Algorithm design Analysis of algorithms Algorithmic efficiency Randomized algorithm Computational geometry Mathematics of computing Discrete mathematics Probability Statistics Mathematical software Information theory Mathematical analysis Numerical analysis Information systems Database management system Information storage systems Enterprise information system Social information systems Geographic information system Decision support system Process control system Multimedia information system Data mining Digital library Computing platform Digital marketing World Wide Web Information retrieval Security Cryptography Formal methods Security services Intrusion detection system Hardware security Network security Information security Application security Humancomputer interaction Interaction design Social computing Ubiquitous computing Visualization Accessibility Concurrency Concurrent computing Parallel computing Distributed computing Multithreading Multiprocessing Artificial intelligence Natural language processing Knowledge representation and reasoning Computer vision Automated planning and scheduling Search methodology Control method Philosophy of artificial intelligence Distributed artificial intelligence Machine learning Supervised learning Unsupervised learning Reinforcement learning Multi-task learning Cross-validation Graphics Animation Rendering Image manipulation Graphics processing unit Mixed reality Virtual reality Image compression Solid modeling Applied computing E-commerce Enterprise software Computational mathematics Computational physics Computational chemistry Computational biology Computational social science Computational engineering Computational healthcare Digital art Electronic publishing Cyberwarfare Electronic voting Video games Word processing Operations research Educational technology Document management Book Category Portal Outline WikiProject Commons v t e Software engineering Fields Computer programming Requirements engineering Software deployment Software design Software maintenance Software testing Systems analysis Formal methods Concepts Data modeling Enterprise architecture Functional specification Modeling language Orthogonality Programming paradigm Software Software archaeology Software architecture Software configuration management Software development methodology Software development process Software quality Software quality assurance Software verification and validation Structured analysis Orientations Agile Aspect-oriented Object orientation Ontology Service orientation SDLC Models Developmental Agile EUP Executable UML Incremental model Iterative model Prototype model RAD UP Scrum Spiral model V-Model Waterfall model XP Other SPICE CMMI Data model ER model Function model Information model Metamodeling Object model Systems model View model Languages IDEF UML USL SysML Software engineers Victor Basili Kent Beck Grady Booch Fred Brooks Barry Boehm Peter Chen Danese Cooper Ward Cunningham Tom DeMarco Edsger W. Dijkstra Delores M. Etter Martin Fowler Adele Goldstine Margaret Hamilton C. A. R. Hoare Lois Haibt Mary Jean Harrold Grace Hopper Watts Humphrey Michael A. Jackson Ivar Jacobson Alan Kay Nancy Leveson Stephen J. Mellor Bertrand Meyer David Parnas Trygve Reenskaug Winston W. Royce James Rumbaugh Mary Shaw Peri Tarr Elaine Weyuker Niklaus Wirth Edward Yourdon Related fields Computer science Computer engineering Project management Risk management Systems engineering Category Commons v t e Glossaries of science and engineering Aerospace engineering Archaeology Architecture Artificial intelligence Astronomy Biology Botany Calculus Chemistry Civil engineering Clinical research Computer science Ecology Economics Electrical and electronics engineering Engineering Entomology Environmental science Genetics Geography Geology Machine vision Mathematics Mechanical engineering Medicine Meteorology Physics Probability and statistics Psychiatry Robotics Speciation Structural engineering Authority control BNE  XX525961 BNF  cb11932109b data GND  4026894-9 HDS  8272 LCCN  sh89003285 Retrieved from  httpsen.wikipedia.orgwindex.phptitleComputer_science oldid913518916  Categories  Electrical engineering Electronic engineering Computer engineering Computer science Hidden categories CS1 German-language sources de CS1 errors deprecated parameters CS1 errors missing periodical Webarchive template wayback links Articles with short description Use mdy dates from October 2017 All articles with unsourced statements Articles with unsourced statements from October 2010 Articles to be expanded from September 2018 Articles with Curlie links Wikipedia articles with BNE identifiers Wikipedia articles with BNF identifiers Wikipedia articles with GND identifiers Wikipedia articles with HDS identifiers Wikipedia articles with LCCN identifiers