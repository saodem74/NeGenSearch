ALGOL From Wikipedia, the free encyclopedia Jump to navigation Jump to search Family of programming languages This article is about the programming language family. For other uses, see Algol disambiguation . ALGOL Paradigm Procedural , imperative , structured Designed  by Bauer , Bottenbruch , Rutishauser , Samelson , Backus , Katz , Perlis , Wegstein , Naur , Vauquois , van Wijngaarden , Woodger , Green , McCarthy First  appeared 1958 Influenced Most subsequent imperative languages so-called ALGOL-like languages e.g. PLI , Simula , BCPL , B , Pascal , C ALGOL     l   l , -   l   short for  Algorithmic Language  1  is a family of imperative computer programming languages , originally developed in the mid-1950s, which greatly influenced many other languages and was the standard method for algorithm description used by the ACM in textbooks and academic sources for more than thirty years. 2  In the sense that the syntax of most modern languages is Algol-like, 3  it was arguably the most influential of the four high-level programming languages among which it was roughly contemporary FORTRAN , Lisp , and COBOL . 4  It was designed to avoid some of the perceived problems with FORTRAN and eventually gave rise to many other programming languages, including PLI , Simula , BCPL , B , Pascal , and C . ALGOL introduced code blocks and the begin ... end pairs for delimiting them. It was also the first language implementing nested function definitions with lexical scope . Moreover, it was the first programming language which gave detailed attention to formal language definition and through the Algol 60 Report introduced BackusNaur form , a principal formal grammar notation for language design. There were three major specifications, named after the year they were first published ALGOL 58  originally proposed to be called IAL , for International Algebraic Language . ALGOL 60  first implemented as X1 ALGOL 60 in mid-1960. Revised 1963. 5  6  ALGOL 68  introduced new elements including flexible arrays, slices, parallelism, operator identification. Revised 1973. 7  ALGOL 68 is substantially different from ALGOL 60 and was not well received, so that in general Algol means ALGOL 60 and dialects thereof. Contents 1 Important implementations 2 History 2.1 Algol and programming language research 2.2 IAL implementations timeline 3 Properties 4 Examples and portability issues 4.1 Code sample comparisons 4.1.1 ALGOL 60 4.1.2 ALGOL 68 4.2 Timeline Hello world 4.2.1 ALGOL 58 IAL 4.2.2 ALGOL 60 family 4.2.3 ALGOL 68 4.3 Timeline of ALGOL special characters 5 See also 6 References 7 Further reading 8 External links Important implementations  edit  The International Algebraic Language IAL, or ALGOL 58, was extremely influential and generally considered the ancestor of most of the modern programming languages the so-called Algol-like languages. Additionally, ALGOL object code was a simple, compact, and stack-based instruction set architecture commonly used in teaching compiler construction and other high order languages of which Algol is generally considered the first. History  edit  ALGOL was developed jointly by a committee of European and American computer scientists in a meeting in 1958 at ETH Zurich cf. ALGOL 58 . It specified three different syntaxes a reference syntax, a publication syntax, and an implementation syntax. The different syntaxes permitted it to use different keyword names and conventions for decimal points commas vs periods for different languages. ALGOL was used mostly by research computer scientists in the United States and in Europe. Its use in commercial applications was hindered by the absence of standard inputoutput facilities in its description and the lack of interest in the language by large computer vendors other than Burroughs Corporation . ALGOL 60 did however become the standard for the publication of algorithms and had a profound effect on future language development. John Backus developed the Backus normal form method of describing programming languages specifically for ALGOL 58. It was revised and expanded by Peter Naur for ALGOL 60, and at Donald Knuth s suggestion renamed BackusNaur form . 8  Peter Naur As editor of the ALGOL Bulletin I was drawn into the international discussions of the language and was selected to be member of the European language design group in November 1959. In this capacity I was the editor of the ALGOL 60 report, produced as the result of the ALGOL 60 meeting in Paris in January 1960. 9  The following people attended the meeting in Paris from 1 to 16 January Friedrich L. Bauer , Peter Naur , Heinz Rutishauser , Klaus Samelson , Bernard Vauquois , Adriaan van Wijngaarden , and Michael Woodger from Europe John W. Backus , Julien Green , Charles Katz , John McCarthy , Alan J. Perlis , and Joseph Henry Wegstein from the USA. Alan Perlis gave a vivid description of the meeting The meetings were exhausting, interminable, and exhilarating. One became aggravated when ones good ideas were discarded along with the bad ones of others. Nevertheless, diligence persisted during the entire period. The chemistry of the 13 was excellent. ALGOL 60 inspired many languages that followed it. Tony Hoare remarked Here is a language so far ahead of its time that it was not only an improvement on its predecessors but also on nearly all its successors. 10  The Scheme programming language, a variant of Lisp that adopted the block structure and lexical scope of ALGOL, also adopted the wording Revised Report on the Algorithmic Language Scheme for its standards documents in homage to ALGOL. 11  Algol and programming language research  edit  As Peter Landin noted, the language Algol was the first language to combine seamlessly imperative effects with the call-by-name lambda calculus . Perhaps the most elegant formulation of the language is due to John C. Reynolds , and it best exhibits its syntactic and semantic purity. Reynoldss idealized Algol also made a convincing methodological argument regarding the suitability of local effects in the context of call-by-name languages, to be contrasted with the global effects used by call-by-value languages such as ML . The conceptual integrity of the language made it one of the main objects of semantic research, along with PCF and ML. 12  IAL implementations timeline  edit  To date there have been at least 70 augmentations, extensions, derivations and sublanguages of Algol 60. 13  Name Year Author Country Description Target CPU ZMMD-implementation 1958 Friedrich L. Bauer , Heinz Rutishauser, Klaus Samelson, Hermann Bottenbruch Germany implementation of ALGOL 58 Z22 later Zuse s Z23 was delivered with an Algol 60 compiler 14  X1 ALGOL 60 August 1960 15  Edsger W. Dijkstra and Jaap A. Zonneveld Netherlands First implementation of ALGOL 60 16  Electrologica X1 Elliott ALGOL 1960s C. A. R. Hoare UK Subject of the 1980 Turing lecture 17  Elliott 803 , Elliott 503, Elliott 4100 series JOVIAL 1960 Jules Schwartz USA A DOD HOL prior to Ada Various see article Burroughs Algol Several variants 1961 Burroughs Corporation with participation by Hoare, Dijkstra , and others USA Basis of the Burroughs and now Unisys MCP based computers Burroughs large systems and their midrange as well. Case ALGOL 1961 Case Institute of Technology 18  USA Simula was originally contracted as a simulation extension of the Case ALGOL UNIVAC 1107 GOGOL 1961 William M. McKeeman USA For ODIN time-sharing system 19  PDP-1 RegneCentralen ALGOL 1961 Peter Naur , Jrn Jensen Denmark Implementation of full Algol 60 DASK at Regnecentralen Dartmouth ALGOL 30 1962 Thomas Eugene Kurtz et al. USA LGP-30 USS 90 Algol 1962 L. Petrone Italy Algol Translator 1962 G. van der Mey and W.L. van der Poel Netherlands Staatsbedrijf der Posterijen, Telegrafie en Telefonie ZEBRA Kidsgrove Algol 1963 F. G. Duncan UK English Electric Company KDF9 VALGOL 1963 Val Schorre USA A test of the META II compiler compiler Whetstone 1964 Brian Randell and L. J. Russell UK Atomic Power Division of English Electric Company. Precursor to Ferranti Pegasus , National Physical Laboratories ACE and English Electric DEUCE implementations. English Electric Company KDF9 NU ALGOL 1965 Norway UNIVAC ALGEK 1965 USSR , based on ALGOL-60 and COBOL support, for economical tasks Minsk-22 ALGOL W 1966 Niklaus Wirth USA Proposed successor to ALGOL 60 IBM System360 MALGOL 1966 publ. A. Viil, M Kotli  M. Rakhendi, Estonian SSR Minsk-22 ALGAMS 1967 GAMS group ,       , cooperation of Comecon Academies of Science Comecon Minsk-22 , later ES EVM , BESM ALGOLZAM 1967 Poland Polish ZAM computer Simula 67 1967 Ole-Johan Dahl and Kristen Nygaard Norway Algol 60 with classes UNIVAC 1107 Chinese Algol 1972 China Chinese characters, expressed via the Symbol system DGL 1972 USA DG Eclipse family of Computers S-algol 1979 Ron Morrison UK Addition of orthogonal datatypes with intended use as a teaching language PDP-11 with a subsequent implementation on the Java VM The Burroughs dialects included special Bootstrapping dialects such as ESPOL and NEWP . The latter is still used for Unisys MCP system software. Properties  edit  ALGOL 60 as officially defined had no IO facilities implementations defined their own in ways that were rarely compatible with each other. In contrast, ALGOL 68 offered an extensive library of transput inputoutput facilities. ALGOL 60 allowed for two evaluation strategies for parameter passing the common call-by-value , and call-by-name . Call-by-name has certain effects in contrast to call-by-reference . For example, without specifying the parameters as value or reference , it is impossible to develop a procedure that will swap the values of two parameters if the actual parameters that are passed in are an integer variable and an array that is indexed by that same integer variable. 20  Think of passing a pointer to swapi, Ai in to a function. Now that every time swap is referenced, it is reevaluated. Say i   1 and Ai   2, so every time swap is referenced itll return the other combination of the values 1,2, 2,1, 1,2 and so on. A similar situation occurs with a random function passed as actual argument. Call-by-name is known by many compiler designers for the interesting  thunks  that are used to implement it. Donald Knuth devised the  man or boy test  to separate compilers that correctly implemented  recursion and non-local references. This test contains an example of call-by-name. ALGOL 68 was defined using a two-level grammar formalism invented by Adriaan van Wijngaarden and which bears his name. Van Wijngaarden grammars use a context-free grammar to generate an infinite set of productions that will recognize a particular ALGOL 68 program notably, they are able to express the kind of requirements that in many other programming language standards are labelled semantics and have to be expressed in ambiguity-prone natural language prose, and then implemented in compilers as ad hoc code attached to the formal language parser. Examples and portability issues  edit  Code sample comparisons  edit  ALGOL 60  edit  The way the bold text has to be written depends on the implementation, e.g. INTEGER -- quotation marks included -- for integer . This is known as stropping . procedure Absmaxa Sizen, m Resulty Subscriptsi, k value n, m array a integer n, m, i, k real y comment The absolute greatest element of the matrix a, of size n by m is transferred to y, and the subscripts of this element to i and k begin integer p, q y   0 i   k   1 for p   1 step 1 until n do for q   1 step 1 until m do if absap, q  y then begin y   absap, q i   p k   q end end Absmax Here is an example of how to produce a table using Elliott 803 ALGOL. 21  FLOATING POINT ALGOL TEST BEGIN REAL A,B,C,D   READ D   FOR A 0.0 STEP D UNTIL 6.3 DO BEGIN PRINT PUNCH3,L B   SINA C   COSA PRINT PUNCH3,SAMELINE,ALIGNED1,6,A,B,C END END PUNCH3 sends output to the teleprinter rather than the tape punch. SAMELINE suppresses the carriage return  line feed normally printed between arguments. ALIGNED1,6 controls the format of the output with 1 digit before and 6 after the decimal point. ALGOL 68  edit  The following code samples are ALGOL 68 versions of the above ALGOL 60 code samples. ALGOL 68 implementations used ALGOL 60s approaches to stropping . In ALGOL 68s case tokens with the bold typeface are reserved words, types  mode s or operators. proc abs max  , real a, ref real y, ref int i, k real  comment The absolute greatest element of the matrix a, of size a by 2a is transferred to y, and the subscripts of this element to i and k comment begin real y   0 i   a k   2a for p from a to a do for q from 2a to 2a do if abs ap, q  y then y   abs ap, q i   p k   q fi od od  y end  abs max  Note lower  and upper  bounds of an array, and array slicing, are directly available to the programmer. floating point algol68 test  real a,b,c,d    printf - sends output to the file stand out .   printfp  selects a new page  printfpg,Enter d readd   for step from 0 while astepd a  2pi do printfl  l - selects a new line .  b   sina c   cosa printfz-d.6d,a,b,c  formats output with 1 digit before and 6 after the decimal point.  od  Timeline Hello world  edit  The variations and lack of portability of the programs from one implementation to another is easily demonstrated by the classic hello world program . ALGOL 58 IAL  edit  Main article ALGOL 58 ALGOL 58 had no IO facilities. ALGOL 60 family  edit  Main article ALGOL 60 Since ALGOL 60 had no IO facilities, there is no portable hello world program in ALGOL. BEGIN FILE FKINDREMOTE EBCDIC ARRAY E011 REPLACE E BY HELLO WORLD WRITEF, , E END. A simpler program using an inline format BEGIN FILE FKINDREMOTE WRITEF, HELLO WORLD  END. An even simpler program using the Display statement BEGIN DISPLAYHELLO WORLD END. An alternative example, using Elliott Algol IO is as follows. Elliott Algol used different characters for open-string-quote and close-string-quote program HiFolks begin print Hello world end  Here is a version for the Elliott 803 Algol A104 The standard Elliott 803 used 5 hole paper tape and thus only had upper case. The code lacked any quote characters so  UK Pound Sign was used for open quote and   Question Mark for close quote. Special sequences were placed in double quotes e.g. L produced a new line on the teleprinter. HIFOLKS BEGIN PRINT HELLO WORLDL END The ICT 1900 series Algol IO version allowed input from paper tape or punched card. Paper tape full mode allowed lower case. Output was to a line printer. The open and close quote characters were represented using  and  and spaces by  . 22  BEGIN WRITE TEXTHELLOWORLD END ALGOL 68  edit  Main article ALGOL 68 ALGOL 68 code was published with reserved words typically in lowercase, but bolded or underlined. begin printfgl,Hello, world end In the language of the Algol 68 Report the inputoutput facilities were collectively called the  Transput . Timeline of ALGOL special characters  edit  This article contains Unicode 6.0  Miscellaneous Technical  characters. Without proper rendering support , you may see question marks, boxes, or other symbols instead of something like   Decimal Exponent Symbol U23E8 TTF . The ALGOLs were conceived at a time when character sets were diverse and evolving rapidly also, the ALGOLs were defined so that only uppercase letters were required. 1960 IFIP  The Algol 60 language and report included several mathematical symbols which are available on modern computers and operating systems, but, unfortunately, were not supported on most computing systems at the time. For instance , , , , , , , , , ,  and . 1961 September ASCII   The ASCII character set, then in an early stage of development, had the  Back slash character added to it in order to support ALGOLs boolean operators  and  . 23  1962 ALCOR  This character set included the unusual  runic cross 24  character for multiplication and the  Decimal Exponent Symbol 25  for floating point notation. 26  27  28  1964 GOST  The 1964 Soviet standard GOST 10859 allowed the encoding of 4-bit, 5-bit, 6-bit and 7-bit characters in ALGOL. 29  1968 The Algol 68 Report  used existing ALGOL characters, and further adopted , , , , , , , , ,  and  characters which can be found on the IBM 2741 keyboard with golf-ball print heads inserted such as the APL golfball. These became available in the mid-1960s while ALGOL 68 was being drafted. The report was translated into Russian, German, French and Bulgarian, and allowed programming in languages with larger character sets, e.g. Cyrillic alphabet of the Soviet BESM-4 . All ALGOLs characters are also part of the Unicode standard and most of them are available in several popular fonts . 2009 October Unicode  The  Decimal Exponent Symbol for floating point notation was added to Unicode 5.2 for backward compatibility with historic Buran spacecraft ALGOL software. 30  See also  edit  Address programming language Atlas Autocode Coral 66 Edinburgh IMP Jensens Device ISWIM JOVIAL Tron video game NELIAC Simula S-algol Scheme programming language References  edit   The name of this language family is sometimes given in mixed case  Algol 60 Archived 25 June 2007 at the Wayback Machine , and sometimes in all uppercase  ALGOL68 Archived 13 September 2014 at the Wayback Machine . For simplicity this article uses ALGOL .  Collected Algorithms of the ACM Archived 17 October 2011 at Wikiwix Compressed archives of the algorithms. ACM .  OHearn, P. W. Tennent, R. D. September 1996. Algol-like languages, Introduction . Archived from the original on 14 November 2011. .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation . cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-po sitionright .1em center.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno -repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-o utput .cs1-registration,.mw-parser-output .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em  The ALGOL Programming Language Archived 6 October 2016 at the Wayback Machine , University of Michigan-Dearborn  Backus, J. W. Bauer, F. L. Green, J. Katz, C. McCarthy, J. Perlis, A. J. Rutishauser, H. Samelson, K. Vauquois, B. Wegstein, J. H. van Wijngaarden, A. Woodger, M. May 1960. Naur, Peter ed.. Report on the Algorithmic Language ALGOL 60 . Copenhagen. doi  10.1145367236.367262 . ISSN   0001-0782 .  Revised Report on the Algorithmic Language Algol 60 . 1963. Archived from the original on 25 June 2007 . Retrieved 8 June 2007 . Cite uses deprecated parameter deadurl  help   Revised Report on the Algorithmic Language ALGOL 68 PDF . 1973. Archived PDF from the original on 13 September 2014 . Retrieved 13 September 2014 . Cite uses deprecated parameter deadurl  help   Knuth, Donald E. 1964. Backus Normal Form vs Backus Naur Form. Communications of the ACM . 7 12 735736. doi  10.1145355588.365140 .  ACM Award Citation  Peter Naur Archived 2 April 2012 at Archive-It , 2005  Hints on Programming Language Design Archived 15 September 2009 at the Wayback Machine , C.A.R. Hoare, December 1973. Page 27. This statement is sometimes erroneously attributed to Edsger W. Dijkstra , also involved in implementing the first ALGOL 60 compiler .  R. K. Dybvig et al. Jonathan Rees William Clinger Hal Abelson eds.. Revised3 Report on the Algorithmic Language Scheme, Dedicated to the Memory of ALGOL 60 . Archived from the original on 14 January 2010 . Retrieved 20 October 2009 . Cite uses deprecated parameter deadurl  help   Peter OHearn and Robert D. Tennent . 1996. Algol-Like Languages. Birkhauser Boston Inc., Cambridge, MA, USA.  The Encyclopedia of Computer Languages . Archived from the original on 27 September 2011 . Retrieved 20 January 2012 . Cite uses deprecated parameter deadurl  help   Computer Museum History Archived 20 August 2010 at the Wayback Machine , Historical Zuse-Computer Z23, restored by the Konrad Zuse Schule in Hnfeld, for the Computer Museum History Center in Mountain View California USA  Daylight, E. G. 2011. Dijkstras Rallying Cry for Generalization the Advent of the Recursive Procedure, late 1950s   early 1960s . The Computer Journal . 54  17561772. CiteSeerX   10.1.1.366.3916 . doi  10.1093comjnlbxr002 . Archived from the original on 12 March 2013. Cite uses deprecated parameter deadurl  help   Kruseman Aretz, F.E.J. 30 June 2003. The Dijkstra-Zonneveld ALGOL 60 compiler for the Electrologica X1. Software Engineering PDF . History of Computer Science. Kruislaan 413, 1098 SJ Amsterdam Centrum Wiskunde  Informatica. Archived PDF from the original on 4 March 2016. Cite uses deprecated parameter deadurl  help   Hoare, Antony 1980. The Emperors Old Clothes . Communications of the ACM . 24 2. doi  10.1145358549.358561 . Archived from the original on 13 September 2017. Cite uses deprecated parameter deadurl  help   Koffman, Eliot. All I Really Need to KnowI Learned in CS1 PDF . Archived PDF from the original on 12 October 2012 . Retrieved 20 May 2012 . Cite uses deprecated parameter deadurl  help   GOGOL - PDP-1 Algol 60 Computer Language . Online Historical Encyclopaedia of Programming Languages. Archived from the original on 2 February 2018 . Retrieved 1 February 2018 . Cite uses deprecated parameter deadurl  help   Aho, Alfred V.  Ravi Sethi  Jeffrey D. Ullman 1986. Compilers Principles, Techniques, and Tools 1st ed.. Addison-Wesley. ISBN   0-201-10194-7 . , Section 7.5, and references therein  803 ALGOL Archived 29 May 2010 at the Wayback Machine , the manual for Elliott 803 ALGOL  ICL 1900 series Algol Language . ICL Technical Publication 3340. 1965.  How ASCII Got Its Backslash Archived 11 July 2014 at the Wayback Machine , Bob Bemer  ironrunic cross  Decimal Exponent Symbol  Baumann, R. October 1961. ALGOL Manual of the ALCOR Group, Part 1 ALGOL Manual of the ALCOR Group . Elektronische Rechenanlagen in German 206212.  Baumann, R. December 1961. ALGOL Manual of the ALCOR Group, Part 2 ALGOL Manual of the ALCOR Group . Elektronische Rechenanlagen in German. 6  259265.  Baumann, R. April 1962. ALGOL Manual of the ALCOR Group, Part 3 ALGOL Manual of the ALCOR Group . Elektronische Rechenanlagen in German. 2 .  GOST 10859 standard . Archived from the original on 16 June 2007 . Retrieved 5 June 2007 . Cite uses deprecated parameter deadurl  help   Broukhis, Leonid 22 January 2008. Revised proposal to encode the decimal exponent symbol PDF . www.unicode.org . ISOIEC JTC 1SC 2WG 2. Archived PDF from the original on 31 July 2015 . Retrieved 24 January 2016 . This means that the need to transcode GOST-based software and documentation can still arise legacy numerical algorithms some of which may be of interest,e.g. for the automatic landing of the Buran shuttle  optimized for the non-IEEE floating point representation of BESM-6 cannot be simply recompiled and be expected to work reliably, and some human intervention may be necessary. Cite uses deprecated parameter deadurl  help  Further reading  edit  F.L. Bauer, R. Baumann, M. Feliciano, K. Samelson, Introduction to Algol . Prentice Hall, 1964, ISBN   0-13-477828-6 Brian Randell and L. J. Russell, ALGOL 60 Implementation The Translation and Use of ALGOL 60 Programs on a Computer . Academic Press, 1964. The design of the Whetstone Compiler . One of the early published descriptions of implementing a compiler. See the related papers Whetstone Algol Revisited , and The Whetstone KDF9 Algol Translator by Brian Randell Dijkstra, E. W 1961, Algol 60 translation an algol 60 translator for the x1 and making a translator for algol 60 PDF , report MR 3561, Amsterdam Mathematisch Centrum Revised Report on the Algorithmic Language Algol 60 by Peter Naur, et al. ALGOL definition The European Side of the Last Phase of the Development of ALGOL 60 by Peter Naur External links  edit  History of ALGOL at the Computer History Museum Web enabled ALGOL-F compiler for small experiments Authority control LCCN  sh85003475 Retrieved from  httpsen.wikipedia.orgwindex.phptitleALGOL oldid913604411  Categories  ALGOL 60 dialect Algol programming language family Computer-related introductions in 1958 Procedural programming languages Programming languages created in 1958 Structured programming languages Systems programming languages Hidden categories Webarchive template wayback links Webarchive template other archives CS1 errors deprecated parameters CS1 German-language sources de Articles with short description Use dmy dates from July 2012 Wikipedia articles with LCCN identifiers Articles with example ALGOL 60 code