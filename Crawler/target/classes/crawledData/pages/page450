Software quality assurance From Wikipedia, the free encyclopedia Jump to navigation Jump to search This article includes a list of references , but its sources remain unclear because it has insufficient inline citations . Please help to improve this article by introducing more precise citations.  April 2019   Learn how and when to remove this template message  IEEE software life cycle SQA  Software quality assurance IEEE 730 SCM  Software configuration management IEEE 828 STD  Software test documentation IEEE 829 SRS  Software requirements specification IEEE 830 V V  Software verification and validation IEEE 1012 SDD  Software design description IEEE 1016 SPM  Software project management IEEE 1058 SUD  Software user documentation IEEE 1063 v t e Software quality assurance  SQA  consists of a means of monitoring the software engineering processes and methods used to ensure quality. The methods by which this is accomplished are many and varied, and may include ensuring conformance to one or more standards, such as ISO 9000 or a model such as CMMI . 1  It is a set of methods that try to ensure the quality of all projects in the software process . This includes standards and procedures that administrators may use to review and audit software products and activities to verify that the software meets standards. According to ISOIEC 15504 v.2.5 SPICE, it is a supporting process that has to provide the independent assurance in which all the work products, activities and processes comply with the predefined plans and ISO 15504.  citation needed  SQA encompasses the entire software development process including processes such as requirements definition, software design , coding , source code control , code reviews , software configuration management , testing , release management , and product integration. It is organized into goals, commitments, abilities, activities, measurements, and verification. 2  Contents 1 Purpose 2 Activities 3 See also 4 References Purpose  edit  This section is in list format, but may read better as prose . You can help by converting this section , if appropriate. Editing help is available.  April 2019  To ensure quality in a software product, an organization must have a three-prong approach to quality management Organization-wide policies, procedures and standards must be established. Project-specific policies, procedures and standards must be tailored from the organization-wide templates. Quality must be controlled that is, the organization must ensure that the appropriate procedures are followed for each project. Standards exist to help an organization draft an appropriate software quality assurance plan. ISO 9000-3 original, now ISO 90003 ANSIIEEE standards External entities can be contracted to verify that an organization is standard-compliant. Activities  edit  This section is in list format, but may read better as prose . You can help by converting this section , if appropriate. Editing help is available.  April 2019  Application technology to manage quality Analysts use application technology to achieve high-quality specifications and designs Conducting formal technical reviews Technicians find problems with related software quality through a series of meetings Testing strategy To ensure effective error detection, technicians use the use case design method to test Enforcing standards Some standards that need to be followed and tested during implementation Controlling change Applied during software development and maintenance Measurement Track software quality and assess the ability of methodological and procedural changes to improve software quality Metrics and reporting mechanisms SQA information needs to be collected and disseminated, this activity gives the procedures for it The advantages include After a rigorous and complete software quality audit, the software itself will be greatly reduced in vulnerabilities and risks, and the software will be more efficient. In addition, the quality of the software can be improved to avoid spending a lot of time on testing and maintaining the software. On some errors that could have been avoided. Through software quality control, customer satisfaction can be greatly improved, because most customers do not have a strong software professional background, they only need a reliable tool. Software maintenance is a large part of the development and use of the software, so improving software quality also means reducing maintenance costs. Not only is the maintenance cost reduced, but a reasonable software quality assurance strategy can also reduce the total life cycle of the software. While the disadvantages SQA is the whole process of software development, so it is a project that consumes manpower, time and money. Due to it has many standards and requires a lot of testing, there are certain requirements for the corresponding auxiliary programs. Many times, if you dont achieve the software quality standards, the program needs to be modified or redesigned See also  edit  DOD-STD-2167 Quality assurance Quality by Design Software assurance Software quality analyst Software quality management Software quality References  edit  Wikimedia Commons has media related to Software quality assurance .  Kelemen, Zdor Dniel Kusters, Rob Trienekens Jos Identifying criteria for multimodel software process improvement solutions  based on a review of current problems and initiatives  Nielsen, David CMM and Project Quality Management 730-2014 - IEEE Standard for Software Quality Assurance Processes . 2014. doi  10.1109IEEESTD.2014.6835311 . ISBN   978-0-7381-9168-3 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation . cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-po sitionright .1em center.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno -repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-o utput .cs1-registration,.mw-parser-output .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em April, Alain 2018. Software Quality Assurance . Wiley-IEEE. ISBN   978-1-11850-182-5 . Chemuturi, Murali 2010. Software Quality Assurance Best Practices, Tools and Techniques for Software Developers . J.Ross Publishing. ISBN   978-1-60427-032-7 . Kelemen, Z. D. Kusters, R. Trienekens, J. 2012. Identifying criteria for multimodel software process improvement solutions - based on a review of current problems and initiatives. Journal of Software Evolution and Process . 24 8 895909. doi  10.1002smr.549 . Auburn University Libraries. Auburn University Libraries  Illiad  Auburn Libraries , onlinelibrary-wiley-com.spot.lib.auburn.edudoi10.10029781119312451.ch3. Software Quality AssuranceSQA Plan, Audit  Review. Meet Guru99 - Free Training Tutorials  Video for IT Courses , www.guru99.comsoftware-quality-assurance-test-audit-review-makes-your-life-easy.html. Collofello, James S., and Jeffrey J. Buck. Software Quality Assurance for Maintenance. IEEE Software , vol. 4, no. 5, Sept. 1987, p.  46. EBSCOhost , doi10.1109MS.1987.231418 Parnas, David L., and Mark Lawford. Inspections Role in Software Quality Assurance. IEEE Software , vol. 20, no. 4, July 2003, p.  16. EBSCOhost , doi10.1109MS.2003.1207449. Laporte, Claude Y., and Alain April. Software Quality Assurance . IEEE Press, 2018. v t e Software engineering Fields Computer programming Requirements engineering Software deployment Software design Software maintenance Software testing Systems analysis Formal methods Concepts Data modeling Enterprise architecture Functional specification Modeling language Orthogonality Programming paradigm Software Software archaeology Software architecture Software configuration management Software development methodology Software development process Software quality Software quality assurance Software verification and validation Structured analysis Orientations Agile Aspect-oriented Object orientation Ontology Service orientation SDLC Models Developmental Agile EUP Executable UML Incremental model Iterative model Prototype model RAD UP Scrum Spiral model V-Model Waterfall model XP Other SPICE CMMI Data model ER model Function model Information model Metamodeling Object model Systems model View model Languages IDEF UML USL SysML Software engineers Victor Basili Kent Beck Grady Booch Fred Brooks Barry Boehm Peter Chen Danese Cooper Ward Cunningham Tom DeMarco Edsger W. Dijkstra Delores M. Etter Martin Fowler Adele Goldstine Margaret Hamilton C. A. R. Hoare Lois Haibt Mary Jean Harrold Grace Hopper Watts Humphrey Michael A. Jackson Ivar Jacobson Alan Kay Nancy Leveson Stephen J. Mellor Bertrand Meyer David Parnas Trygve Reenskaug Winston W. Royce James Rumbaugh Mary Shaw Peri Tarr Elaine Weyuker Niklaus Wirth Edward Yourdon Related fields Computer science Computer engineering Project management Risk management Systems engineering Category Commons v t e IEEE standards Current 488 730 754 Revision 854 828 829 896 1003 1014 1016 1076 1149.1 1154 1164 1275 1278 1284 1355 1394 1451 1497 1516 1541 1547 1584 1588 1596 1603 1613 1666 1667 1675 1685 1722 1733 1800 1801 1815 1850 1900 1901 1902 1904 1905 2030 2050 11073 12207 14764 16085 16326 29148 42010 802 series 802.1 D p Q Qat Qay w X ab ad AE ag ah ak aq AS ax az BA 802.3 -1983 a b d e i j u x y z ab ac ad ae af ah ak an aq at av az ba bt by 802.11 legacy mode a b c d e f g h i j k n p r s u v w y ac ad af ah ai ax ay .2 .4 .5 .6 .7 .8 .9 .10 .12 .14 .15 .1 .4 .4a .6 .16 Original  d  e .17 .18 .20 .21 .22 Proposed P1363 P1619 P1699 P1823 P1906.1 Superseded 754-1985 830 1219 1233 1362 1364 1471 See also IEEE Standards Association CategoryIEEE standards Retrieved from  httpsen.wikipedia.orgwindex.phptitleSoftware_quality_assurance oldid911103089  Categories  Quality Quality assurance Software quality IEEE standards Hidden categories Articles lacking in-text citations from April 2019 All articles lacking in-text citations All articles with unsourced statements Articles with unsourced statements from November 2015 Articles needing cleanup from April 2019 All pages needing cleanup Articles with sections that need to be turned into prose from April 2019 Commons category link is on Wikidata