Reliability engineering From Wikipedia, the free encyclopedia Jump to navigation Jump to search Reliability engineering is a sub-discipline of systems engineering that emphasizes dependability in the lifecycle management of a product . Dependability, or reliability, describes the ability of a system or component to function under stated conditions for a specified period of time. 1  Reliability is closely related to availability , which is typically described as the ability of a component or system to function at a specified moment or interval of time. Reliability is theoretically defined as the probability of success  Reliability  1  Probability of Failure   displaystyle textReliability1-textProbability of Failure as the frequency of failures or in terms of availability , as a probability derived from reliability, testability and maintainability. Testability , maintainability and maintenance are often defined as a part of reliability engineering in reliability programs. Reliability plays a key role in the cost-effectiveness of systems. Reliability engineering deals with the estimation, prevention and management of high levels of lifetime engineering uncertainty and risks of failure. Although stochastic parameters define and affect reliability, reliability is not solely achieved by mathematics and statistics. 2  3  One cannot really find a root cause needed to effectively prevent failures by only looking at statistics. Nearly all teaching and literature on the subject emphasize these aspects, and ignore the reality that the ranges of uncertainty involved largely invalidate quantitative methods for prediction and measurement. 4  For example, it is easy to represent probability of failure as a symbol or value in an equation, but it is almost impossible to predict its true magnitude in practice, which is massively multivariate, so having the equation for reliability does not begin to equal having an accurate predictive measurement of reliability. Reliability engineering relates closely to safety engineering and to system safety , in that they use common methods for their analysis and may require input from each other. Reliability engineering focuses on costs of failure caused by system downtime, cost of spares, repair equipment, personnel, and cost of warranty claims. Safety engineering normally focuses more on preserving life and nature than on cost, and therefore deals only with particularly dangero us system-failure modes. High reliability  safety factor  levels also result from good engineering and from attention to detail, and almost never from only reactive failure management using reliability accounting and statistics. 5  Contents 1 History 2 Overview 2.1 Objective 2.2 Scope and techniques 2.3 Definitions 2.4 Basics of a reliability assessment 3 Reliability and availability program plan 4 Reliability requirements 5 Reliability culture  human errors  human factors 6 Reliability prediction and improvement 6.1 Design for reliability 6.1.1 Statistics-based approach i.e. MTBF 6.1.2 Physics-of-failure-based approach 6.1.3 Common tools and techniques 6.2 The importance of language 7 Reliability modeling 7.1 Reliability theory 7.2 Quantitative system reliability parameterstheory 8 Reliability testing 8.1 Reliability test requirements 8.2 Accelerated testing 9 Software reliability 10 Structural reliability 11 Comparison to safety engineering 11.1 Fault tolerance 11.2 Basic reliability and mission operational reliability 11.3 Detectability and common cause failures 12 Reliability versus quality Six Sigma 13 Reliability operational assessment 14 Reliability organizations 15 Education 16 See also 17 References 18 Further reading 18.1 US standards, specifications, and handbooks 18.2 UK standards 18.3 French standards 18.4 International standards 19 External links History  edit  The word reliability can be traced back to 1816, and is first attested to the poet Samuel Taylor Coleridge . 6  Before World War II the term was linked mostly to repeatability  a test in any type of science was considered reliable if the same results would be obtained repeatedly. In the 1920s, product improvement through the use of statistical process control was promoted by Dr. Walter A. Shewhart at Bell Labs , 7  around the time that Waloddi Weibull was working on statistical models for fatigue. The development of reliability engineering was here on a parallel path with quality. The modern use of the word reliability was defined by the U.S. military in the 1940s, characterizing a product that would operate when expected and for a specified period of time. In World War II, many reliability issues were due to the inherent unreliability of electronic equipment available at the time, and to fatigue issues. In 1945, M.A. Miner published the seminal paper titled Cumulative Damage in Fatigue in an ASME journal. A main application for reliability engineering in the military was for the vacuum tube as used in radar systems and other el ectronics, for which reliability proved to be very problematic and costly. The IEEE formed the Reliability Society in 1948. In 1950, the United States Department of Defense formed group called the Advisory Group on the Reliability of Electronic Equipment AGREE to investigate reliability methods for military equipment. 8  This group recommended three main ways of working Improve component reliability. Establish quality and reliability requirements for suppliers. Collect field data and find root causes of failures. In the 1960s, more emphasis was given to reliability testing on component and system level. The famous military standard 781 was created at that time.  citation needed  Around this period also the much-used and also much-debated military handbook 217 was published by RCA and was used for the prediction of failure rates of components. The emphasis on component reliability and empirical research e.g. Mil Std 217 alone slowly decreased. More pragmatic approaches, as used in the consumer industries, were being used. In the 1980s, televisions were increasingly made up of solid-state semiconductors. Automobiles rapidly increased their use of semic onductors with a variety of microcomputers under the hood and in the dash. Large air conditioning systems developed electronic controllers, as had microwave ovens and a variety of other appliances. Communications systems began to adopt electronics to replace older mechanical switching systems. Bellcore issued the first consumer prediction methodology for telecommunications, and SAE developed a similar document SAE870050 for automotive applications. The nature of predictions evolved during the decade, and it became apparent that die complexity wasnt the only factor that determined failure rates for integrated circuits ICs. Kam Wong published a paper questioning the bathtub curve 9  see also reliability-centered maintenance . During this decade, the failure rate of many components dropped by a factor of 10. Software became important to the reliability of systems. By the 1990s, the pace of IC development was picking up. Wider use of stand-alone microcomputers was common, and the PC market helped keep IC densities following Moores law and doubling about every 18 months. Reliability engineering was now changing as it moved towards understanding the physics of failure . Failure rates for components kept dropping, but system-level issues became more prominent. Systems thinking became more and more important. For software, the CMM model  Capability Maturity Model  was developed, which gave a more qualitative approach to reliability. ISO 9000 added reliability measures as part of the design and development portion of certification. The expansion of the World-Wide Web created new challenges of security and trust. The older problem of too little reliability information available had now been replaced by too much information of questionabl e value. Consumer reliability problems could now be discussed online in real time using data. New technologies such as micro-electromechanical systems  MEMS , handheld GPS , and hand-held devices that combined cell phones and computers all represent challenges to maintain reliability. Product development time continued to shorten through this decade and what had been done in three years was being done in 18 months. This meant that reliability tools and tasks had to be more closely tied to the development process itself. In many ways, reliability became part of everyday life and consumer expectations. Overview  edit  Objective  edit  The objectives of reliability engineering, in decreasing order of priority, are 10  To apply engineering knowledge and specialist techniques to prevent or to reduce the likelihood or frequency of failures. To identify and correct the causes of failures that do occur despite the efforts to prevent them. To determine ways of coping with failures that do occur, if their causes have not been corrected. To apply methods for estimating the likely reliability of new designs, and for analysing reliability data. The reason for the priority emphasis is that it is by far the most effective way of working, in terms of minimizing costs and generating reliable products. The primary skills that are required, therefore, are the ability to understand and anticipate the possible causes of failures, and knowledge of how to prevent them. It is also necessary to have knowledge of the methods that can be used for analysing designs and data. Scope and techniques  edit  Reliability engineering for  complex systems  requires a different, more elaborate systems approach than for non-complex systems. Reliability engineering may in that case involve System availability and mission readiness analysis and related reliability and maintenance requirement allocation Functional system failure analysis and derived requirements specification Inherent system design reliability analysis and derived requirements specification for both hardware and software design System diagnostics design Fault tolerant systems e.g. by redundancy Predictive and preventive maintenance e.g. reliability-centered maintenance Human factors  human interaction  human errors Manufacturing- and assembly-induced failures effect on the detected 0-hour quality and reliability Maintenance-induced failures Transport-induced failures Storage-induced failures Use load studies, component stress analysis, and derived requirements specification Software systematic failures Failure  reliability testing and derived requirements Field failure monitoring and corrective actions Spare parts stocking availability control Technical documentation, caution and warning analysis Data and information acquisitionorganisation creation of a general reliability development hazard log and FRACAS system Chaos engineering Effective reliability engineering requires understanding of the basics of failure mechanisms for which experience, broad engineering skills and good knowledge from many different special fields of engineering are required, 11  for example Tribology Stress mechanics Fracture mechanics  fatigue Thermal engineering Fluid mechanics  shock-loading engineering Electrical engineering Chemical engineering e.g. corrosion  Material science Definitions  edit  Reliability may be defined in the following ways The idea that an item is fit for a purpose with respect to time The capacity of a designed, produced, or maintained item to perform as required over time The capacity of a population of designed, produced or maintained items to perform as required over specified time The resistance to failure of an item over time The probability of an item to perform a required function under stated conditions for a specified period of time The durability of an object Basics of a reliability assessment  edit  Many engineering techniques are used in reliability risk assessments , such as reliability hazard analysis , failure mode and effects analysis FMEA, 12  fault tree analysis FTA, Reliability Centered Maintenance , probabilistic load and material stress and wear calculations, probabilistic fatigue and creep analysis, human error analysis, manufacturing defect analysis, reliability testing, etc. It is crucial that these analyses are done properly and with much attention to detail to be effective. Because of the large number of reliability techniques, their expense, and the varying de grees of reliability required for different situations, most projects develop a reliability program plan to specify the reliability tasks  statement of work SoW requirements that will be performed for that specific system. Consistent with the creation of a safety cases , for example ARP4761 , the goal of reliability assessments is to provide a robust set of qualitative and quantitative evidence that use of a component or system will not be associated with unacceptable risk. The basic steps to take 13  are to Thoroughly identify relevant unreliability hazards, e.g. potential conditions, events, human errors, failure modes, interactions, failure mechanisms and root causes, by specific analysis or tests. Assess the associated system risk, by specific analysis or testing. Propose mitigation, e.g. requirements , design changes, detection logic, maintenance, training, by which the risks may be lowered and controlled for at an acceptable level. Determine the best mitigation and get agreement on final, acceptable risk levels, possibly based on costbenefit analysis. Risk here is the combination of probability and severity of the failure incident scenario occurring. In a de minimis definition, severity of failures includes the cost of spare parts, man-hours, logistics, damage secondary failures, and downtime of machines which may cause production loss. A more complete definition of failure also can mean injury, dismemberment, and death of people within the system witness mine accidents, industrial accidents, space shuttle failures and the same to inn ocent bystanders witness the citizenry of cities like Bhopal, Love Canal, Chernobyl, or Sendai, and other victims of the 2011 Thoku earthquake and tsunamiin this case, reliability engineering becomes system safety. What is acceptable is determined by the managing authority or customers or the affected communities. Residual risk is the risk that is left over after all relia bility activities have finished, and includes the unidentified riskand is therefore not completely quantifiable. Risk vs costcomplexity 14  The complexity of the technical systems such as improvements of design and materials, planned inspections, fool-proof design, and backup redundancy decreases risk and increases the cost. The risk can be decreased to ALARA as low as reasonably achievable or ALAPA as low as practically achievable levels. Reliability and availability program plan  edit  Implementing a reliability program is not simply a software purchase it is not just a checklist of items that must be completed that will ensure one has reliable products and processes. A reliability program is a complex learning and knowledge-based system unique to ones products and processes. It is supported by leadership, built on the skills that one develops within a team , integrated into business processes and executed by following proven standard work practices. 15  A reliability program plan is used to document exactly what best practices tasks, methods, tools, analysis, and tests are required for a particular subsystem, as well as clarify customer requirements for reliability assessment. For large-scale complex systems, the reliability program plan should be a separate document . Resource determination for manpower and budgets for testing and other tasks is critical for a successful program. In general, the amount of work required for an effective program for complex systems is large. A reliability program plan is essential for achieving high levels of reliability, testability, maintainability , and the resulting system availability , and is developed early during system development and refined over the systems life-cycle. It specifies not only what the reliability engineer does, but also the tasks performed by other stakeholders . A reliability program plan is approved by top program management, which is responsible for allocation of sufficient resources for its implementation. A reliability program plan may also be used to evaluate and improve the availability of a system by the strategy of focusing on increasing testability  maintainability and not on reliability. Improving maintainability is generally easier than improving reliability. Maintainability estimates repair rates are also generally more accurate. However, because the uncertainties in the reliability estimates are in most cases very large, they are likely to dominate the availability calculation prediction uncertainty problem, even when maintainability levels are very high. When reliability is not under control, more complicated issues may arise, like manpower maintainers  customer service capability shortages, spare part availability, logistic delays, lack of repair facilities, extensive retro-fit and complex configuration management costs, and others. The problem of unreliability may be increased al so due to the domino effect of maintenance-induced failures after repairs. Focusing only on maintainability is therefore not enough. If failures are prevented, none of the other issues are of any importance, and therefore reliability is generally regarded as the most important part of availability. Reliability needs to be evaluated and improved related to both availability an d the total cost of ownership TCO due to cost of spare parts, maintenance man-hours, transport costs, storage cost, part obsolete risks, etc. But, as GM and Toyota have belatedly discovered, TCO also includes the downstream liability costs when reliability calculations have not sufficiently or accurately addressed customers personal bodily risks. Often a trade-off is needed between the two. There mig ht be a maximum ratio between availability and cost of ownership. Testability of a system should also be addressed in the plan, as this is the link between reliability and maintainability. The maintenance strategy can influence the reliability of a system e.g., by preventive andor predictive maintenance , although it can never bring it above the inherent reliability. The reliability plan should clearly provide a strategy for availability control. Whether only availability or also cost of ownership is more important depends on the use of the system. For example, a system that is a critical link in a production systeme.g., a big oil platformis normally allowed to have a very high cost of ownership if that cost translates to even a minor inc rease in availability, as the unavailability of the platform results in a massive loss of revenue which can easily exceed the high cost of ownership. A proper reliability plan should always address RAMT analysis in its total context. RAMT stands for reliability, availability, maintainabilitymaintenance, and testability in the context of the customers needs. Reliability requirements  edit  For any system, one of the first tasks of reliability engineering is to adequately specify the reliability and maintainability requirements allocated from the overall availability needs and, more importantly, derived from proper design failure analysis or preliminary prototype test results. Clear requirements able to designed to should constrain the designers from designing particular unreliable items  constructions  interfaces  systems. Setting only availability, reliability, testability, or maintainability targets e.g., max. failure rates is no t appropriate. This is a broad misunderstanding about Reliability Requirements Engineering. Reliability requirements address the system itself, including test and assessment requirements, and associated tasks and documentation. Reliability requirements are included in the appropriate system or subsystem requirements specifications, test plans, and contract statements. Creat ion of proper lower-level requirements is critical. 16  Provision of only quantitative minimum targets e.g., MTBF values or failure rates is not sufficient for different reasons. One reason is that a full validation related to correctness and verifiability in time of a quantitative reliability allocation requirement spec on lower levels for complex systems can often not be made as a consequence of 1 the fact that the requ irements are probabilistic, 2 the extremely high level of uncertainties involved for showing compliance with all these probabilistic requirements, and because 3 reliability is a function of time, and accurate estimates of a probabilistic reliability number per item are available only very late in the project, sometimes even after many years of in-service use. Compare this problem with the continuous re-balancing of, for example, lower-level-system mass requirements in the development of an aircraft, which is already often a big undertaking. Notice that in this case, masses do only differ in terms of only some  , are not a function of time, the data is non-probabilistic and available already in CAD models. In case of reliability, the levels of unreliability failure rates may change with factors of decades multiples of 10 as result of very minor deviations in design, process, or anything else. 17  The information is often not available without huge uncertainties within the development phase. This makes this allocation problem almost impossible to do in a useful, practical, valid manner that does not result in massive over- or under-specification. A pragmatic approach is therefore neededfor example the use of general levels  classes of quantitative requirements depen ding only on severity of failure effects. Also, the validation of results is a far more subjective task than for any other type of requirement. Quantitative reliability parametersin terms of MTBFare by far the most uncertain design parameters in any design. Furthermore, reliability design requirements should drive a system or part design to incorporate features that prevent failures from occurring, or limit consequences from failure in the first place. Not only would it aid in some predictions, this effort would keep from distracting the engineering effort into a kind of accounting work. A design requirement should be precise en ough so that a designer can design to it and can also provethrough analysis or testingthat the requirement has been achieved, and, if possible, within some a stated confidence. Any type of reliability requirement should be detailed and could be derived from failure analysis Finite-Element Stress and Fatigue analysis, Reliability Hazard Analysis, FTA, FMEA, Human Factor An alysis, Functional Hazard Analysis, etc. or any type of reliability testing. Also, requirements are needed for verification tests e.g., required overload stresses and test time needed. To derive these requirements in an effective manner, a systems engineering -based risk assessment and mitigation logic should be used. Robust hazard log systems must be created that contain detailed information on why and how systems could or have failed. Requirements are to be derived and tracked in this way. These practical design requirements shall drive the design and not be used only for verification purposes. These requirements often design constraints are in this way derived from failure analysis or preliminary tests. Understanding of this difference compared to only purely quantitative logistic requirement specification e.g., Failure Rate  MTBF target is paramount in the development of successful complex systems. 18  The maintainability requirements address the costs of repairs as well as repair time. Testability not to be confused with test requirements requirements provide the link between reliability and maintainability and should address detectability of failure modes on a particular system level, isolation levels, and the creation of diagnostics procedures. As indicated above, r eliability engineers should also address requirements for various reliability tasks and documentation during system development, testing, production, and operation. These requirements are generally specified in the contract statement of work and depend on how much leeway the customer wishes to provide to the contractor. Reliability tasks include various analyses, planning, and failure reporting. Task selection depends on the criticality of the system as well as cost. A safety-critical system may require a formal failure reporting and review process throughout development, whereas a non-critical system may rely on final test reports. The most common reliability program tasks are documented in reliability program standards, such as MIL-STD-785 and IEEE 1332. Failure reporting analysis and corrective action systems are a common approach for productprocess reliability monitoring. Reliability culture  human errors  human factors  edit  In practice, most failures can be traced back to some type of human error , for example in Management decisions e.g. in budgeting, timing, and required tasks Systems Engineering Use studies load cases Systems Engineering Requirement analysis  setting Systems Engineering Configuration control Assumptions Calculations  simulations  FEM analysis Design Design drawings Testing e.g. incorrect load settings or failure measurement Statistical analysis Manufacturing Quality control Maintenance Maintenance manuals Training Classifying and ordering of information Feedback of field information e.g. incorrect or too vague etc. However, humans are also very good at detecting such failures, correcting for them, and improvising when abnormal situations occur. Therefore, policies that completely rule out human actions in design and production processes to improve reliability may not be effective. Some tasks are better performed by humans and some are better performed by machines. 19  Furthermore, human errors in management the organization of data and information or the misuse or abuse of items, may also contribute to unreliability. This is the core reason why high levels of reliability for complex systems can only be achieved by following a robust systems engineering process with proper planning and execution of the validation and verification tasks. This also includes careful organization of data and information sharing and creating a reliability culture, in the same way that having a safety culture is paramount in the development of safety critical systems. Reliability prediction and improvement  edit  See also Risk Assessment   Quantitative risk assessment Reliability prediction combines creation of a proper reliability model see further on this page estimation and justification of input parameters for this model e.g. failure rates for a particular failure mode or event and the mean time to repair the system for a particular failure estimation of output reliability parameters at system or part level i.e. system availability or frequency of a particular functional failure The emphasis on quantification and target setting e.g. MTBF might imply there is a limit to achievable reliability, however, there is no inherent limit and development of higher reliability does not need to be more costly. In addition, they argue that prediction of reliability from historic data can be very misleading, with comparisons only valid for identical designs, products, manufacturing processes, and maintenance with identical operating loads and usage environments. Even minor changes in any of these could have major effects on reliability. Furthermore, the most unreliable and important items i.e. th e most interesting candidates for a reliability investigation are most likely to be modified and re-engineered since historical data was gathered, making the standard re-active or pro-active statistical methods and processes used in e.g. medical or insurance industries less effective. Another surprising  but logical  argument is that to be able to accurately predict reliab ility by testing, the exact mechanisms of failure must be known and therefore  in most cases  could be prevented Following the incorrect route of trying to quantify and solve a complex reliability engineering problem in terms of MTBF or probability using an-incorrect  for example, the re-active  approach is referred to by Barnard as Playing the Numbers Game and is regard ed as bad practice. 5  For existing systems, it is arguable that any attempt by a responsible program to correct the root cause of discovered failures may render the initial MTBF estimate invalid, as new assumptions themselves subject to high error levels of the effect of this correction must be made. Another practical issue is the general unavailability of detailed failure data, with those availab le often featuring inconsistent filtering of failure feedback data, and ignoring statistical errors which are very high for rare events like reliability related failures. Very clear guidelines must be present to count and compare failures related to different type of root-causes e.g. manufacturing-, maintenance-, transport-, system-induced or inherent design failures. Com paring different types of causes may lead to incorrect estimations and incorrect business decisions about the focus of improvement. To perform a proper quantitative reliability prediction for systems may be difficult and very expensive if done by testing. At the individual part-level, reliability results can often be obtained with comparatively high confidence, as testing of many sample parts might be possible using the available testing budget. However, unfortunately these tests may lack validity at a syst em-level due to assumptions made at part-level testing. These authors emphasized the importance of initial part- or system-level testing until failure, and to learn from such failures to improve the system or part. The general conclusion is drawn that an accurate and absolute prediction  by either field-data comparison or testing  of reliability is in most cases not possible. An exception might be failures due to wear-out problems such as fatigue failures. In the introduction of MIL-STD-785 it is written that reliability prediction should be used with great caution, if not used solely for comparison in trade-off studies. Design for reliability  edit  Design for Reliability DfR is a process that encompasses tools and procedures to ensure that a product meets its reliability requirements, under its use environment, for the duration of its lifetime. DfR is implemented in the design stage of a product to proactively improve product reliability. 20  DfR is often used as part of an overall Design for Excellence DfX strategy. Statistics-based approach i.e. MTBF  edit  Reliability design begins with the development of a system model . Reliability and availability models use block diagrams and Fault Tree Analysis to provide a graphical means of evaluating the relationships between different parts of the system. These models may incorporate predictions based on failure rates taken from historical data. While the input data predictions are often not accurate in an absolute sense, they are valuable to assess relative differences in design alternatives. Maintainability parameters, for ex ample Mean time to repair MTTR, can also be used as inputs for such models. The most important fundamental initiating causes and failure mechanisms are to be identified and analyzed with engineering tools. A diverse set of practical guidance as to performance and reliability should be provided to designers so that they can generate low-stressed designs and products that protect, or are protected against, damage and excessive wear. Proper validation of input loads requirements may be needed, in addition to verification for reliability performance by testing. A fault tree diagram One of the most important design techniques is redundancy . This means that if one part of the system fails, there is an alternate success path, such as a backup system. The reason why this is the ultimate design choice is related to the fact that high-confidence reliability evidence for new parts or systems is often not available, or is extremely expensive to obtain. By combining redundancy, together with a high level of failure moni toring, and the avoidance of common cause failures even a system with relatively poor single-channel part reliability, can be made highly reliable at a system level up to mission critical reliability. No testing of reliability has to be required for this. In conjunction with redundancy, the use of dissimilar designs or manufacturing processes e.g. via different suppliers of similar parts for single independent channels, can provide less sensitivity to quality issues e.g. early childhood failures at a single supplier, allowing very-high levels of reliability to be achieved at all moments of the development cycle from early life to long-term. Redundancy can also be applied in systems engineering by double checking requirements, data, designs , calculations, software, and tests to overcome systematic failures. Another effective way to deal with reliability issues is to perform analysis that predicts degradation, enabling the prevention of unscheduled downtime events  failures. RCM Reliability Centered Maintenance programs can be used for this. Physics-of-failure-based approach  edit  For electronic assemblies, there has been an increasing shift towards a different approach called physics of failure . This technique relies on understanding the physical static and dynamic failure mechanisms. It accounts for variation in load, strength, and stress that lead to failure with a high level of detail, made possible with the use of modern finite element method FEM software programs that can handle complex geometries and mechanisms such as creep, stress relaxation, fatigue, and probabilistic design  Monte Carlo Methods DOE. The material or component can be re-designed to reduce the probability of failure and to make it more robust against such variations. Another common design technique is component derating  i.e. selecting components whose specifications significantly exceed the expected stress levels, such as using heavier gauge electrical wire than might normally be specified for the expected electric current . Common tools and techniques  edit  Many of the tasks, techniques, and analyses used in Reliability Engineering are specific to particular industries and applications, but can commonly include Physics of failure PoF Built-in self-test BIT testability analysis Failure mode and effects analysis FMEA Reliability hazard analysis Reliability block-diagram analysis Dynamic reliability block-diagram analysis 21  Fault tree analysis Root cause analysis Statistical engineering, design of experiments  e.g. on simulations  FEM models or with testing Sneak circuit analysis Accelerated testing Reliability growth analysis re-active reliability Weibull analysis for testing or mainly re-active reliability Thermal analysis by finite element analysis FEA and  or measurement Thermal induced, shock and vibration fatigue analysis by FEA and  or measurement Electromagnetic analysis Avoidance of single point of failure SPOF Functional analysis and functional failure analysis e.g., function FMEA, FHA or FFA Predictive and preventive maintenance reliability centered maintenance RCM analysis Testability analysis Failure diagnostics analysis normally also incorporated in FMEA Human error analysis Operational hazard analysis PreventativePlanned Maintenance Optimization PMO Manual screening Integrated logistics support Results from these methods are presented during reviews of part or system design, and logistics. Reliability is just one requirement among many for a complex part or system. Engineering trade-off studies are used to determine the optimum balance between reliability requirements and other constraints. The importance of language  edit  Reliability engineers, whether using quantitative or qualitative methods to describe a failure or hazard, rely on language to pinpoint the risks and enable issues to be solved. The language used must help create an orderly description of the functionitemsystem and its complex surrounding as it relates to the failure of these functionsitemssystems. Systems engineering is ver y much about finding the correct words to describe the problem and related risks, so that they can be readily solved via engineering solutions. Jack Ring said that a systems engineers job is to language the project. Ring et al. 2000 22  For partsystem failures, reliability engineers should concentrate more on the why and how, rather that predicting when. Understanding why a failure has occurred e.g. due to over-stressed components or manufacturing issues is far more likely to lead to improvement in the designs and processes used 4  than quantifying when a failure is likely to occur e.g. via determining MTBF. To do this, first the reliability hazards relating to the partsystem need to be classified and ordered based on some form of qualitative and quantitative logic if possible to allow for more efficient assessment and eventual improvement. This is partly done in pure language and proposition logic, but also based on experience with similar items. This can for example be seen in descriptions of events in fault tree analysis , FMEA analysis, and hazard tracking logs. In this sense language and proper grammar part of qualitative analysis plays an important role in reliability engineering, just like it does in safety engineering or in-general within systems engineering . Correct use of language can also be key to identifying or reducing the risks of human error , which are often the root cause of many failures. This can include proper instructions in maintenance manuals, operation manuals, emergency procedures, and others to prevent systematic human errors that may result in system failures. These should be written by trained or experienced technical authors using so-called simplified English or Simplified Technical English , where words and structure are specifically chosen and created so as to reduce ambiguity or risk of confusion e.g. an replace the old part could ambiguously refer to a swapping a worn-out part with a non worn-out part, or replacing a part with one using a more recent and hopefully improved design. Reliability modeling  edit  Reliability modeling is the process of predicting or understanding the reliability of a component or system prior to its implementation. Two types of analysis that are often used to model a complete systems availability behavior including effects from logistics issues like spare part provisioning, transport and manpower are Fault Tree Analysis and reliability block diagrams. At a component level, the same types of analyses can be used together with others. The input for the models can come from many sources including testing prior operational experience field data as well as data handbooks from similar or related industries. Regardless of source, all model input data must be used with great caution, as predictions are only valid in cases where the same product was used in the same context. As such, predictions are often only used to help compare alternatives. A reliability block diagram showing a 1oo3 1 out of 3 redundant designed subsystem For part level predictions, two separate fields of investigation are common The physics of failure approach uses an understanding of physical failure mechanisms involved, such as mechanical crack propagation or chemical corrosion degradation or failure The parts stress modeling approach is an empirical method for prediction based on counting the number and type of components of the system, and the stress they undergo during operation. Software reliability is a more challenging area that must be considered when computer code provides a considerable component of a systems functionality. Reliability theory  edit  Main articles Failure rate and Survival analysis Reliability is defined as the probability that a device will perform its intended function during a specified period of time under stated conditions. Mathematically, this may be expressed as, R  t   P r  T  t    t  f  x  d x   displaystyle RtPrT tint _tinfty fx,dx  , where f  x  displaystyle fx is the failure probability density function and t displaystyle t is the length of the period of time which is assumed to start from time zero. There are a few key elements of this definition Reliability is predicated on intended function Generally, this is taken to mean operation without failure. However, even if no individual part of the system fails, but the system as a whole does not do what was intended, then it is still charged against the system reliability. The system requirements specification is the criterion against which reliability is measured. Reliability applies to a specified period of time. In practical terms, this means that a system has a specified chance that it will operate without failure before time t displaystyle t . Reliability engineering ensures that components and materials will meet the requirements during the specified time. Note that units other than time may sometimes be used e.g. a mission, operation cycles. Reliability is restricted to operation under stated or explicitly defined conditions. This constraint is necessary because it is impossible to design a system for unlimited conditions. A Mars Rover will have different specified conditions than a family car. The operating environment must be addressed during design and testing. That same rover may be required to operate in varying conditions requiring additional scrutiny. Two notable references on reliability theory and its mathematical and statistical foundations are Barlow, R. E. and Proschan, F. 1982 and Samaniego, F. J. 2007. Quantitative system reliability parameterstheory  edit  Quantitative requirements are specified using reliability parameters . The most common reliability parameter is the mean time to failure MTTF, which can also be specified as the failure rate this is expressed as a frequency or conditional probability density function PDF or the number of failures during a given period. These parameters may be useful for higher system levels and systems that are operated frequently i.e. vehicles, machinery, and electronic equipment. Reliability increases as the MTTF increases. The MTTF is usually specified in hours, but can a lso be used with other units of measurement, such as miles or cycles. Using MTTF values on lower system levels can be very misleading, especially if they do not specify the associated Failures Modes and Mechanisms The F in MTTF. 17  In other cases, reliability is specified as the probability of mission success. For example, reliability of a scheduled aircraft flight can be specified as a dimensionless probability or a percentage, as often used in system safety engineering. A special case of mission success is the single-shot device or system. These are devices or systems that remain relatively dormant and only operate once. Examples include automobile airbags , thermal batteries and missiles . Single-shot reliability is specified as a probability of one-time success or is subsumed into a related parameter. Single-shot missile reliability may be specified as a requirement for the probability of a hit. For such systems, the probability of failure on demand PFD is the reliability measure  this is actually an unavailability number. The PFD is derived from failure rate a frequency of occurrence and mission time for non-repairable systems. For repairable systems, it is obtained from failure rate, mean-time-to-repair MTTR, and test interval. This measure may not be unique for a given system as this measure depends on the kind of demand. In addition to system level requirements, reliability requirements may be specified for critical subsystems. In most cases, reliability parameters are specified with appropriate statistical confidence intervals . Reliability testing  edit  The purpose of reliability testing is to discover potential problems with the design as early as possible and, ultimately, provide confidence that the system meets its reliability requirements. Reliability testing may be performed at several levels and there are different types of testing. Complex systems may be tested at component, circuit board, unit, assembly, subsystem and system levels. 23  The test level nomenclature varies among applications. For example, performing environmental stress screening tests at lower levels, such as piece parts or small assemblies, catches problems before they cause failures at higher levels. Testing proceeds during each level of integration through full-up system testing, developmental testing, and operational testing, thereby reducing program risk. However, testing does not mitigate unreliability risk. With each test both a statistical type 1 and type 2 error could be made and depends on sample size, test time, assumptions and the needed discrimination ratio. There is risk of incorrectly accepting a bad design type 1 error and the risk of incorrectly rejecting a good design type 2 error. It is not always feasible to test all system requirements. Some systems are prohibitively expensive to test some failure modes may take years to observe some complex interactions result in a huge number of possible test cases and some tests require the use of limited test ranges or other resources. In such cases, different approaches to testing can be used, such as highly accelerated life testing, design of experiments , and simulations . The desired level of statistical confidence also plays a role in reliability testing. Statistical confidence is increased by increasing either the test time or the number of items tested. Reliability test plans are designed to achieve the specified reliability at the specified confidence level with the minimum number of test units and test time. Different test plans result in different levels of risk to the producer and consumer. The desired reliability, statistical confidence, and risk levels for each side influence the ultimate test plan. The customer and developer should agree in advance on how reliability requirements will be tested. A key aspect of reliability testing is to define failure. Although this may seem obvious, there are many situations where it is not clear whether a failure is really the fault of the system. Variations in test conditions, operator differences, weather and unexpected situations create differences between the customer and the system developer. One strategy to address this issue is to use a scoring conference process. A scoring conference includes representatives from the customer, the developer, the test organization, the reliability organization, and sometimes independent observers. The scoring conference process is defined in the statement of work. Each test case is considered by the group and scored as a success or failure. This scoring is the o fficial result used by the reliability engineer. As part of the requirements phase, the reliability engineer develops a test strategy with the customer. The test strategy makes trade-offs between the needs of the reliability organization, which wants as much data as possible, and constraints such as cost, schedule and available resources. Test plans and procedures are developed for each reliability test, and results are docum ented. Reliability testing is common in the Photonics industry. Examples of reliability tests of lasers are life test and burn-in . These tests consist of the highly accelerated aging, under controlled conditions, of a group of lasers. The data collected from these life tests are used to predict laser life expectancy under the intended operating characteristics. 24  Reliability test requirements  edit  Reliability test requirements can follow from any analysis for which the first estimate of failure probability, failure mode or effect needs to be justified. Evidence can be generated with some level of confidence by testing. With software-based systems, the probability is a mix of software and hardware-based failures. Testing reliability requirements is problematic for several reasons. A single test is in most cases insufficient to generate enough statistical data. Multiple tests or long-duration tests are usually very expensive. Some tests are simply impractical, and environmental conditions can be hard to predict over a systems life-cycle. Reliability engineering is used to design a realistic and affordable test program that provides empirical evidence that the system meets its reliability requirements. Statistical confidence levels are used to address some of these concerns. A certain parameter is expressed along with a corresponding confidence level for example, an MTBF of 1000 hours at 90 confidence level. From this specification, the reliability engineer can, for example, design a test with explicit criteria for the number of hours and number of failures until the requirement is met or failed. Different sorts of tests are possible. The combination of required reliability level and required confidence level greatly affects the development cost and the risk to both the customer and producer. Care is needed to select the best combination of requirementse.g. cost-effectiveness. Reliability testing may be performed at various levels, such as component, subsystem and system . Also, many factors must be addressed during testing and operation, such as extreme temperature and humidity, shock, vibration, or other environmental factors like loss of signal, cooling or power or other catastrophes such as fire, floods, excessive heat, physical or security violations or other myriad forms of damage or degradation. For systems that must last many years, accelerated life tests may be needed. Accelerated testing  edit  The purpose of accelerated life testing ALT test is to induce field failure in the laboratory at a much faster rate by providing a harsher, but nonetheless representative, environment. In such a test, the product is expected to fail in the lab just as it would have failed in the fieldbut in much less time. The main objective of an accelerated test is either of the following To discover failure modes To predict the normal field life from the high stress lab life An Accelerated testing program can be broken down into the following steps Define objective and scope of the test Collect required information about the product Identify the stresses Determine level of stresses Conduct the accelerated test and analyze the collected data. Common ways to determine a life stress relationship are Arrhenius model Eyring model Inverse power law model Temperaturehumidity model Temperature non-thermal model Software reliability  edit  Further information Software reliability and Site reliability engineering Software reliability is a special aspect of reliability engineering. System reliability, by definition, includes all parts of the system, including hardware, software, supporting infrastructure including critical external interfaces, operators and procedures. Traditionally, reliability engineering focuses on critical hardware parts of the system. Since the widespread use of d igital integrated circuit technology, software has become an increasingly critical part of most electronics and, hence, nearly all present day systems. There are significant differences, however, in how software and hardware behave. Most hardware unreliability is the result of a component or material failure that results in the system not performing its intended function. Repairing or replacing the hardware component restores the system to its original operating state. However, software does not fail in the same sense that h ardware fails. Instead, software unreliability is the result of unanticipated results of software operations. Even relatively small software programs can have astronomically large combinations of inputs and states that are infeasible to exhaustively test. Restoring software to its original state only works until the same combination of inputs and states results in the same unintended result. Software reliability engineering must take this into account. Despite this difference in the source of failure between software and hardware, several software reliability models based on statistics have been proposed to quantify what we experience with software the longer software is run, the higher the probability that it will eventually be used in an untested manner and exhibit a latent defect that results in a failure  Shooman 1987, Musa 2005, Denney 2005. As with hardware, software reliability depends on good requirements, design and implementation. Software reliability engineering relies heavily on a disciplined software engineering process to anticipate and design against unintended consequences . There is more overlap between software quality engineering and software reliability engineering than between hardware quality and reliability. A good software development plan is a key aspect of the software reliability program. The software development plan describes the design and coding standards, peer reviews , unit tests , configuration management , software metrics and software models to be used during software development. A common reliability metric is the number of software faults, usually expressed as faults per thousand lines of code. This metric, along with software execution time, is key to most software reliability models and estimates. The theory is that the software reliability increases as the number of faults or fault density decreases or goes down. Establishing a direct connection b etween fault density and mean-time-between-failure is difficult, however, because of the way software faults are distributed in the code, their severity, and the probability of the combination of inputs necessary to encounter the fault. Nevertheless, fault density serves as a useful indicator for the reliability engineer. Other software metrics, such as complexity, are also use d. This metric remains controversial, since changes in software development and verification practices can have dramatic impact on overall defect rates. Testing is even more important for software than hardware. Even the best software development process results in some software faults that are nearly undetectable until tested. As with hardware, software is tested at several levels, starting with individual units, through integration and full-up system testing. Unlike hardware, it is inadvisable to skip levels of software testi ng. During all phases of testing, software faults are discovered, corrected, and re-tested. Reliability estimates are updated based on the fault density and other metrics. At a system level, mean-time-between-failure data can be collected and used to estimate reliability. Unlike hardware, performing exactly the same test on exactly the same software configuration does not provi de increased statistical confidence. Instead, software reliability uses different metrics, such as code coverage . Eventually, the software is integrated with the hardware in the top-level system, and software reliability is subsumed by system reliability. The Software Engineering Institutes capability maturity model is a common means of assessing the overall software development process for reliability and quality purposes. Structural reliability  edit  Main article Structural reliability Structural reliability or the reliability of structures is the application of reliability theory to the behavior of structures . It is used in both the design and maintenance of different types of structures including concrete and steel structures. 25  26  In structural reliability studies both loads and resistances are modeled as probabilistic variables. Using this approach the probability of failure of a structure is calculated. Comparison to safety engineering  edit  Reliability engineering is concerned with overall minimisation of failures that could lead to financial losses for the responsible entity, whereas safety engineering focuses on minimising a specific set of failure types that in general could lead to large scale, widespread issues beyond the responsible entity. Reliability hazards could transform into incidents leading to a loss of revenue for the company or the customer, for example due to direct and indirect costs associated with loss of production due to system unavailability unexpected high or low demands for spares repair costs man-hours multiple re-designs interruptions to normal production etc. 27  Safety engineering is often highly specific, relating only to certain tightly regulated industries, applications, or areas. It primarily focuses on system safety hazards that could lead to severe accidents including loss of life destruction of equipment or environmental damage. As such, the related system functional reliability requirements are often extremely high. Although it deals with unwanted failures in the same sense as reliability engineering, it, however, has less of a focus on direct costs, and is not concerned with post-failure repair actions. Another difference is the level of impact of failures on society, leading to a tendency for strict control by governments or regulatory bodies e.g. nuclear, aerospace, defense, rail and oil indus tries. 27  This can occasionally lead to safety engineering and reliability engineering having contradictory requirements or conflicting choices at a system architecture level.  citation needed  For example, in train signal control systems it is common practice to use a fail-safe system design concept. In this example, a wrong-side failure needs an extremely low failure rate as such failures can lead to such severe effects, like frontal collisions of two trains where a signalling failure leads to two oncoming trains on the same track being given GREEN lights. Such systems should be and thankfully are designed in a way that the vast majority of failures e.g. temporary or total loss of signals or open contacts of relays will generate RED lights for all trains. This is the safe state. This means in the event of a failure, all trains are stopped immediately. This fail-safe logic might, unfortunately, lower the reliability of the system. The reason for this is the higher risk of false tripping, as any failure whether temporary or not may be trigger such a safe  but costly  shut-down state. Different solutions can be applied for similar issues. See the section on fault tolerance below. Fault tolerance  edit  Main article Fault tolerance Reliability can be increased by using 1oo2 1 out of 2 redundancy at a part or system level. However, if both redundant elements disagree it can be difficult to know which is to be relied upon. In the previous train signalling example this could lead to lower safety levels as there are more possibilities for allowing wrong side or other undetected dangerous failures. Fault -tolerant systems often rely on additional redundancy e.g. 2oo3 voting logic  where multiple redundant elements must agree on a potentially unsage action before it is performed. This increases both reliability and safety at a system level and is often used for so-called operational or mission systems. This is common practice in Aerospace systems that need continued availability and do not have a fail-safe mode. For example, aircraft may use triple modular redundancy for flight computers and control surfaces including occasionally different modes of operation e.g. electricalmechanicalhydraulic as these need to always be operational, due to the fact that there are no safe default positions for control surfaces such as rudders or ailerons when the aircraft is flying. Basic reliability and mission operational reliability  edit  The above example of a 2oo3 fault tolerant system increases both mission reliability as well as safety. However, the basic reliability of the system will in this case still be lower than a non-redundant 1oo1 or 2oo2 system. Basic reliability engineering covers all failures, including those that might not result in system failure, but do result in additional cost due to mai ntenance repair actions logistics spare parts etc. For example, replacement or repair of 1 faulty channel in a 2oo3 voting system, the system is still operating, although with one failed channel it has actually become a 2oo2 system is contributing to basic unreliability but not mission unreliability. As an example, the failure of the tail-light of an aircraft will not preve nt the plane from flying and so is not considered a mission failure, but it does need to be remedied with a related cost, and so does contribute to the basic unreliability levels. Detectability and common cause failures  edit  When using fault tolerant redundant architectures systems or systems that are equipped with protection functions, detectability of failures and avoidance of common cause failures becomes paramount for safe functioning andor mission reliability. Reliability versus quality Six Sigma  edit  Six Sigma has its roots in manufacturing. Reliability engineering is a specialty engineering part of systems engineering. The systems engineering process is a discovery process that is quite unlike a manufacturing process. A manufacturing process is focused on repetitive activities that achieve high quality outputs with minimum cost and time. The systems engineering process must begin b y discovering a real potential problem that needs to be solved the biggest failure that can be made in systems engineering is finding an elegant solution to the wrong problem 28  or in terms of reliability providing elegant solutions to the wrong root causes of system failures. The everyday usage term quality of a product is loosely taken to mean its inherent degree of excellence. In industry, a more precise definition of quality as conformance to requirements or specifications at the start of use is used. Assuming the final product specification adequately captures the original requirements and customersystem needs, the quality level can be meas ured as the fraction of product units shipped that meet specifications. 29  Variation of this static output may affect quality and reliability, but this is not the total picture. More inherent aspects may play a role, and in some cases, these may not be readily measured or controlled by any means. At a part level microscopic material variations such as unavoidable micro-cracks and chemical impurities may over time due to physical or chemical loading  become macroscopic defects. At a system level, systematic failures may play a dominant role e.g. requirement errors or software or software compiler or design flaws. Furthermore, for more complex systems it should be questioned if derived or lower-level requirements and related product specifications are truly valid and correct Will these result in premature failure due to excessive wear, fatigue, corrosion, and debris accumulation, or other issues such as maintenance induced failures Are there any interactions at a system level as inves tigated by for example Fault Tree Analysis How many of these systems still meet function and fulfill the needs after a week of operation What performance losses occurred Did full system failure occur What happens after the end of a one-year warranty period And what happens after 50 years a common lifetime for aircraft, trains, nuclear systems, etc. That is where relia bility comes in. These issues are far more complex and can not be controlled only by a standard quality six sigma way of working. They need a systems engineering approach. Quality is a snapshot at the start of life and mainly related to control of lower-level product specifications. This includes time-zero defects i.e. where manufacturing mistakes escaped final Quality Control. In theory the quality level might be described by a single fraction of defective products. Reliability as a part of systems engineering acts as more of an ongoing accou nt of operational capabilities, often over many years. Theoretically, all items will fail over an infinite period of time. 30  Defects that appear over time are referred to as reliability fallout. To describe reliability fallout a probability model that describes the fraction fallout over time is needed. This is known as the life distribution model. 29  Some of these reliability issues may be due to inherent design issues, which may exist even though the product conforms to specifications. Even items that are produced perfectly may fail over time due to one or more failure mechanisms e.g. due to human error or mechanical, electrical, and chemical factors. These reliability issues can also be influenced by acceptable levels of variation during initial production. Quality is therefore related to manufacturing, and reliability is more related to the validation of sub-system or lower item requirements, system or part inherent design and life cycle solutions. Items that do not conform to any product specification will generally do worse in terms of reliability having a lower MTTF, but this does not always have to be the case. The full mathematical quantification in statistical models of this combined relation is in general very difficult or even practically impossible. In cases where manufacturing variances can be effectively reduced, six sigma tools may be useful to find optimal process solutions which can increase reliability. Six Sigma may also help to design products that are more robust to manufactur ing induced failures. In contrast with Six Sigma, reliability engineering solutions are generally found by focusing on a system design and not on the manufacturing process. Solutions are found in different ways, such as by simplifying a system to allow more of the mechanisms of failure involved to be understood performing detailed calculations of material stress levels allowing suitable safety fa ctors to be determined finding possible abnormal system load conditions and using this to increase robustness of a design to manufacturing variance related failure mechanisms. Furthermore, reliability engineering uses system-level solutions, like designing redundant and fault-tolerant systems for situations with high availability needs see Reliability engineering vs Safety engineering above. Six-Sigma is also more quantified measurement-based. The core of Six-Sigma is built on empirical research and statistical analysis e.g. to find transfer functions of directly measurable parameters. This can not be translated practically to most reliability issues, as reliability is not easily measurable due to being very much a function of time large times may be involve d, especially during the requirements-specification and design phases, where reliability engineering is the most efficient. Full quantification of reliability is in this phase extremely difficult or costly due to the amount of testing required. It also may foster re-active management waiting for system failures to be measured before a decision can be taken. Furthermore, as explained on this page, Reliability problems are likely to come from many different causes e.g. inherent failures, human error, systematic failures besides manufacturing induced defects. Note A defect in six-sigmaquality literature is not the same as a failure Field failure  e.g. fractured item in reliability. A six-sigmaquality defect refers generally to non-conformance with a requirement e.g. basic functionality or a key dimension. Items can, however, fail over time, even if these requirements are all fulfilled. Quality is generally not concerned with asking the crucial question are the requirements actually correct, whereas reliability is. Within an entity, departments related to Quality i.e. concerning manufacturing, Six Sigma i.e. concerning process control, and Reliability product design should provide input to each other to cover the complete risks more efficiently. Reliability operational assessment  edit  Once systems or parts are being produced, reliability engineering attempts to monitor, assess, and correct deficiencies. Monitoring includes electronic and visual surveillance of critical parameters identified during the fault tree analysis design stage. Data collection is highly dependent on the nature of the system. Most large organizations have quality control groups that collect failure data on vehicles, equipment and machinery. Consumer product failures are often tracked by the number of returns. For systems in dormant storage or on standby, it is necessary to establish a formal surveillance program to inspect and test random samples. Any changes to the system, such as field upgrades or recall repairs, require additional reliabili ty testing to ensure the reliability of the modification. Since it is not possible to anticipate all the failure modes of a given system, especially ones with a human element, failures will occur. The reliability program also includes a systematic root cause analysis that identifies the causal relationships involved in the failure such that effective corrective actions may be implemented. When possible, system failures and corrective actions are reported to the reliability engineering organization. Some of the most common methods to apply to a reliability operational assessment are failure reporting, analysis, and corrective action systems FRACAS. This systematic approach develops a reliability, safety, and logistics assessment based on failureincident reporting, management, analysis, and correctivepreventive actions. Organizations today are adopting this method and utilizing commercial systems such as Web-based FRACAS applications that enable them to create a failureincident data repository from which st atistics can be derived to view accurate and genuine reliability, safety, and quality metrics. It is extremely important for an organization to adopt a common FRACAS system for all end items. Also, it should allow test results to be captured in a practical way. Failure to adopt one easy-to-use in terms of ease of data-entry for field engineers and repair shop engineers and easy-to-maintain integrated system is likely to result in a failure of the FRACAS program itself. Some of the common outputs from a FRACAS system include Field MTBF, MTTR, spares consumption, reliability growth, failureincidents distribution by type, location, part no., serial no., and symptom. The use of past data to predict the reliability of new comparable systemsitems can be misleading as reliability is a function of the context of use and can be affected by small changes in designmanufacturing. Reliability organizations  edit  Systems of any significant complexity are developed by organizations of people, such as a commercial company or a government agency. The reliability engineering organization must be consistent with the companys organizational structure . For small, non-critical systems, reliability engineering may be informal. As complexity grows, the need arises for a formal reliability function. Because reliability is important to the customer, the customer may even specify certain aspects of the reliability organization. There are several common types of reliability organizations. The project manager or chief engineer may employ one or more reliability engineers directly. In larger organizations, there is usually a product assurance or specialty engineering organization, which may include reliability, maintainability , quality , safety, human factors , logistics , etc. In such case, the reliability engineer reports to the product assurance manager or specialty engineering manager. In some cases, a company may wish to establish an independent reliability organization. This is desirable to ensure that the system reliability, which is often expensive and time-consuming, is not unduly slighted due to budget and schedule pressures. In such cases, the reliability engineer works for the project day-to-day, but is actually employed and paid by a separate organiz ation within the company. Because reliability engineering is critical to early system design, it has become common for reliability engineers, however, the organization is structured, to work as part of an integrated product team . Education  edit  Some universities offer graduate degrees in reliability engineering. Other reliability engineers typically have an engineering degree, which can be in any field of engineering, from an accredited university or college program. Many engineering programs offer reliability courses, and some universities have entire reliability engineering programs. A reliability engineer may be re gistered as a professional engineer by the state, but this is not required by most employers. There are many professional conferences and industry training programs available for reliability engineers. Several professional organizations exist for reliability engineers, including the American Society for Quality Reliability Division ASQ-RD, 31  the IEEE Reliability Society , the American Society for Quality ASQ, 32  and the Society of Reliability Engineers SRE. 33  A group of engineers have provided a list of useful tools for reliability engineering. These include RelCalc software, Military Handbook 217 Mil-HDBK-217, and the NAVMAT P-4855-1A manual. Analyzing failures and successes coupled with a quality standards process also provides systemized information to making informed engineering designs. 34  See also  edit  Engineering portal Dependability Factor of safety Failing badly Failure mode and effects analysis FMEA Fracture Mechanics Highly accelerated life test Highly accelerated stress test Human reliability Industrial engineering Institute of Industrial Engineers Logistic engineering Performance engineering Product qualification RAMS Reliability, availability and serviceability Reliability theory of aging and longevity Risk-based inspection Security engineering Software reliability testing Solid mechanics Spurious trip level Strength of materials Structural fracture mechanics Temperature cycling References  edit   Institute of Electrical and Electronics Engineers 1990 IEEE Standard Computer Dictionary A Compilation of IEEE Standard Computer Glossaries. New York, NY .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation . cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-po sitionright .1em center.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno -repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-o utput .cs1-registration,.mw-parser-output .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em ISBN   1-55937-079-3  RCM II, Reliability Centered Maintenance, Second edition 2008, page 250-260, the role of Actuarial analysis in Reliability  Why You Cannot Predict Electronic Product Reliability PDF . 2012 ARS, Europe. Warsaw, Poland.  a b OConnor, Patrick D. T. 2002, Practical Reliability Engineering Fourth Ed., John Wiley  Sons, New York. ISBN   978-0-4708-4462-5 .  a b Barnard, R.W.A. 2008. What is wrong with Reliability Engineering PDF . Lambda Consulting . Retrieved 30 October 2014 .  Saleh, J.H. and Marais, Ken, Highlights from the Early and pre- History of Reliability Engineering, Reliability Engineering and System Safety, Volume 91, Issue 2, February 2006, Pages 249256  Juran, Joseph and Gryna, Frank, Quality Control Handbook, Fourth Edition, McGraw-Hill, New York, 1988, p.24.3  Reliability of military electronic equipmentreport . Washington United States Department of Defense . 4 June 1957. hdl  2027mdp.39015013918332 .  Wong, Kam, Unified Field Failure Theory-Demise of the Bathtub Curve, Proceedings of Annual RAMS, 1981, pp402-408  Practical Reliability Engineering, P. OConner  2012  Articles  Where Do Reliability Engineers Come From  ReliabilityWeb.com A Culture of Reliability .  Using Failure Modes, Mechanisms, and Effects Analysis in Medical Device Adverse Event Investigations, S. Cheng, D. Das, and M. Pecht, ICBO International Conference on Biomedical Ontology, Buffalo, NY, July 2630, 2011, pp. 340345  Federal Aviation Administration 19 March 2013. System Safety Handbook PDF . U.S. Department of Transportation . Retrieved 2 June 2013 .  Kokcharov I. Structural Safety. Structural Integrity Analysis PDF .  Reliability Hotwire  July 2015  Reliability Maintainability and Risk Practical Methods for Engineers Including Reliability Centred Maintenance and Safety  David J. Smith 2011  a b Practical Reliability Engineering, OConner, 2001  System Reliability Theory, second edition, Rausand and Hoyland  2004  The Blame Machine, Why Human Error Causes Accidents  Whittingham, 2007  httpwww.dfrsolutions.comhubfsDfR_Solutions_WebsiteResources-ArchivedPresentations2016Design-for-Reliability-Best-Practices.pdft1505335343846  Salvatore Distefano, Antonio Puliafito Dependability Evaluation with Dynamic Reliability Block Diagrams and Dynamic Fault Trees. IEEE Trans. Dependable Sec. Comput. 61 417 2009  The Seven Samurais of Systems Engineering , James Martin 2008  Ben-Gal I., Herer Y. and Raz T. 2003. Self-correcting inspection procedure under inspection errors PDF . IIE Transactions on Quality and Reliability, 346, pp. 529540. Cite journal requires journal  help   Yelo Reliability Testing . Retrieved 6 November 2014 .  Piryonesi, Sayed Madeh Tavakolan, Mehdi 9 January 2017. A mathematical programming model for solving cost-safety optimization CSO problems in the maintenance of structures. KSCE Journal of Civil Engineering . 21 6 22262234. doi  10.1007s12205-017-0531-z .  Okasha, N. M.,  Frangopol, D. M. 2009. Lifetime-oriented multi-objective optimization of structural maintenance considering system reliability, redundancy and life-cycle cost using GA. Structural Safety, 316, 460-474 .  a b Reliability and Safety Engineering  Verma, Ajit Kumar, Ajit, Srividya, Karanki, Durga Rao 2010  INCOSE SE Guidelines  a b 8.1.1.1. Quality versus reliability .  The Second Law of Thermodynamics, Evolution, and Probability .  American Society for Quality Reliability Division ASQ-RD  American Society for Quality ASQ  Society of Reliability Engineers SRE  Top Tools for a Reliability Engineers Toolbox 7 Reliability Engineering Experts Reveal Their Favorite Tools, Tips and Resources . Asset Tag  UID Label Blog . Retrieved 18 January 2016 . N. Diaz, R. Pascual, F. Ruggeri, E. Lpez Droguett 2017. Modeling age replacement policy under multiple time scales and stochastic usage profiles. International Journal of Production Economics . 188  2228. doi  10.1016j.ijpe.2017.03.009 . CS1 maint multiple names authors list  link  Further reading  edit  Barlow, R. E. and Proscan, F. 1981 Statistical Theory of Reliability and Life Testing, To Begin With Press, Silver Springs, MD. Blanchard, Benjamin S. 1992, Logistics Engineering and Management Fourth Ed., Prentice-Hall, Inc., Englewood Cliffs, New Jersey. Breitler, Alan L. and Sloan, C. 2005, Proceedings of the American Institute of Aeronautics and Astronautics AIAA Air Force T E Days Conference, Nashville, TN, December, 2005 System Reliability Prediction towards a General Approach Using a Neural Network. Ebeling, Charles E., 1997, An Introduction to Reliability and Maintainability Engineering , McGraw-Hill Companies, Inc., Boston. Denney, Richard 2005 Succeeding with Use Cases Working Smart to Deliver Quality. Addison-Wesley Professional Publishing. ISBN. Discusses the use of software reliability engineering in use case driven software development. Gano, Dean L. 2007, Apollo Root Cause Analysis Third Edition, Apollonian Publications, LLC., Richland, Washington Holmes, Oliver Wendell , Sr. The Deacons Masterpiece Kapur, K.C., and Lamberson, L.R., 1977, Reliability in Engineering Design , John Wiley  Sons, New York. Kececioglu, Dimitri, 1991 Reliability Engineering Handbook, Prentice-Hall, Englewood Cliffs, New Jersey Trevor Kletz 1998 Process Plants A Handbook for Inherently Safer Design CRC ISBN   1-56032-619-0 Leemis, Lawrence, 1995 Reliability Probabilistic Models and Statistical Methods , 1995, Prentice-Hall. ISBN   0-13-720517-1 Frank Lees 2005. Loss Prevention in the Process Industries 3rdEdition ed.. Elsevier. ISBN   978-0-7506-7555-0 . MacDiarmid, Preston Morris, Seymour et al., 1995, Reliability Toolkit Commercial Practices Edition , Reliability Analysis Center and Rome Laboratory, Rome, New York. Modarres, Mohammad Kaminskiy, Mark Krivtsov, Vasiliy 1999, Reliability Engineering and Risk Analysis A Practical Guide, CRC Press, ISBN   0-8247-2000-8 . Musa, John 2005 Software Reliability Engineering More Reliable Software Faster and Cheaper, 2nd. Edition, AuthorHouse. ISBN Neubeck, Ken 2004 Practical Reliability Analysis, Prentice Hall, New Jersey Neufelder, Ann Marie, 1993, Ensuring Software Reliability , Marcel Dekker, Inc., New York. OConnor, Patrick D. T. 2002, Practical Reliability Engineering Fourth Ed., John Wiley  Sons, New York. ISBN   978-0-4708-4462-5 . Samaniego, Francisco J. 2007 System Signatures and their Applications in Engineering Reliability, Spinger International Series in Operations Research and Management Science, New York. Shooman, Martin, 1987, Software Engineering Design, Reliability, and Management , McGraw-Hill, New York. Tobias, Trindade, 1995, Applied Reliability , Chapman  HallCRC, ISBN   0-442-00469-9 Springer Series in Reliability Engineering Nelson, Wayne B., 2004, Accelerated TestingStatistical Models, Test Plans, and Data Analysis , John Wiley  Sons, New York, ISBN   0-471-69736-2 Bagdonavicius, V., Nikulin, M., 2002, Accelerated Life Models. Modeling and Statistical analysis, CHAPMAN HALLCRC, Boca Raton, ISBN   1-58488-186-0 Todinov, M. 2016, Reliability and Risk Models setting reliability requirements, Wiley, 978-1-118-87332-8. US standards, specifications, and handbooks  edit  Aerospace Report Number TOR-20078583-6889 Reliability Program Requirements for Space Systems , The Aerospace Corporation 10 Jul 2007 DoD 3235.1-H 3rd Ed Test and Evaluation of System Reliability, Availability, and Maintainability A Primer , U.S. Department of Defense March 1982. NASA GSFC 431-REF-000370 Flight Assurance Procedure Performing a Failure Mode and Effects Analysis , National Aeronautics and Space Administration Goddard Space Flight Center 10 Aug 1996. IEEE 13321998 IEEE Standard Reliability Program for the Development and Production of Electronic Systems and Equipment , Institute of Electrical and Electronics Engineers 1998. JPL D-5703 Reliability Analysis Handbook , National Aeronautics and Space Administration Jet Propulsion Laboratory July 1990. MIL-STD-785B Reliability Program for Systems and Equipment Development and Production , U.S. Department of Defense 15 Sep 1980. Obsolete, superseded by ANSIGEIA-STD-0009-2008 titled Reliability Program Standard for Systems Design, Development, and Manufacturing , 13 Nov 2008 MIL-HDBK-217F Reliability Prediction of Electronic Equipment , U.S. Department of Defense 2 Dec 1991. MIL-HDBK-217F Notice 1 Reliability Prediction of Electronic Equipment , U.S. Department of Defense 10 Jul 1992. MIL-HDBK-217F Notice 2 Reliability Prediction of Electronic Equipment , U.S. Department of Defense 28 Feb 1995. MIL-STD-690D Failure Rate Sampling Plans and Procedures , U.S. Department of Defense 10 Jun 2005. MIL-HDBK-338B Electronic Reliability Design Handbook , U.S. Department of Defense 1 Oct 1998. MIL-HDBK-2173 Reliability-Centered Maintenance RCM Requirements for Naval Aircraft, Weapon Systems, and Support Equipment , U.S. Department of Defense 30 JAN 1998 superseded by NAVAIR 00-25-403 . MIL-STD-1543B Reliability Program Requirements for Space and Launch Vehicles , U.S. Department of Defense 25 Oct 1988. MIL-STD-1629A Procedures for Performing a Failure Mode Effects and Criticality Analysis , U.S. Department of Defense 24 Nov 1980. MIL-HDBK-781A Reliability Test Methods, Plans, and Environments for Engineering Development, Qualification, and Production , U.S. Department of Defense 1 Apr 1996. NSWC-06 Part A  B Handbook of Reliability Prediction Procedures for Mechanical Equipment , Naval Surface Warfare Center 10 Jan 2006. SR-332 Reliability Prediction Procedure for Electronic Equipment , Telcordia Technologies January 2011. FD-ARPP-01 Automated Reliability Prediction Procedure , Telcordia Technologies January 2011. GR-357 Generic Requirements for Assuring the Reliability of Components Used in Telecommunications Equipment , Telcordia Technologies March 2001. httpstandards.sae.orgja10001_199903 SAE JA10001 Reliability Program Standard Implementation Guide UK standards  edit  In the UK, there are more up to date standards maintained under the sponsorship of UK MOD as Defence Standards. The relevant Standards include DEF STAN 00-40 Reliability and Maintainability R M PART 1 Issue 5 Management Responsibilities and Requirements for Programmes and Plans PART 4 ARMP-4Issue 2 Guidance for Writing NATO R M Requirements Documents PART 6 Issue 1 IN-SERVICE R  M PART 7 ARMP-7 Issue 1 NATO R M Terminology Applicable to ARMPs DEF STAN 00-42 RELIABILITY AND MAINTAINABILITY ASSURANCE GUIDES PART 1 Issue 1 ONE-SHOT DEVICESSYSTEMS PART 2 Issue 1 SOFTWARE PART 3 Issue 2 R M CASE PART 4 Issue 1 Testability PART 5 Issue 1 IN-SERVICE RELIABILITY DEMONSTRATIONS DEF STAN 00-43 RELIABILITY AND MAINTAINABILITY ASSURANCE ACTIVITY PART 2 Issue 1 IN-SERVICE MAINTAINABILITY DEMONSTRATIONS DEF STAN 00-44 RELIABILITY AND MAINTAINABILITY DATA COLLECTION AND CLASSIFICATION PART 1 Issue 2 MAINTENANCE DATA  DEFECT REPORTING IN THE ROYAL NAVY, THE ARMY AND THE ROYAL AIR FORCE PART 2 Issue 1 DATA CLASSIFICATION AND INCIDENT SENTENCINGGENERAL PART 3 Issue 1 INCIDENT SENTENCINGSEA PART 4 Issue 1 INCIDENT SENTENCINGLAND DEF STAN 00-45 Issue 1 RELIABILITY CENTERED MAINTENANCE DEF STAN 00-49 Issue 1 RELIABILITY AND MAINTAINABILITY MOD GUIDE TO TERMINOLOGY DEFINITIONS These can be obtained from DSTAN . There are also many commercial standards, produced by many organisations including the SAE, MSG, ARP, and IEE. French standards  edit  FIDES 1 . The FIDES methodology UTE-C 80-811 is based on the physics of failures and supported by the analysis of test data, field returns and existing modelling. UTE-C 80810 or RDF2000 2 . The RDF2000 methodology is based on the French telecom experience. International standards  edit  TC 56 Standards Dependability External links  edit  Media related to Reliability engineering at Wikimedia Commons v t e Systems engineering Subfields Aerospace engineering Biological systems engineering Configuration management Earth systems engineering and management Electrical engineering Enterprise systems engineering Performance engineering Reliability engineering Safety engineering Processes Requirements engineering Functional specification System integration Verification and validation Design review Concepts Business process System System lifecycle V-Model Systems development life cycle Tools Decision-making Function modelling IDEF Optimization Quality function deployment System dynamics Systems Modeling Language Systems analysis Systems modeling Work breakdown structure People James S. Albus Ruzena Bajcsy Benjamin S. Blanchard Wernher von Braun Kathleen Carley Harold Chestnut Wolt Fabrycky Barbara Grosz Arthur David Hall III Derek Hitchins Robert E. Machol Radhika Nagpal Simon Ramo Joseph Francis Shea Katia Sycara Manuela M. Veloso John N. Warfield Related fields Control engineering Computer engineering Industrial engineering Operations research Project management Quality management Risk management Software engineering Category v t e Software engineering Fields Computer programming Requirements engineering Software deployment Software design Software maintenance Software testing Systems analysis Formal methods Concepts Data modeling Enterprise architecture Functional specification Modeling language Orthogonality Programming paradigm Software Software archaeology Software architecture Software configuration management Software development methodology Software development process Software quality Software quality assurance Software verification and validation Structured analysis Orientations Agile Aspect-oriented Object orientation Ontology Service orientation SDLC Models Developmental Agile EUP Executable UML Incremental model Iterative model Prototype model RAD UP Scrum Spiral model V-Model Waterfall model XP Other SPICE CMMI Data model ER model Function model Information model Metamodeling Object model Systems model View model Languages IDEF UML USL SysML Software engineers Victor Basili Kent Beck Grady Booch Fred Brooks Barry Boehm Peter Chen Danese Cooper Ward Cunningham Tom DeMarco Edsger W. Dijkstra Delores M. Etter Martin Fowler Adele Goldstine Margaret Hamilton C. A. R. Hoare Lois Haibt Mary Jean Harrold Grace Hopper Watts Humphrey Michael A. Jackson Ivar Jacobson Alan Kay Nancy Leveson Stephen J. Mellor Bertrand Meyer David Parnas Trygve Reenskaug Winston W. Royce James Rumbaugh Mary Shaw Peri Tarr Elaine Weyuker Niklaus Wirth Edward Yourdon Related fields Computer science Computer engineering Project management Risk management Systems engineering Category Commons v t e Engineering Civil Architectural Construction Environmental Earthquake Geotechnical Hydraulic Mining Structural Transportation Mechanical Acoustical Aerospace Automotive Marine Railway Thermal Electrical Computer Control Electromechanics Electronics Microwaves Power Radio Frequency Telecommunications Chemical Biochemical Biological Molecular Petroleum Process Reaction Interdisciplinary Audio Biomedical Engineering mathematics Engineering mechanics Engineering physics Engineering science Fire Industrial Information Materials science Ceramics Metallurgy Polymer Mechatronics Military Nanotechnology Nuclear Optical Photonics Privacy Robotics Sanitary Security Software Systems Glossaries Engineering Aerospace engineering Civil engineering Electrical and electronics engineering Mechanical engineering Structural engineering List of engineering branches CategoryEngineering Engineering portal v t e Systems science Systems types Anatomical Art Biological Complex Complex adaptive Conceptual Coupled humanenvironment Database Dynamical Ecological Economic Energy Formal Holarchic Information Legal Measurement Metric Multi-agent Nervous Nonlinear Operating Physical Planetary Political Sensory Social Star Writing Concepts Doubling time Leverage points Limiting factor Negative feedback Positive feedback Theoretical fields Chaos theory Complex systems Control theory Cybernetics Earth system science Living systems Sociotechnical system Systemics Urban metabolism World-systems theory Analysis Biology Dynamics Ecology Engineering Neuroscience Pharmacology Psychology Theory Thinking Systems scientists Alexander Bogdanov Russell L. Ackoff William Ross Ashby Ruzena Bajcsy Bla H. Bnthy Gregory Bateson Anthony Stafford Beer Richard E. Bellman Ludwig von Bertalanffy Margaret Boden Kenneth E. Boulding Murray Bowen Kathleen Carley Mary Cartwright C. West Churchman Manfred Clynes George Dantzig Edsger W. Dijkstra Fred Emery Heinz von Foerster Stephanie Forrest Jay Wright Forrester Barbara Grosz Charles A.  S. Hall Lydia Kavraki James J. Kay Faina M. Kirillova George Klir Allenna Leonard Edward Norton Lorenz Niklas Luhmann Humberto Maturana Margaret Mead Donella Meadows Mihajlo D. Mesarovic James Grier Miller Radhika Nagpal Howard T. Odum Talcott Parsons Ilya Prigogine Qian Xuesen Anatol Rapoport Peter Senge Claude Shannon Katia Sycara Eric Trist Francisco Varela Manuela M. Veloso Kevin Warwick Norbert Wiener Jennifer Wilby Anthony Wilden Applications Systems theory in anthropology Systems theory in archaeology Systems theory in political science Organizations List Principia Cybernetica Category Portal Commons v t e Design Outline Portal Designer Disciplines Communication design Advertising Book design Corporate design Exhibit design Film title design Graphic design Motion Postage stamp design Print design Illustration Information design Instructional design News design Photography Retail design Signage   Traffic sign design Typography   Type design Video design Visual merchandising Environmental design Architecture Architectural lighting design Building design Passive solar Ecological design Environmental impact design Garden design Computer-aided Healthy community design Hotel design Interior architecture Interior design EID Keyline design Landscape architecture Sustainable Landscape design Spatial design Urban design Industrial design Automotive design Automotive suspension design CMF design Corrugated box design Electric guitar design Furniture design Sustainable Hardware interface design Motorcycle design Packaging and labeling Photographic lens design Product design Production design Sensory design Service design Interaction design Experience design EED Game design Level design Video game design Hardware interface design Icon design Immersive design Information design Sonic interaction design User experience design User interface design Web design Other applied arts Public art design Ceramic   glass design Fashion design Costume design Jewelry design Floral design Game art design Property design Scenic design Sound design Stageset lighting design Textile design Other design  engineering Algorithm design Behavioural design Boiler design Database design Drug design Electrical system design Experimental design Filter design Geometric design Job design Integrated circuit design Circuit design Physical design Power network design Mechanism design Nuclear weapon design Nucleic acid design Organization design Process design Processor design Protein design Research design Social design Software design Spacecraft design Strategic design Systems design Approaches Activity-centered Adaptive web Affective Brainstorming By committee By contract C-K theory Closure Co-design Concept-oriented Configuration Contextual Continuous Cradle-to-cradle Creative problem-solving Creativity techniques Critical Design fiction Defensive Designbidbuild Designbuild architect-led Domain-driven Ecodesign Energy neutral Engineering design process Probabilistic design Error-tolerant Fault-tolerant Framework-oriented For assembly For behaviour change For manufacturability For Six Sigma For testing For X Functional Generative Geodesign HCD High-level Inclusive Integrated Integrated topside Intelligence-based Iterative KISS principle Low-level Metadesign Mind mapping Modular New Wave Object-oriented Open Parametric Participatory Platform-based Policy-based Process-centered Public interest Rational Regenerative Reliability engineering Research-based Responsibility-driven RWD Safe-life Sustainable Systemic SOD Tableless web Theory of constraints Top-down and bottom-up Transformation Transgenerational TRIZ Universal Design for All Usage-centered Use-centered User-centered Empathic User innovation Value-driven Value sensitive Privacy by Design choice computing controls flow leadership management marker methods pattern research science sprint strategy theory thinking Tools Intellectual property Organizations Awards Tools AAD Architectural model Blueprint Comprehensive layout CAD CAID Virtual home design software CAutoD Design quality indicator Electronic design automation Flowchart Mockup Product design specification Prototype Sketch Storyboard Technical drawing Web design program Website wireframe Intellectual property Community design Design around Design patent Fashion design copyright Geschmacksmuster Industrial design rights European Union Organizations AIGA Chartered Society of Designers Design and Industries Association Design Council International Forum Design The Design Society Design Research Society Awards European Design Award German Design Award Good Design Award Chicago Good Design Award Japan Graphex IF product design award James Dyson Award Prince Philip Designers Prize Related topics Aesthetics Agile Concept art Conceptual design Creative industries Cultural icon .design Enterprise architecture Futures studies Indie design Innovation Management Intelligent design Lean Startup New product development OODA Loop Philosophy of design Process simulation Slow design STEAM fields Unintelligent design Visualization Wicked problem Design brief change classic competition architectural student director education elements and principles engineer firm history knowledge language life load museum paradigm rationale review specification studio technology Commons Wikibooks Wikinews Wikiquote Wikisource Wiktionary v t e Statistics Outline Index Descriptive statistics Continuous data Center Mean arithmetic geometric harmonic Median Mode Dispersion Variance Standard deviation Coefficient of variation Percentile Range Interquartile range Shape Central limit theorem Moments Skewness Kurtosis L-moments Count data Index of dispersion Summary tables Grouped data Frequency distribution Contingency table Dependence Pearson product-moment correlation Rank correlation Spearmans rho Kendalls tau Partial correlation Scatter plot Graphics Bar chart Biplot Box plot Control chart Correlogram Fan chart Forest plot Histogram Pie chart QQ plot Run chart Scatter plot Stem-and-leaf display Radar chart Data collection Study design Population Statistic Effect size Statistical power Optimal design Sample size determination Replication Missing data Survey methodology Sampling stratified cluster Standard error Opinion poll Questionnaire Controlled experiments Scientific control Randomized experiment Randomized controlled trial Random assignment Blocking Interaction Factorial experiment Adaptive Designs Adaptive clinical trial Up-and-Down Designs Stochastic approximation Observational Studies Cross-sectional study Cohort study Natural experiment Quasi-experiment Statistical inference Statistical theory Population Statistic Probability distribution Sampling distribution Order statistic Empirical distribution Density estimation Statistical model Model specification L p space Parameter location scale shape Parametric family Likelihood   monotone Locationscale family Exponential family Completeness Sufficiency Statistical functional Bootstrap U V Optimal decision loss function Efficiency Statistical distance divergence Asymptotics Robustness Frequentist inference Point estimation Estimating equations Maximum likelihood Method of moments M-estimator Minimum distance Unbiased estimators Mean-unbiased minimum-variance RaoBlackwellization LehmannScheff theorem Median unbiased Plug-in Interval estimation Confidence interval Pivot Likelihood interval Prediction interval Tolerance interval Resampling Bootstrap Jackknife Testing hypotheses 1-  2-tails Power Uniformly most powerful test Permutation test Randomization test Multiple comparisons Parametric tests Likelihood-ratio ScoreLagrange multiplier Wald Specific tests Z -test normal Students t -test F -test Goodness of fit Chi-squared G -test KolmogorovSmirnov AndersonDarling Lilliefors JarqueBera Normality ShapiroWilk Likelihood-ratio test Model selection Cross validation AIC BIC Rank statistics Sign Sample median Signed rank Wilcoxon HodgesLehmann estimator Rank sum MannWhitney Nonparametric anova 1-way KruskalWallis 2-way Friedman Ordered alternative JonckheereTerpstra Bayesian inference Bayesian probability prior posterior Credible interval Bayes factor Bayesian estimator Maximum posterior estimator Correlation Regression analysis Correlation Pearson product-moment Partial correlation Confounding variable Coefficient of determination Regression analysis Errors and residuals Regression validation Mixed effects models Simultaneous equations models Multivariate adaptive regression splines MARS Linear regression Simple linear regression Ordinary least squares General linear model Bayesian regression Non-standard predictors Nonlinear regression Nonparametric Semiparametric Isotonic Robust Heteroscedasticity Homoscedasticity Generalized linear model Exponential families Logistic Bernoulli   Binomial   Poisson regressions Partition of variance Analysis of variance ANOVA, anova Analysis of covariance Multivariate ANOVA Degrees of freedom Categorical   Multivariate   Time-series   Survival analysis Categorical Cohens kappa Contingency table Graphical model Log-linear model McNemars test Multivariate Regression Manova Principal components Canonical correlation Discriminant analysis Cluster analysis Classification Structural equation model Factor analysis Multivariate distributions Elliptical distributions Normal Time-series General Decomposition Trend Stationarity Seasonal adjustment Exponential smoothing Cointegration Structural break Granger causality Specific tests DickeyFuller Johansen Q-statistic LjungBox DurbinWatson BreuschGodfrey Time domain Autocorrelation ACF partial PACF Cross-correlation XCF ARMA model ARIMA model BoxJenkins Autoregressive conditional heteroskedasticity ARCH Vector autoregression VAR Frequency domain Spectral density estimation Fourier analysis Wavelet Whittle likelihood Survival Survival function KaplanMeier estimator product limit Proportional hazards models Accelerated failure time AFT model First hitting time Hazard function NelsonAalen estimator Test Log-rank test Applications Biostatistics Bioinformatics Clinical trials   studies Epidemiology Medical statistics Engineering statistics Chemometrics Methods engineering Probabilistic design Process   quality control Reliability System identification Social statistics Actuarial science Census Crime statistics Demography Econometrics Jurimetrics National accounts Official statistics Population statistics Psychometrics Spatial statistics Cartography Environmental statistics Geographic information system Geostatistics Kriging Category Portal Commons WikiProject Retrieved from  httpsen.wikipedia.orgwindex.phptitleReliability_engineering oldid909455335  Categories  Reliability engineering Systems engineering Design for X Engineering failures Software quality Engineering statistics Survival analysis Materials science Reliability analysis Engineering disciplines Hidden categories CS1 errors missing periodical Use dmy dates from September 2010 All articles with unsourced statements Articles with unsourced statements from September 2016 Articles with unsourced statements from October 2011 CS1 maint multiple names authors list Commons category link from Wikidata