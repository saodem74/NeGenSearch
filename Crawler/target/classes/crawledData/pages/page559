Software requirements specification From Wikipedia, the free encyclopedia Jump to navigation Jump to search IEEE software life cycle SQA  Software quality assurance IEEE 730 SCM  Software configuration management IEEE 828 STD  Software test documentation IEEE 829 SRS  Software requirements specification IEEE 830 V V  Software verification and validation IEEE 1012 SDD  Software design description IEEE 1016 SPM  Software project management IEEE 1058 SUD  Software user documentation IEEE 1063 v t e A software requirements specification  SRS  is a description of a software system to be developed . It is modeled after business requirements specification  CONOPS  , also known as a stakeholder requirements specification StRS .  citation needed  The software requirements specification lays out functional and non-functional requirements , and it may include a set of use cases that describe user interactions that the software must provide to the user for perfect interaction. Software requirements specification establishes the basis for an agreement between customers and contractors or suppliers on how the software product should function in a market-driven project, these roles may be played by the marketing and development divisions. Software requirements specification is a rigorous assessment of requirements before the more specific system desig n stages, and its goal is to reduce later redesign. It should also provide a realistic basis for estimating product costs, risks, and schedules. 1  Used appropriately, software requirements specifications can help prevent software project failure. 2  The software requirements specification document lists sufficient and necessary requirements for the project development. 3  To derive the requirements, the developer needs to have clear and thorough understanding of the products under development. This is achieved through detailed and continuous communications with the project team and customer throughout the software development process. The SRS may be one of a contracts deliverable data item descriptions 4  or have other forms of organizationally-mandated content. Contents 1 Structure 2 Goals 3 Requirements smell 4 See also 5 References 6 External links Structure  edit  An example organization of an SRS is as follows 5  Purpose Definitions Background System overview References Overall description Product perspective System Interfaces User interfaces Hardware interfaces Software interfaces Communication Interfaces Memory Constraints Design constraints Operations Site Adaptation Requirements Product functions User characteristics Constraints, assumptions and dependencies Specific requirements External interface requirements Functional requirements Performance requirements Logical database requirement Software System Attributes Reliability Availability Security Maintainability Portability. Functional requirements functional partitioning functional description control description Environment characteristics Hardware peripherals people others.. Goals  edit  The Software Requirements Specification SRS is a communication tool between users and software designers. The specific goals of the SRS are as follows Facilitating reviews Describing the scope of work Providing a reference to software designers i.e. navigation aids, document structure Providing a framework for testing primary and secondary use cases Including features to customer requirements Providing a platform for ongoing refinement via incomplete specs or questions Requirements smell  edit  Following the idea of code smells , the notion of requirements smell has been proposed to describe issues in requirements specification where the requirement is not necessarily wrong but could be problematic. 6  Examples of requirements smells are Subjective Language , Ambiguous Adverbs and Adjectives , Superlatives and Negative Statements . 6  See also  edit  System requirements specification Concept of operations Requirements engineering Software Engineering Body of Knowledge SWEBOK Design specification Specification technical standard Formal specification Abstract type References  edit   Bourque, P. Fairley, R.E. 2014. Guide to the Software Engineering Body of Knowledge SWEBOK . IEEE Computer Society . Retrieved 17 July 2014 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-positionright .1em ce nter.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-outpu t .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em  Software requirements specification helps to protect IT projects from failure . Retrieved 19 December 2016 .  Pressman, Roger 2010. Software Engineering A Practitioners Approach . Boston McGraw Hill. p.  123. ISBN   9780073375977 .  DI-IPSC-81433A, DATA ITEM DESCRIPTION SOFTWARE REQUIREMENTS SPECIFICATION SRS . everyspec.com. 1999-12-15 . Retrieved 2013-04-04 .  Stellman, Andrew  Greene, Jennifer 2005. Applied software project management . OReilly Media, Inc. p.  308. ISBN   978-0596009489 .  a b Femmer, Henning Mndez Fernndez, Daniel Wagner, Stefan Eder, Sebastian 2017. Rapid quality assurance with Requirements Smells. Journal of Systems and Software . 123  190213. arXiv  1611.08847 . doi  10.1016j.jss.2016.02.047 . External links  edit  830-1984  IEEE Guide to Software Requirements Specifications . 1984. doi  10.1109IEEESTD.1984.119205 . ISBN   978-0-7381-4418-4 . 830-1993  IEEE Recommended Practice for Software Requirements Specifications . 1994. doi  10.1109IEEESTD.1994.121431 . ISBN   978-0-7381-4723-9 . 830-1998  IEEE Recommended Practice for Software Requirements Specifications . 1998. doi  10.1109IEEESTD.1998.88286 . ISBN   978-0-7381-0332-7 . 29148-2011 - Systems and software engineering  Life cycle processes  Requirements engineering . ISOIECIEEE 291482011E . 2011. pp.  194. doi  10.1109IEEESTD.2011.6146379 . ISBN   978-0-7381-6591-2 . This standard replaces IEEE 830-1998, IEEE 1233-1998, IEEE 1362-1998 - httpstandards.ieee.orgfindstdsstandard29148-2011.html  Leffingwell, Dean Widrig, Don 2003. Managing Software Requirements A Use Case Approach 2nd ed.. Addison-Wesley. ISBN   978-0321122476 . Gottesdiener, Ellen 2009. The Software Requirements Memory Jogger A Desktop Guide to Help Business and Technical Teams Develop and Manage Requirements . Addison-Wesley. ISBN   978-1576811146 . Wiegers, Karl Beatty, Joy 2013. Software Requirements, Third Edition . Microsoft Press. ISBN   9780735679665 . IEEE SRS Template - rick4470IEEE-SRS-Tempate . Retrieved 27 Dec 2017 . Cite uses deprecated parameter dead-url  help  v t e Software engineering Fields Computer programming Requirements engineering Software deployment Software design Software maintenance Software testing Systems analysis Formal methods Concepts Data modeling Enterprise architecture Functional specification Modeling language Orthogonality Programming paradigm Software Software archaeology Software architecture Software configuration management Software development methodology Software development process Software quality Software quality assurance Software verification and validation Structured analysis Orientations Agile Aspect-oriented Object orientation Ontology Service orientation SDLC Models Developmental Agile EUP Executable UML Incremental model Iterative model Prototype model RAD UP Scrum Spiral model V-Model Waterfall model XP Other SPICE CMMI Data model ER model Function model Information model Metamodeling Object model Systems model View model Languages IDEF UML USL SysML Software engineers Victor Basili Kent Beck Grady Booch Fred Brooks Barry Boehm Peter Chen Danese Cooper Ward Cunningham Tom DeMarco Edsger W. Dijkstra Delores M. Etter Martin Fowler Adele Goldstine Margaret Hamilton C. A. R. Hoare Lois Haibt Mary Jean Harrold Grace Hopper Watts Humphrey Michael A. Jackson Ivar Jacobson Alan Kay Nancy Leveson Stephen J. Mellor Bertrand Meyer David Parnas Trygve Reenskaug Winston W. Royce James Rumbaugh Mary Shaw Peri Tarr Elaine Weyuker Niklaus Wirth Edward Yourdon Related fields Computer science Computer engineering Project management Risk management Systems engineering Category Commons v t e IEEE standards Current 488 730 754 Revision 854 828 829 896 1003 1014 1016 1076 1149.1 1154 1164 1275 1278 1284 1355 1394 1451 1497 1516 1541 1547 1584 1588 1596 1603 1613 1666 1667 1675 1685 1722 1733 1800 1801 1815 1850 1900 1901 1902 1904 1905 2030 2050 11073 12207 14764 16085 16326 29148 42010 802 series 802.1 D p Q Qat Qay w X ab ad AE ag ah ak aq AS ax az BA 802.3 -1983 a b d e i j u x y z ab ac ad ae af ah ak an aq at av az ba bt by 802.11 legacy mode a b c d e f g h i j k n p r s u v w y ac ad af ah ai ax ay .2 .4 .5 .6 .7 .8 .9 .10 .12 .14 .15 .1 .4 .4a .6 .16 Original  d  e .17 .18 .20 .21 .22 Proposed P1363 P1619 P1699 P1823 P1906.1 Superseded 754-1985 830 1219 1233 1362 1364 1471 See also IEEE Standards Association CategoryIEEE standards 1   Taaffe, Ed. Mr . thebridger . Retrieved 2019-02-02 . Retrieved from  httpsen.wikipedia.orgwindex.phptitleSoftware_requirements_specification oldid912533369  Categories  Software requirements Software documentation IEEE standards Hidden categories All articles with unsourced statements Articles with unsourced statements from May 2018 CS1 errors deprecated parameters