TalkSoftware engineering From Wikipedia, the free encyclopedia Jump to navigation Jump to search Software engineering has been listed as a level-4 vital article in Technology. If you can improve it, please do . This article has been rated as C-Class .                     This article is of interest to the following WikiProjects  WikiProject Computing Rated C-class, High-importance Computing WikipediaWikiProject Computing TemplateWikiProject Computing Computing articles v t e This article is within the scope of WikiProject Computing , a collaborative effort to improve the coverage of computers , computing , and information technology on Wikipedia. If you would like to participate, please visit the project page, where you can join the discussion and see a list of open tasks.   C   This article has been rated as C-Class on the projects quality scale .   High   This article has been rated as High-importance on the projects importance scale .   WikiProject Computer science Rated C-class, Top-importance Computer science WikipediaWikiProject Computer science TemplateWikiProject Computer science Computer science articles Computer science portal v t e This article is within the scope of WikiProject Computer science , a collaborative effort to improve the coverage of Computer science related articles on Wikipedia. If you would like to participate, please visit the project page, where you can join the discussion and see a list of open tasks.   C   This article has been rated as C-Class on the projects quality scale .   Top   This article has been rated as Top-importance on the projects importance scale .   Things you can help WikiProject Computer science with Here are some tasks awaiting attention  Article requests  Requested articlesApplied arts and sciencesComputer science, computing, and Internet Cleanup  Computer science articles needing attention Computer science articles needing expert attention Copyedit  Computing Expand  Computer science Infobox  Computer science articles without infoboxes Maintain  PortalComputer science Photo  Find pictures for the biographies of computer scientists see List of computer scientists  Computing articles needing images Stubs  Computer science stubs Unreferenced  WikiProject Computer scienceUnreferenced BLPs Project-related  Tag all relevant articles in CategoryComputer science and sub-categories with   WikiProject Computer science   WikiProject Electrical engineering Rated C-class, Mid-importance Electrical engineering WikipediaWikiProject Electrical engineering TemplateWikiProject Electrical engineering electrical engineering articles Engineering portal v t e This article is within the scope of WikiProject Electrical engineering , a collaborative effort to improve the coverage of Electrical engineering on Wikipedia. If you would like to participate, please visit the project page, where you can join the discussion and see a list of open tasks.   C   This article has been rated as C-Class on the projects quality scale .   Mid   This article has been rated as Mid-importance on the projects importance scale .   WikiProject Engineering Rated C-class, Top-importance Engineering WikipediaWikiProject Engineering TemplateWikiProject Engineering Engineering articles Engineering portal v t e This article is within the scope of WikiProject Engineering , a collaborative effort to improve the coverage of engineering on Wikipedia. If you would like to participate, please visit the project page, where you can join the discussion and see a list of open tasks.   C   This article has been rated as C-Class on the projects quality scale .   Top   This article has been rated as Top-importance on the projects importance scale .   WikiProject Technology Rated C-class Technology WikipediaWikiProject Technology TemplateWikiProject Technology Technology articles Technology portal v t e This article is within the scope of WikiProject Technology , a collaborative effort to improve the coverage of technology on Wikipedia. If you would like to participate, please visit the project page, where you can join the discussion and see a list of open tasks.   C   This article has been rated as C-Class on the projects quality scale . This article has not yet been checked against the criteria for B-Class status Referencing and citation not checked Coverage and accuracy not checked Structure not checked Grammar and style not checked Supporting materials not checked Accessibility not checked To fill out this checklist, please add the following code to the template call  b1 --Referencing  citations--   yesno   b2 --Coverage  accuracy        --   yesno   b3 --Structure                            --   yesno   b4 --Grammar  style                --   yesno   b5 --Supporting materials      --   yesno   b6 --Accessibility                    --   yesno  assessing the article against each criterion.   WikiProject Software  Computing   Rated C-class, Top-importance Software WikipediaWikiProject Software TemplateWikiProject Software software articles v t e This article is within the scope of WikiProject Software , a collaborative effort to improve the coverage of software on Wikipedia. If you would like to participate, please visit the project page, where you can join the discussion and see a list of open tasks.   C   This article has been rated as C-Class on the projects quality scale .   Top   This article has been rated as Top-importance on the projects importance scale . This article is supported by WikiProject Computing marked as High-importance .   WikiProject Systems Rated C-class, Top-importance Systems WikipediaWikiProject Systems TemplateWikiProject Systems Systems articles Systems science portal v t e This article is within the scope of WikiProject  Systems , which collaborates on articles related to systems and systems science .   C   This article has been rated as C-Class on the projects quality scale .   Top   This article has been rated as Top-importance on the projects importance scale . This article is within the field of Software engineering .   Archives Archive 1 Archive 2 Archive 3 Archive 4 Archive 5 Archive 6 This subject is featured in the Outline of software engineering , which is incomplete and needs further development. This article is or was the subject of a Wiki Education Foundation-supported course assignment. Further details are available on the course page . Assigned peer reviews Leptitcharmeur94 . Contents 1 Earlier Reference to term Software Engineering 2 Coined software Engineering 3 Proposed merge with In-house software 4 Citations of Software Engineering Body of Knowledge 5 Who coined the term 6 Certification and Licensure 7 Dubious claim in history 8 Copyright problem removed Earlier Reference to term Software Engineering  edit  An earlier reference to the term Software Engineering was recently inserted into the article. This would be quite some news. The initial link seems very complete and is a message from Bertrand Meyer himself on the usenet group comp.software-engineering in 1992. In Bertrands post, he references a Letter to the ACM Membership by Anthony Oettinger published in Vol.9, Issue  8 in Aug. of 1966. Having access to the ACM archives, I searched for this letter extensively. I could not find it. I also searched the Internet, but could not find it. Something of this importance needs a more formidable reference than a post in a usenet group archive. If the Letter is produced, I am ready to include it in the article. Lwoodyiii  talk  1628, 14 April 2013 UTC The book Science of Computing Shaping a Discipline gives that citation by Oettinger in 1966 its Communications of the ACM, 98, p.546 but those pages are missing from the digital library. However I was able to find it also in CACM 1010 page 605. Thats 1967 and by Oettinger again. So the term was definitely introduced by Oettinger before the 1968 conference, and it w as done in the flagship publication of the ACM. I made a screen shot for you httpi.imgur.comZJy15Ij.png see the bottom part 91.159.183.138  talk  1043, 29 August 2015 UTC Coined software Engineering  edit  There is someone who coined the word software, as someone coined the world electricity. But no one has the right to claim a new term only with an Engineer after it. The word creation, development, making, designing are sometimes synonymous with the word Engineering. -- 108.162.136.215  talk  0828, 20 May 2015 UTC Software engineers are programmers. Its as simple as that. I know because I am one. We have to have this article because the term is in wide use, but to describe programmers as engineers is akin to describing a hairdresser as a keratin engineer. 31.52.163.167  talk  2323, 23 February 2016 UTC Proposed merge with In-house software  edit  The following discussion is closed. Please do not modify it. Subsequent comments should be made in a new section. A summary of the conclusions reached follows. Closed as no consensus to merge . Discussion begun 6 months ago, petered out with no consensus after 3 months. TJRC  talk  2306, 16 December 2015 UTC Too minor for own article. Entirely lacks sources. Easily incorporated into target article. Another similar page, In-House Design , redirects to software engineering as well. Eve rgr een Fir talk Please   re   0015, 3 June 2015 UTC  EvergreenFir  Support In my opinion both In-House Design and In-house software are candidates for speedy deletion. They are both minor and easily incorporated to Software engineering . Gpeja  talk  2338, 18 August 2015 UTC Would suggest merging into Software development , which is broader and more appropriate. Since there is little to merge, its probably more a matter of where to redirect both those articles. -- Boson  talk  1113, 19 August 2015 UTC Oppose In-house software is a small article, but its a decent topic on the issues of build vs. buy vs. commission. Andy Dingley  talk  1153, 19 August 2015 UTC  Andy Dingley  In-house software is not a decent topic if you mean by decent requiring its own article. Topics such as SoftwareTypes of software including in-house, outsourced, off-the-shelf or Software business or Software development or Software Engineering are convenient places for this small piece of information. If you are able to expand this topic and support it with Reliable sources , it may become decent. Gpeja  talk  2217, 21 August 2015 UTC Thankyou for explaining the basics of Wikipedia to me. Are you equally experienced in the software industry Andy Dingley  talk  2246, 21 August 2015 UTC Thankyou Andy Dingley . It seems I have a problem in attitude. What would be a constructive thing to do in this case Please advise as an experienced Wikipedian. Ive just joined this year and have no idea what is the proper etiquette in case of disagreements. Gpeja  talk  1913, 24 August 2015 UTC There is a big difference in WP between the qualities of an article and the qualities of a topic. If an article is poorly written, its quite common for it to end up at AfD where the qualities of it as a topic are then judged. This generally gives the right result WP thus focusses on notable topics, as intended. One of the biggest questions in commercial software is the three-way decision between buying existing software, developing it in house, or having it developed externally. Million pound projects have to choose this on a regular basis, many do not choose wisely. Its a huge issue within IT management and within software engineering. All three of these, and their overview, are ex cellent in-depth articles for WP that would be valuable articles to have afterwards. There is also a vast literature out there describing the trade-offs. Theres probably even an MBA course to be had out there, just on how to choose someone who was thought to reliably choose well would be a valuable consultant within the industry. By all means, list these topics at AfD if you think theyre not notable as topics and unworthy of effort to develop them as articles. But I think I know what the outcome would be. Andy Dingley  talk  1140, 29 August 2015 UTC Thanks for giving more explanation. This is part of my learning process as a new WP editor. It would be great help if you at least put a rough outline and your definition of in-house software. The first sentence now reads In-house software is a software that is produced by a corporate entity for purpose of using it within the organization .  This doesnt match what you described above. Your description is more about commercial software development process and its tradeoffs. As I see it, there is lots of commercial software out there that is combination of all of the above so there is no reason to describe in-house software by itself. It is more important to describe the decisions you mentioned as an important p art of software development process. I am still curious and would like to understand your point of you and idea of this article. It would help me learn how to create a new articles and make sure they stay on WP. I know it is quite common for new articles to be deleted at first review. Is there an option to move this article in Draft of my or the original author space and work on it off line Gpeja  talk  0056, 1 September 2015 UTC Commercial software is misleading as a term, because software becomes commercial when its either bought or sold. This could be an accountant buying software in, or it could be a software house developing it in-house and then selling it. As our distinction here is mostly whether to develop in-house or buy the work of others, then commercialism isnt the crucial difference, means of creation is. Remember too that software can be sold as applications things that are usable by users or libraries things that developers use to build further software on top of. A software house might be writing an application for sale, thus needs to write it themselves so that they then own the rights to these sales theyre a developer, not a reseller. Yet they still have to choose whether to build the component libraries within it themselves, or buy them from others. Theres also the question of whether open source software is commercial or not. For most practical purposes here it is, even if theres no bill to be paid for it. It has the same technical implications to a consumer as commercial software it is produced by others, it is dependent on others, but it does not require an in-house development team. In-house software is software that is produced by a corporate entity is correct, but its not necessarily for use only within that organisation. Its produced to meet the software needs of the organisation either to use themselves or to sell on, but it is not limited to only being used internally. The case of the software application developer building or buying in a database library etc. is a simple counter-example. The distinction is about who builds it, not who uses it. If you want a draft space to work in, Id suggest just creating it under UserGpejadraftsIn-house software or similar. Its easy to move later, you can even do it yourself. Theres also the Draft namespace, which is useful for very new editors who dont yet have the rights to create pages in most namespaces. Andy Dingley  talk  0909, 1 September 2015 UTC Andy Dingley Could you please comment on the article Insourcing  It is a strange term Ive never heard. There is a connection to what you described above but for the business in general not only software. Gpeja  talk  0049, 3 September 2015 UTC Insourcing and the variants onshoring and backsourcing are recent formations that are a reaction to the fashion early 2000s for offshoring and outsourcing, and the general failure of those approaches. Although they can be but not necessarily a form of in-house development, their key feature is that theyre a movement away from some previous outsourcing effort. Insourcing usually means moving development in-house, onshoring to move it to a separate developer who is locally located in-country. None of these terms are clear or particularly trustworthy, because theyre used by management without the technical nous to really understand the issue, or the precision in language to maintain the distinctions clearly. Ive even heard the awful form expatrisourcing which meant convincing a UK development team to leave the country and relocate to Bulgaria, where they could do the same work and be paid less but would avoid the language issues of native Bulgarian developers. I still dont know if that was a serious management suggestion. In-house development is the process of development in-house. Doesnt matter whether it has always been done in-house, or if it is a recent change from development previously done externally. Andy Dingley  talk  0850, 3 September 2015 UTC Another aspect to in house development is the size of the house. If a team within a large corporate builds some software within that team usually by one person rather than having it done for them by the corporate IT Services monolith, that too can be seen as in house development, as opposed to having the official heavyweight process and team build it I dont know of a s pecific term for this, but would be interested to hear one. There are lots of projects facing this as an issue too. Corporate IT departments are often regarded as slow-moving and inflexible, encouraging this lightweight in-team development. Andy Dingley  talk  0857, 3 September 2015 UTC The above discussion is closed. Please do not modify it. Subsequent comments should be made in a new section. Citations of Software Engineering Body of Knowledge  edit  I updated Software_engineeringSubdisciplines section to follow SWEBOK more precisely. I think that unsourced statements poorly repeat what was said in 15 links of SWEBOKv3. Please review unsourced statements and tidy citation syntax. Ushkin N  talk  0918, 24 May 2016 UTC Who coined the term  edit  According to Milestones in Computer Science and Information Technology , entry on software engineering, Edwin Reilly cites historian Brian Randall as believing that the term came from Fredrich L. Fritz Bauer. He says to see pp 1606-11 of Encyclopedia of Computer Science for additional reading, but my edition of that book is older and doesnt contain those pages. Bubba73 You talkin to me 0007, 15 July 2016 UTC Ive seen by RFC this come up under Margaret Hamilton , as an article there was noted dubious in July 2016. Here it appeared in Dec 2014 edit as coined by her, later shifted to adopted the term in August 2015 . Since used by her is not notable to the topic, I have removed it from the article. I think that the original mention of her as coining it was in error and this was simply a remnant of the error. Markbassett  talk  1453, 19 July 2016 UTC p.s. Ive also removed the photo of her that was put in on 14 Jan 2014 as the top photo with subtext of credited with inventing the term. Again, legacy of an error propagated and later revised and ... just removing the mistake cleanly and completely. Markbassett  talk  1509, 19 July 2016 UTC Certification and Licensure  edit  This article misses the fact that in the USA over 30 States recognize Licensed Software Engineers also know as Professional Engineers PE. The process started by finding a cadre of experienced engineers who were individually vetted by the Texas Board of Professional Engineers. This group formed the majority of those who then went and helped NCEES create the PE Exam in 2013 1  The path requires a minimum degree in Engineering some states will allow ABIT 2  accredited science such as Physics and Computer Science, five years of experience working under another PE, passing the Fundamentals of Engineering exam thus allowing a person to say they are an Engineer In Training or EIT, a background check, five to nine references, and finally the Professional Software Engineering Exam. 3  . Keeping the license requires ongoing professional education. This means that the individual is now legally and ethically obligated to follow and uphold the standards of a professional engineer in their actions and deliverables. At least in Texas there are many PEs who have been stripped of their license andor fined for breaking those rules. This is a different level of professionalism than a certificate from IEEE or Microsoft. Don Gi lman, PE, Texas and contributor to the national exam. Uncleharpoon  talk  1938, 13 November 2017 UTC References  httpsengineers.texas.govsoftware.html  httpwww.abet.orgaccreditation  httpsncees.orgengineeringpesoftware Uncleharpoon , yes the article should mention licensing of professional engineers. There is an article on this, Software engineering professionalism . However licensing affects very few software engineers. The need for this licensure can be seen by looking at the number of people who take the exam. The NCEES offers the PE Software exam twice a year, in April and October. In April 2017 a total of 20 people took the exam. 1  In states that require it a PE is needed only for those offering themselves directly to the public in solo practice or a small partnership. If you work for a large employer you will be considered under the supervision of PEs at the company, and can call yourself whatever your company calls you. 2  While the IEEE supports licensing, the ACM took a strong stand against it and withdrew from the committee, stating .mw-parser-output .inline-quote-talkfont-familyGeorgia,DejaVu Serif,serifcolor008560quotesnone.mw-parser-output .inline-quote-talk-italicfont-familyinheritfont-styleitalic.mw-parser-output .inline-quote-talk-marksquotes ...the Council further concluded that the framework of a licensed professional engineer, originally developed for civil engineers, does not match the professional industrial practice of software engineering . 3  The Fundamentals of Engineering exam, usually taken by graduating students, covers material such as Properties of Electrical Materials, Engineering Sciences, Circuit Analysis DC and AC Steady State, Electronics, Signal Processing, Power, Electromagnetics as well as material software engineers would be expected to study. 4  No effort has been made to develop an FE exam appropriate for software development. Time that would need to be spent by students to learn the material to pass the current exam is much better spent on topics in software development. StarryGrandma  talk  2211, 14 November 2017 UTC References  httpsncees.orgengineeringpepass-rates  httptheinstitute.ieee.orgieee-roundupmembersachievementsanswers-to-faqs-about-software-licensing  httpsweb.archive.orgweb20000815071205httpwww.acm.org80servingse_policyselep_main.html  httpsncees.orgwp-contentuploadsFE-Ele-CBT-specs.pdf Dubious claim in history  edit  Im undoing a dubious claim in the history that Margaret Hamilton was the one who made up the term. Frankly, there seems clear evidence in 1966 of the letter published by Anthony Oettinger leading to the 1968 NATO conference on the topic with its report widely spread as the origin of the common usage, and also credit given to the extensive works of Barry Boehm for developing it but she does not seem to have any prominent published works on the topic during this period that would credit its rise to her. I see a 21st century claim by her, also conveyed via local paper and NASA 50th anniversary review of people, but not as a part of the publicizing work. I think it possible the phrase occurred by others in the 1950s as a casual ut terance but not part of the field development and perhaps she independently used it as well in the 1960s -- but that would be after Oettinger, and lacks the body of work that Boehm contributed so any mention would be after those two and with less coverage to reflect due prominence. Jus put up some evidence prior to 1999 or please stop pushing the tale. Markbassett  talk  0133, 1 December 2017 UTC Copyright problem removed  edit  Prior content in this article duplicated one or more previously published sources. The material was copied from httpwww.collegequest.comhow-to-become-a-software-engineer.aspx and httpswww.worldscientific.comdoi10.1142S0218194099000358 . Copied or closely paraphrased material has been rewritten or removed and must not be restored, unless it is duly released under a compatible license. For more information, please see using copyrighted works from others if you are not the copyright holder of this material, or donating copyrighted materials if you are. For legal reasons , we cannot accept copyrighted text or images borrowed from other web sites or published material such additions will be deleted. Contributors may use copyrighted publications as a source of information , and, if allowed under fair use , may copy sentences and phrases, provided they are included in quotation marks and referenced properly. The material may also be rewritten, providing it does not infringe on the copyright of the original or plagiarize from that source. Therefore, such paraphrased portions must provide their source. Please see our guideline on non-free text for how to properly implement limited quotations of copyrighted text. Wikipedia takes copyright violations very seriously , and persistent violators will be blocked from editing. While we appreciate contributions, we must require all contributors to understand and comply with these policies. Thank you. Justlettersandnumbers  talk  1222, 24 October 2018 UTC Retrieved from  httpsen.wikipedia.orgwindex.phptitleTalkSoftware_engineering oldid865625698  Categories  Wikipedia level-4 vital articles in Technology Wikipedia C-Class vital articles in Technology Wikipedia C-Class level-4 vital articles C-Class Computing articles High-importance Computing articles All Computing articles C-Class Computer science articles Top-importance Computer science articles WikiProject Computer science articles C-Class electrical engineering articles Mid-importance electrical engineering articles Electrical engineering articles C-Class Engineering articles Top-importance Engineering articles WikiProject Engineering articles C-Class Technology articles Technology articles with incomplete B-Class checklists Technology articles needing attention to referencing and citation Technology articles needing attention to coverage and accuracy Technology articles needing attention to structure Technology articles needing attention to grammar Technology articles needing attention to supporting materials Technology articles needing attention to accessibility WikiProject Technology articles C-Class software articles C-Class software articles of Top-importance Top-importance software articles All Software articles C-Class Systems articles Top-importance Systems articles Systems articles in software engineering WikiProject Systems articles Hidden categories All Wikipedia vital articles All Wikipedia level-4 vital articles All Wikipedia vital articles in Technology All Wikipedia C-Class vital articles