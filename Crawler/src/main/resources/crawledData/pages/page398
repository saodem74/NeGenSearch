Capability Maturity Model Integration From Wikipedia, the free encyclopedia Jump to navigation Jump to search Software development Core activities Processes Requirements Design Engineering Construction Testing Debugging Deployment Maintenance Paradigms and models Agile Cleanroom Incremental Prototyping Spiral V model Waterfall Methodologies and frameworks ASD DevOps DAD DSDM FDD IID Kanban Lean SD LeSS MDD MSF PSP RAD RUP SAFe Scrum SEMAT TSP UP XP Supporting disciplines Configuration management Documentation Software quality assurance SQA Project management User experience Practices ATDD BDD CCO CI CD DDD PP SBE Stand-up TDD Tools Compiler Debugger Profiler GUI designer Modeling IDE Build automation Release automation Infrastructure as code Testing Standards and Bodies of Knowledge BABOK CMMI IEEE standards ISO 9001 ISOIEC standards PMBOK SWEBOK ITIL Glossaries Artificial intelligence Computer science Electrical and electronics engineering v t e CMMI redirects here. For the US government organization, see Center for Medicare and Medicaid Innovation . Capability Maturity Model Integration  CMMI  is a process level improvement training and appraisal program. Administered by the CMMI Institute , a subsidiary of ISACA , it was developed at Carnegie Mellon University CMU. It is required by many United States Department of Defense DoD and U.S. Government contracts, especially in software development . CMU claims CMMI can be used to guide process improvement across a project, division, or an entire organization. CMMI defines the following maturity levels for processes Initial, Managed, Defined, Quantitatively Managed, and Optimizing. Version 2.0 was published in 2018 Version 1.3 was published in 2010, and is the reference model for the remaining information in this wiki article. CMMI is registered in the U.S. Patent and Trademark Office by CMU. 1  Contents 1 Overview 2 History 3 CMMI topics 3.1 Representation 3.2 Model framework v1.3 3.3 Maturity levels for services 3.4 Models v1.3 3.5 Model v2.0 3.6 Appraisal 3.7 Security 4 Applications 5 See also 6 References 7 Official sources 8 External links Overview  edit  Characteristics of the maturity levels. 2  Originally CMMI addresses three areas of interest Product and service development  CMMI for Development CMMI-DEV, Service establishment, management,  CMMI for Services CMMI-SVC, and Product and service acquisition  CMMI for Acquisition CMMI-ACQ. In version 2.0 these three areas that previously had a separate model each were merged into a single model. CMMI was developed by a group from industry, government, and the Software Engineering Institute SEI at CMU. CMMI models provide guidance for developing or improving processes that meet the business goals of an organization. A CMMI model may also be used as a framework for appraising the process maturity of the organization. 2  By January 2013, the entire CMMI product suite was transferred from the SEI to the CMMI Institute, a newly created organization at Carnegie Mellon. 3  History  edit  CMMI was developed by the CMMI project, which aimed to improve the usability of maturity models by integrating many different models into one framework. The project consisted of members of industry, government and the Carnegie Mellon Software Engineering Institute SEI. The main sponsors included the Office of the Secretary of Defense  OSD  and the National Defense Industrial Association . CMMI is the successor of the capability maturity model CMM or Software CMM. The CMM was developed from 1987 until 1997. In 2002, version 1.1 was released, version 1.2 followed in August 2006, and version 1.3 in November 2010. Some major changes in CMMI V1.3 4  are the support of agile software development , 5  improvements to high maturity practices 6  and alignment of the representation staged and continuous. 7  According to the Software Engineering Institute SEI, 2008, CMMI helps integrate traditionally separate organizational functions, set process improvement goals and priorities, provide guidance for quality processes, and provide a point of reference for appraising current processes. 8  In March 2016, the CMMI Institute was acquired by ISACA . CMMI topics  edit  Representation  edit  In version 1.3 CMMI existed in two representations continuous and staged. 2  The continuous representation is designed to allow the user to focus on the specific processes that are considered important for the organizations immediate business objectives, or those to which the organization assigns a high degree of risks. The staged representation is designed to provide a standard sequence of improvements, and can serve as a basis for comparing the matu rity of different projects and organizations. The staged representation also provides for an easy migration from the SW-CMM to CMMI. 2  In version 2.0 the above representation separation was cancelled and there is now only one cohesive model. 9  Model framework v1.3  edit  Further information Process area CMMI Depending on the areas of interest acquisition, services, development used, the process areas it contains will vary. 10  Process areas are the areas that will be covered by the organizations processes. The table below lists the seventeen CMMI core process areas that are present for all CMMI areas of interest in version 1.3. Capability Maturity Model Integration CMMI core process areas Abbreviation Name Area Maturity level CAR Causal Analysis and Resolution Support 5 CM Configuration Management Support 2 DAR Decision Analysis and Resolution Support 3 IPM Integrated Project Management Project Management 3 MA Measurement and Analysis Support 2 OPD Organizational Process Definition Process Management 3 OPF Organizational Process Focus Process Management 3 OPM Organizational Performance Management Process Management 5 OPP Organizational Process Performance Process Management 4 OT Organizational Training Process Management 3 PMC Project Monitoring and Control Project Management 2 PP Project Planning Project Management 2 PPQA Process and Product Quality Assurance Support 2 QPM Quantitative Project Management Project Management 4 REQM Requirements Management Project Management 2 RSKM Risk Management Project Management 3 SAM Supplier Agreement Management Support 2 Maturity levels for services  edit  The process areas below and their maturity levels are listed for the CMMI for services model Maturity Level 2 - Managed CM - Configuration Management MA - Measurement and Analysis PPQA - Process and Quality Assurance REQM - Requirements Management SAM - Supplier Agreement Management SD - Service Delivery WMC - Work Monitoring and Control WP - Work Planning Maturity Level 3 - Defined CAM - Capacity and Availability Management DAR - Decision Analysis and Resolution IRP - Incident Resolution and Prevention IWM - Integrated Work Managements OPD - Organizational Process Definition OPF - Organizational Process Focus... OT - Organizational Training RSKM - Risk Management SCON - Service Continuity SSD - Service System Development SST - Service System Transition STSM - Strategic Service Management Maturity Level 4 - Quantitatively Managed OPP - Organizational Process Performance QWM - Quantitative Work Management Maturity Level 5 - Optimizing CAR - Causal Analysis and Resolution. OPM - Organizational Performance Management. Models v1.3  edit  CMMI best practices are published in documents called models, each of which addresses a different area of interest. Version 1.3 provides models for three areas of interest development, acquisition, and services. CMMI for Development  CMMI-DEV , v1.3 was released in November 2010. It addresses product and service development processes. CMMI for Acquisition  CMMI-ACQ , v1.3 was released in November 2010. It addresses supply chain management, acquisition, and outsourcing processes in government and industry. CMMI for Services  CMMI-SVC , v1.3 was released in November 2010. It addresses guidance for delivering services within an organization and to external customers. Model v2.0  edit  In version 2.0 DEV, ACQ and SVC were merged into a single model where each process area potentially has a specific reference to one or more of these three aspects. Trying to keep up with the industry the model also has explicit reference to agile aspects in some process areas. Appraisal  edit  An organization cannot be certified in CMMI instead, an organization is appraised . Depending on the type of appraisal, the organization can be awarded a maturity level rating 1-5 or a capability level achievement profile. Many organizations find value in measuring their progress by conducting an appraisal. Appraisals are typically conducted for one or more of the following reasons To determine how well the organizations processes compare to CMMI best practices, and to identify areas where improvement can be made To inform external customers and suppliers of how well the organizations processes compare to CMMI best practices To meet the contractual requirements of one or more customers Appraisals of organizations using a CMMI model 11  must conform to the requirements defined in the Appraisal Requirements for CMMI ARC document. There are three classes of appraisals, A, B and C, which focus on identifying improvement opportunities and comparing the organizations processes to CMMI best practices. Of these, class A appraisal is the most formal and is the only one that can result in a level rating. Appraisal teams use a CMMI model and ARC-conformant appraisal method to guide their evaluation of the organization and their reporting of conclusions. The appraisal results can then be used e.g., by a process group to plan improvements for the organization. The Standard CMMI Appraisal Method for Process Improvement SCAMPI is an appraisal method that meets all of the ARC requirements. 12  Results of a SCAMPI appraisal may be published if the appraised organization approves on the CMMI Web site of the SEI Published SCAMPI Appraisal Results . SCAMPI also supports the conduct of ISOIEC 15504 , also known as SPICE Software Process Improvement and Capability Determination, assessments etc. This approach promotes that members of the EPG and PATs be trained in the CMMI, that an informal SCAMPI C appraisal be performed, and that process areas be prioritized for improvement. More modern approaches, that involve the deployment of commercially available, CMMI-compliant processes, can significantly reduce the time to achieve compliance. SEI has maintained statistics o n the time to move up for organizations adopting the earlier Software CMM as well as CMMI. 13  These statistics indicate that, since 1987, the median times to move from Level 1 to Level 2 is 23 months, and from Level 2 to Level 3 is an additional 20 months. Since the release of the CMMI, the median times to move from Level 1 to Level 2 is 5 months, with median movement to Level 3 another 21 months. These statistics are updated and published every six months in a maturi ty profile.  citation needed  The Software Engineering Institutes SEI team software process methodology and the use of CMMI models can be used to raise the maturity level. A new product called Accelerated Improvement Method 14  AIM combines the use of CMMI and the TSP. 15  Security  edit  To address user security concerns, two unofficial security guides are available. Considering the Case for Security Content in CMMI for Services has one process area, Security Management. 16  Security by Design with CMMI for Development, Version 1.3 has the following process areas OPSD - Organizational Preparedness for Secure Development SMP - Secure Management in Projects SRTS - Security Requirements and Technical Solution SVV - Security Verification and Validation While they do not affect maturity or capability levels, these process areas can be reported in appraisal results. 17  Applications  edit  The SEI published that 60 organizations measured increases of performance in the categories of cost, schedule, productivity, quality and customer satisfaction. 18  The median increase in performance varied between 14 customer satisfaction and 62 productivity. However, the CMMI model mostly deals with what processes should be implemented, and not so much with how they can be implemented. These results do not guarantee that applying CMMI will increase performance in every organization. A small company with few resources may be less likely to benefit from CMMI this view is supported by the process maturity profile page 10. Of the small organizations  25 employees, 70.5 are assessed at level 2 Managed, while 52.8 of the organizations with 1,0012,000 employees are rated at the highest level 5 Optimizing. Turner  Jain 2002 argue that although it is obvious there are large differences between CMMI and agile software development , both approaches have much in common. They believe neither way is the right way to develop software, but that there are phases in a project where one of the two is better suited. They suggest one should combine the different fragments of the methods into a new hybrid method. Sutherland et al. 2007 assert that a combination of Scrum and CMMI brings more adaptability and predictability than either one alone 19  . David J. Anderson 2005 gives hints on how to interpret CMMI in an agile manner 20  . CMMI Roadmaps, 21  which are a goal-driven approach to selecting and deploying relevant process areas from the CMMI-DEV model, can provide guidance and focus for effective CMMI adoption. There are several CMMI roadmaps for the continuous representation, each with a specific set of improvement goals. Examples are the CMMI Project Roadmap, 22  CMMI Product and Product Integration Roadmaps 23  and the CMMI Process and Measurements Roadmaps. 24  These roadmaps combine the strengths of both the staged and the continuous representations. The combination of the project management technique earned value management EVM with CMMI has been described  Solomon, 2002 . To conclude with a similar use of CMMI, Extreme Programming  XP , a software engineering method, has been evaluated with CMMCMMI Nawrocki et al., 2002. For example, the XP requirements management approach, which relies on oral communication, was evaluated as not compliant with CMMI. CMMI can be appraised using two different approaches staged and continuous. The staged approach yields appraisal results as one of five maturity levels. The continuous approach yields one of four capability levels. The differences in these approaches are felt only in the appraisal the best practices are equivalent and result in equivalent process improvement results. See also  edit  Software Engineering Process Group Capability Immaturity Model Capability Maturity Model Enterprise Architecture Assessment Framework People Capability Maturity Model Process area CMMI References  edit   Trademark Electronic Search System TESS . tmsearch.uspto.gov . Retrieved 21 December 2016 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation . cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-po sitionright .1em center.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno -repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-o utput .cs1-registration,.mw-parser-output .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em  a b c d Sally Godfrey 2008 software.gsfc.nasa.govdocsWhat20is20CMMI.ppt What is CMMI  . NASA presentation. Accessed 8 dec 2008.  httpwww.sei.cmu.educmmi  Major changes in CMMI Version 1.3  CMMI V1.3 Agile  CMMI V1.3, High Maturity Practices Clarified  Deploying the CMMI V1.3  CMMI Overview . Software Engineering Institute. Accessed 16 February 2011.  httpswww.cmmiinstitute.comcmmimodel-viewerappendicesa  Overview of the CMMI Version 1.3 Process Areas  For the latest published CMMI appraisal results see the SEI Web site Archived 6 February 2007 at the Wayback Machine .  Standard CMMI Appraisal Method for Process Improvement SCAMPISM A, Version 1.2 Method Definition Document . CMUSEI-2006-HB-002 . Software Engineering Institute. 2006 . Retrieved 23 September 2006 .  Process Maturity Profile . Retrieved 16 February 2011 .  httpwww.sei.cmu.eduprocesshigh-performance.cfm  httpwww.sei.cmu.edutsp  Eileer Forrester and Kieran Doyle. Considering the Case for Security Content in CMMI for Services October 2010  Siemens AG Corporate Technology. Security by Design with CMMI for Development, Version 1.3 , May 2013  CMMI Performance Results of CMMI . Retrieved 23 September 2006 .  httpjeffsutherland.comscrumSutherlandScrumCMMIHICSSPID498889.pdf  httpsieeexplore.ieee.orgabstractdocument1609821  CMMI Roadmaps  CMMI Project Roadmap  CMMI Product and Product Integration Roadmaps  CMMI Process and Measurements Roadmaps Official sources  edit  SEI reports CMMI for Development, Version 1.3 PDF . CMMI-DEV Version 1.3, November 2010 . Carnegie Mellon University Software Engineering Institute. 2010 . Retrieved 16 February 2011 . CMMI for Acquisition, Version 1.3 PDF . CMMI-ACQ Version 1.3, November 2010 . Carnegie Mellon University Software Engineering Institute. 2010 . Retrieved 16 February 2011 . CMMI for Services, Version 1.3 PDF . CMMI-SVC Version 1.3, November 2010 . Carnegie Mellon University Software Engineering Institute. 2010 . Retrieved 16 February 2011 . Process Maturity Profile Current and Past Releases PDF . CMMI for Development SCAMPI Class A Appraisal Results . Software Engineering Institute . Retrieved 16 February 2011 . Appraisal Requirements for CMMI, Version 1.2 ARC, V1.2 PDF . Carnegie Mellon University Software Engineering Institute. 2006 . Retrieved 16 February 2011 . Standard CMMI Appraisal Method for Process Improvement SCAMPI A Version 1.2 Method Definition Document doc . Carnegie Mellon University Software Engineering Institute. 2006 . Retrieved 22 August 2006 . CMMI Guidebook Acquirer Team 2007. Understanding and Leveraging a Suppliers CMMI Efforts A Guidebook for Acquirers PDF . CMUSEI-2007-TR-004 . Software Engineering Institute . Retrieved 23 August 2007 . SEI Web pages CMMI Version 1.3 Information Center . Software Engineering Institute. 2011 . Retrieved 16 February 2011 . SEI Partner List . Software Engineering Institute . Retrieved 28 October 2006 . Optimiza formal announcement as CMMI-L3 and published on SEI website . Software Engineering Institute. Archived from the original on 25 July 2011 . Retrieved 15 March 2011 . Cite uses deprecated parameter dead-url  help  SCAMPI Appraisal Results . The complete SEI list of published SCAMPI appraisal results. External links  edit  Wikimedia Commons has media related to Capability Maturity Model Integration . Official website Capability Maturity Model Integration at Curlie v t e Carnegie Mellon University Academics College of Engineering College of Fine Arts Dietrich College of Humanities and Social Sciences H. John Heinz III College of Information Systems and Public Policy Mellon College of Science School of Computer Science Tepper School of Business Margaret Morrison Carnegie College defunct Branch campuses Australia Qatar Rwanda Silicon Valley Student life Traditions Greek Life ScotchnSoda Miller Gallery The Tartan The Oakland Review WRCT University Athletic Association Alma Mater Research Pittsburgh Supercomputing Center Software Engineering Institute Robotics Institute Human Computer Interaction Institute Computational Biology Department Language Technologies Institute Pittsburgh Life Sciences Greenhouse Carnegie School People Andrew Carnegie Mellon family Alumni and faculty Projects and legacies Alice Andrew Project BLISS CMMI Mach 3M computer Center for PostNatural History Conflict Kitchen Robot Hall of Fame Waffle Shop A Reality Show YinzCam v t e Software engineering Fields Computer programming Requirements engineering Software deployment Software design Software maintenance Software testing Systems analysis Formal methods Concepts Data modeling Enterprise architecture Functional specification Modeling language Orthogonality Programming paradigm Software Software archaeology Software architecture Software configuration management Software development methodology Software development process Software quality Software quality assurance Software verification and validation Structured analysis Orientations Agile Aspect-oriented Object orientation Ontology Service orientation SDLC Models Developmental Agile EUP Executable UML Incremental model Iterative model Prototype model RAD UP Scrum Spiral model V-Model Waterfall model XP Other SPICE CMMI Data model ER model Function model Information model Metamodeling Object model Systems model View model Languages IDEF UML USL SysML Software engineers Victor Basili Kent Beck Grady Booch Fred Brooks Barry Boehm Peter Chen Danese Cooper Ward Cunningham Tom DeMarco Edsger W. Dijkstra Delores M. Etter Martin Fowler Adele Goldstine Margaret Hamilton C. A. R. Hoare Lois Haibt Mary Jean Harrold Grace Hopper Watts Humphrey Michael A. Jackson Ivar Jacobson Alan Kay Nancy Leveson Stephen J. Mellor Bertrand Meyer David Parnas Trygve Reenskaug Winston W. Royce James Rumbaugh Mary Shaw Peri Tarr Elaine Weyuker Niklaus Wirth Edward Yourdon Related fields Computer science Computer engineering Project management Risk management Systems engineering Category Commons Retrieved from  httpsen.wikipedia.orgwindex.phptitleCapability_Maturity_Model_Integration oldid911733573  Categories  Maturity models Software development process Standards Carnegie Mellon University software Hidden categories Webarchive template wayback links All articles with unsourced statements Articles with unsourced statements from November 2013 CS1 errors deprecated parameters Commons category link is on Wikidata Commons category link is on Wikidata using P373 Official website different in Wikidata and Wikipedia Articles with Curlie links Use dmy dates from February 2011