Model-driven engineering From Wikipedia, the free encyclopedia    Redirected from Model-driven development  Jump to navigation Jump to search This article includes a list of references , but its sources remain unclear because it has insufficient inline citations . Please help to improve this article by introducing more precise citations.  August 2014   Learn how and when to remove this template message  Software development Core activities Processes Requirements Design Engineering Construction Testing Debugging Deployment Maintenance Paradigms and models Agile Cleanroom Incremental Prototyping Spiral V model Waterfall Methodologies and frameworks ASD DevOps DAD DSDM FDD IID Kanban Lean SD LeSS MDD MSF PSP RAD RUP SAFe Scrum SEMAT TSP UP XP Supporting disciplines Configuration management Documentation Software quality assurance SQA Project management User experience Practices ATDD BDD CCO CI CD DDD PP SBE Stand-up TDD Tools Compiler Debugger Profiler GUI designer Modeling IDE Build automation Release automation Infrastructure as code Testing Standards and Bodies of Knowledge BABOK CMMI IEEE standards ISO 9001 ISOIEC standards PMBOK SWEBOK ITIL Glossaries Artificial intelligence Computer science Electrical and electronics engineering v t e Model-driven engineering  MDE  is a software development methodology that focuses on creating and exploiting domain models , which are conceptual models of all the topics related to a specific problem. Hence, it highlights and aims at abstract representations of the knowledge and activities that govern a particular application domain , rather than the computing i.e. algorithmic concepts. Contents 1 Overview 2 History 3 Tools 4 See also 5 References 6 Further reading 7 External links Overview  edit  The MDE approach is meant to increase productivity by maximizing compatibility between systems via reuse of standardized models, simplifying the process of design via models of recurring design patterns in the application domain, and promoting communication between individuals and teams working on the system via a standardization of the terminology and the best practices used in the application domain. A modeling paradigm for MDE is considered effective if its models make sense from the point of view of a user that is familiar with the domain, and if they can serve as a basis for implementing systems. The models are developed through extensive communication among product managers, designers, developers and users of the application domain. As the models approach completion, th ey enable the development of software and systems. Some of the better known MDE initiatives are The Object Management Group OMG initiative Model-Driven Architecture MDA which is leveraged by several of their standards such as Meta-Object Facility , XMI , CWM , CORBA , Unified Modeling Language to be more precise, the OMG currently promotes the use of a subset of UML called fUML together with its action language, ALF , for model-driven architecture a former approach relied on Executable UML and OCL , instead, and QVT . 1  The Eclipse eco-system of programming and modelling tools represented in general terms by the  Eclipse Modeling Framework . This framework allows the creation of tools implementing the MDA standards of the OMG but, it is also possible to use it to implement other modeling-related tools. History  edit  The first tools to support MDE were the Computer-Aided Software Engineering  CASE  tools developed in the 1980s. Companies like Integrated Development Environments IDE - StP, Higher Order Software now Hamilton Technologies, Inc., HTI, Cadre Technologies, Bachman Information Systems , and Logic Works BP-Win and ER-Win were pioneers in the field. The US government got involved in the modeling definitions creating the IDEF specifications. With several variations of the modeling definitions see Booch , Rumbaugh , Jacobson , Gane and Sarson, Harel , Shlaer and Mellor , and others they were eventually joined creating the Unified Modeling Language UML. Rational Rose , a product for UML implementation, was done by Rational Corporation Booch responding automation yield higher levels of abstraction in software development. This abstraction promotes simpler models with a greater focus on problem space. Combined with executable semantics this elevates the total level of automation possible. The Object Management Group OMG has developed a set of standards called model-driven architecture MDA, building a foundation for this advanced architecture-focused approach. According to Douglas C. Schmidt , model-driven engineering technologies offer a promising approach to address the inability of third-generation languages to alleviate the complexity of platforms and express domain concepts effectively. 2  Tools  edit  Notable software tools for model-driven engineering include AADL from Carnegie-Mellon Software Engineering Institute Acceleo an open source code generator from Obeo Actifsource ATLAS Transformation Language or ATL, a model transformation language from Obeo Bold for Delphi ORM framework shipped with Delphi 7 ECO Domain Driven Design EnterpriseCoreObjects by CapableObjects.com Dot.Net Eclipse Modeling Framework EMF Enterprise Architect from Sparx Systems Generic Eclipse Modeling System GEMS GeneXus a Knowledge -based, declarative , multi-platform, multi-language development solution Genio a CASE  RAD  Rapid Application Development   Agile  Model Driven Platform developed by Quidgest Graphical Modeling Framework GMF JetBrains MPS , a metaprogramming system from JetBrains MagicDraw from No Magic Inc MERODE JMermaid from KU Leuven educational MetaEdit from MetaCase ModelCenter from Phoenix Integration Open ModelSphere OptimalJ from Compuware PREEvision from Vector Informatik Rhapsody from IBM TToolDIPLODOCUS from Telecom ParisTech RISE Editor from RISE to Bloome Software PowerDesigner from SAP Simulink from MathWorks , see also Stateflow and Real-Time Workshop Embedded Coder , TargetLink Sirius an Eclipse Open Source project to create custom graphical modeling workbenches, from Obeo and Thales Together Architect from Borland Umple from the University of Ottawa Uniface from Compuware YAKINDU Statechart Tools open source tool build on top of Eclipse See also  edit  Application lifecycle management ALM Business Process Model and Notation BPMN Business-driven development BDD Domain-specific language DSL Domain-specific modeling DSM Domain-specific multimodeling Language-oriented programming LOP List of Unified Modeling Language tools Model transformation e.g. using QVT  Model-based testing MBT Modeling Maturity Level MML Service-oriented modeling Framework SOMF Software factory SF Story-driven modeling SDM References  edit   Object Management Group 2006-05-24. OMG Trademarks . Retrieved 2008-02-26 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation . cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-po sitionright .1em center.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno -repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-o utput .cs1-registration,.mw-parser-output .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em  Schmidt, D.C. February 2006. Model-Driven Engineering PDF . IEEE Computer . 39 2 . Retrieved 2006-05-16 . , A promising approach to address platform complexity and the inability of third-generation languages to alleviate this complexity and express domain concepts effectively is to develop Model-Driven Engineering MDE technologies... Further reading  edit  David S. Frankel , Model Driven Architecture Applying MDA to Enterprise Computing , John Wiley  Sons, ISBN   0-471-31920-1 Marco Brambilla, Jordi Cabot, Manuel Wimmer, Model Driven Software Engineering in Practice , foreword by Richard Soley  OMG Chairman, Morgan  Claypool, USA, 2012, Synthesis Lectures on Software Engineering 1. 182 pages. ISBN   9781608458820 paperback, ISBN   9781608458837 ebook. httpwww.mdse-book.com da Silva, Alberto Rodrigues 2015. Model-Driven Engineering A Survey Supported by a Unified Conceptual Model. Computer Languages, Systems  Structures . 43 43 139155. doi  10.1016j.cl.2015.06.001 . External links  edit  Model-Driven Architecture Vision, Standards And Emerging Technologies at omg.org Retrieved from  httpsen.wikipedia.orgwindex.phptitleModel-driven_engineering oldid896048398  Categories  Systems engineering Unified Modeling Language Hidden categories Articles lacking in-text citations from August 2014 All articles lacking in-text citations