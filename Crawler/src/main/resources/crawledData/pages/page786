ALGOL W From Wikipedia, the free encyclopedia Jump to navigation Jump to search ALGOL W Paradigm procedural , imperative , structured Developer Niklaus Wirth , Tony Hoare First  appeared 1966  53  years ago   1966  Influenced by ALGOL 60 Influenced Pascal , Modula-2 ALGOL W is a programming language . It is based on a proposal for ALGOL X by Niklaus Wirth and Tony Hoare as a successor to ALGOL 60 in IFIP Working Group 2.1 . When the committee decided that the proposal was not a sufficient advance over ALGOL 60, the proposal was published as A contribution to the development of ALGOL . 1  After making small modifications to the language 2  Wirth supervised a high quality implementation for the IBM360 at Stanford University that was widely distributed. 3  It represented a relatively conservative modification of ALGOL 60, adding string , bitstring, complex number and reference to record datatypes and call-by-result passing of parameters , introducing the while statement, replacing switch with the case statement, and generally tightening up the language. The implementation was written in PL360 , an ALGOL-like assembly language designed by Wirth. The implementation includes influential debugging and profiling abilities. Contents 1 Syntax and semantics 2 Example 3 Implementation 4 References 5 External links Syntax and semantics  edit  ALGOL Ws syntax is built on a subset of the EBCDIC character set. In ALGOL 60 reserved words are distinct lexical items, but in ALGOL W they are merely sequences of characters, and do not need to be stropped . Reserved words and identifiers are separated by spaces. 3  In these ways ALGOL Ws syntax resembles that of Pascal and later languages. The Algol W Language Description 4  defines Algol W in an affix grammar that resembles BNF . This grammar was a precursor of the Van Wijngaarden grammar . 1  5  Much of Algol Ws semantics is defined grammatically 4  Identifiers are distinguished by their definition within the current scope . For example, a procedure identifier is an identifier that has been defined by a procedure declaration, a label identifier is an identifier that is being used as a goto label. The types of variables and expressions are represented by affixes. For example  function identifier is the syntactic entity for a function that returns a value of type  , if an identifier has been declared as an integer function in the current scope then that is expanded to integer function identifier . Type errors are grammatical errors. For example  integer expression  integer expression  and  real expression  real expression  are valid but distinct syntactic entities that represent expressions, but  real expression DIV integer expression  i.e. integer division performed on a floating-point value is an invalid syntactic entity. Example  edit  This demonstrates ALGOL Ws record type facility. RECORD PERSON  STRING  20  NAME  INTEGER AGE  LOGICAL MALE  REFERENCE  PERSON  FATHER , MOTHER , YOUNGESTOFFSPRING , ELDERSIBLING   REFERENCE  PERSON  PROCEDURE YOUNGESTUNCLE  REFERENCE  PERSON  R   BEGIN REFERENCE  PERSON  P , M  P  YOUNGESTOFFSPRING  FATHER  FATHER  R   WHILE  P   NULL  AND   MALE  P  OR  P  FATHER  R  DO P  ELDERSIBLING  P   M  YOUNGESTOFFSPRING  MOTHER  MOTHER  R   WHILE  M   NULL  AND   MALE  M  DO M  ELDERSIBLING  M   IF P  NULL THEN M ELSE IF M  NULL THEN P ELSE IF AGE  P   AGE  M  THEN P ELSE M END Implementation  edit  The major part of ALGOL W, amounting to approximately 2700 cards, was written in Wirths PL360. An interface module for the IBM operating system in use OS, DOS, MTS, ORVYL  was written in IBM assembler, amounting to fewer than 250 cards. 1 In an OS environment on a 36067 with spooled input and output files, the compiler will recompile itself in about 25 seconds. The compiler is approximately 2700 card images. Thus, when the OS scheduler time is subtracted from the execution time given above, it is seen that the compiler runs at a speed in excess of 100 cards per second for dense code. In a DOS environment on a 36030, the compiler is limited only by the speed of the card reader. The compiler has successfully recompiled itself on a 64K 36030 at a rate of 1200 cards per minute the speed of the card reader. This is impressive when compared to the time required for the DOS Assembler to assemble the interface module which consists of under 250 cards. When the macro instructions are expanded, the DOS interface has 972 card images and the Assembler takes 15 minutes for the assembly. References  edit   a b Niklaus Wirth  C. A. R Hoare 1966 A contribution to the development of ALGOL. Communications of the ACM, Vol.9, pp. 413 - 432  Niklaus Wirth 1966 , Additional notes on A Contribution to the Development of ALGOL , ALGOL Bulletin, Number 24 pp. 13 - 17.  a b Stanford Computer Science Department Technical Report CS-TR-68-89 Various documents for Stanford Universitys 1972 implementation of ALGOL W this report includes the ALGOL W Language Description .  a b Algol W Language Description, June 1972  Adriaan van Wijngaarden 1965, Orthogonal Design and Description of a Formal Language ,MR76 Mathematical Centre, Amsterdam External links  edit  aw2c , an ALGOL W compiler for Linux awe , an updated version of aw2c ALGOL W  Everything2 , an informal but detailed description of the language by a former user, with sidebars extolling ALGOL W over Pascal as an educational programming language 1969 ALGOL W compiler listing at bitsavers.org The Michigan Terminal System Manuals, Volume 16 ALGOL W in MTS Algol W materials More than 200 Algol W programs and documentation Authority control GND  4141869-4 Retrieved from  httpsen.wikipedia.orgwindex.phptitleALGOL_W oldid911259846  Categories  Procedural programming languages Structured programming languages ALGOL 60 dialect Programming languages created in 1966 Hidden categories Wikipedia articles with GND identifiers