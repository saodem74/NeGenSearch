Specification by example From Wikipedia, the free encyclopedia Jump to navigation Jump to search Software development Core activities Processes Requirements Design Engineering Construction Testing Debugging Deployment Maintenance Paradigms and models Agile Cleanroom Incremental Prototyping Spiral V model Waterfall Methodologies and frameworks ASD DevOps DAD DSDM FDD IID Kanban Lean SD LeSS MDD MSF PSP RAD RUP SAFe Scrum SEMAT TSP UP XP Supporting disciplines Configuration management Documentation Software quality assurance SQA Project management User experience Practices ATDD BDD CCO CI CD DDD PP SBE Stand-up TDD Tools Compiler Debugger Profiler GUI designer Modeling IDE Build automation Release automation Infrastructure as code Testing Standards and Bodies of Knowledge BABOK CMMI IEEE standards ISO 9001 ISOIEC standards PMBOK SWEBOK ITIL Glossaries Artificial intelligence Computer science Electrical and electronics engineering v t e Specification by example  SBE  is a collaborative approach to defining requirements and business-oriented functional tests for software products based on capturing and illustrating requirements using realistic examples instead of abstract statements. It is applied in the context of agile software development methods, in particular behavior-driven development . This approach is particularly successful for managing requirements and functional tests on large-scale projects of significant domain and organisational complexity. 1  Specification by example is also known as example-driven development, executable requirements, acceptance testdriven development ATDD 2  or A-TDD 3  , Agile Acceptance Testing, 4  Test-Driven Requirements TDR. Contents 1 Advantages 2 Examples as a single source of truth 3 Key practices 4 Applicability 5 History 6 Derived works 6.1 Example Mapping 6.2 SHEQC grooming 7 Automation 8 References 9 External links Advantages  edit  This sections tone or style may not reflect the encyclopedic tone used on Wikipedia . See Wikipedias guide to writing better articles for suggestions.  Learn how and when to remove this template message  Human brains are generally not that great at understanding abstractions or novel ideasconcepts when first exposed to them, but theyre really good at deriving abstractions or concepts if given enough concrete examples.  citation needed  The more examples we are given, the more likely we are to correctly understand the intended meaning. Also, by using concrete examples, they become more familiar and relatable to something similar to our past experiences, which generally makes them easier to understand. Successful application of Specification by example is documented 1  to significantly reduce feedback loops in software development, leading to less rework, higher product quality, faster turnaround time for software changes and better alignment of activities of various roles involved in software development such as testers, analysts and developers. Examples as a single source of truth  edit  A key aspect of specification by example is creating a single source of truth about required changes from all perspectives. When business analysts work on their own documents, software developers maintain their own documentation and testers maintain a separate set of functional tests, software delivery effectiveness is significantly reduced by the need to constantly coordinate and synchronise those different versions of truth. With short iterative cycles, such coordination is often required on weekly or biweekly basis. With Specification by example, different roles participate in creating a single source of truth that captures everyones understanding. Examples are used to p rovide clarity and precision, so that the same information can be used both as a specification and a business-oriented functional test. Any additional information discovered during development or delivery, such as clarification of functional gaps, missing or incomplete requirements or additional tests, is added to this single source of truth. As there is only one source of truth about the functionality, there is no need for coordination, translation and interpretation o f knowledge inside the delivery cycle. When applied to required changes, a refined set of examples is effectively a specification and a business-oriented test for acceptance of software functionality. After the change is implemented, specification with examples becomes a document explaining existing functionality. As the validation of such documents is automated, when they are validated frequently, such documents are a reliable source of information on business functionality of underlying software. To distinguish between such documents and typical printed documentation, which quickly gets outdated, 4  a complete set of specifications with examples is called Living Documentation. 1  Key practices  edit  Teams that apply Specification by example successfully commonly apply the following process patterns 1  Deriving scope from goals Specifying collaboratively - through all-team specification workshops, smaller meetings or teleconference reviews Illustrating requirements using examples Refining specifications Automating tests based on examples Validating the underlying software frequently using the tests Evolving a documentation system from specifications with examples to support future development Software teams that apply specification by example within a Scrum framework typically spend 5-10 of their time in refining the product backlog, including specifying collaboratively, illustrating requirements using examples and refining examples. 3  Applicability  edit  Specification by example applies to projects with sufficient organisational and domain complexity to cause problems in understanding or communicating requirements from a business domain perspective. It does not apply to purely technical problems or where the key complexity is not in understanding or communicating knowledge. There are documented usages of this approach in domain s including investment banking, financial trading, insurance, airline ticket reservation, online gaming and price comparison. 1  A similar approach is documented also in a nuclear-power plant simulation project. 3  Tests based on shared examples fit best in the category of tests designed to support a team while delivering software from a business perspective see Agile Testing Quadrants 5   - ensuring that the right product is built. They do not replace tests that look at a software system from a purely technical perspective those that evaluate whether a product is built the right way, such as unit tests, component or technical integration tests or tests that evaluate a product after it was developed such as security penetration tests. History  edit  The earliest documented usage of realistic examples as a single source of truth, requirements and automated tests, on software projects is the WyCash project, described by Ward Cunningham in the paper A Pattern Language of Competitive Development 6  7  in 1996. The name Specification by Example was coined by Martin Fowler in 2004. 8  Specification by Example is an evolution of the Customer Test 9  practice of Extreme Programming proposed around 1997 and Ubiquitous Language 10  idea from Domain-driven design from 2004, using the idea of black-box tests as requirements described by Weinberg and Gause 11  in 1989. Derived works  edit  Example Mapping  edit  Example Mapping is a simple technique that can steer the conversation and derive Acceptance criteria within 30 minutes .The process involves breaking each stories into Rules and Examples and documented in the form of Specification by examples. Example Mapping was first introduced by Matt Wynne in the 2015 Agile alliances conference and is one of the wildly used techniques in th e BDD world . SHEQC grooming  edit  Similar to Example mapping SHEQC 12  grooming enables teams to groom a complex user story in less than 30 to 45 min using a concept called as continuous grooming using design thinking techniques . SHEQC uses Specification by example as the standard for documenting scenarios . The process involves the double diamond 13  rule for brainstorming and the out come is a set of question and Acceptance criteria again documented in the form of Specification by example for the story . SHEQC grooming was first introduced in the Innovations in software engineering conference ISEC2019 , WESSEE 14  by Ranjith Tharayil and later published in XP2019 conference as one of the core methods for continuous grooming 15  Automation  edit  Successful application of Specification by example on large scale projects requires frequent validation of software functionality against a large set of examples tests. In practice, this requires tests based on examples to be automated. A common approach is to automate the tests but keep examples in a form readable and accessible to non-technical and technical team members, k eeping the examples as a single source of truth. This process is supported by a class of test automation tools which work with tests divided into two aspects - the specification and the automation layer. The specification of a test which is often in a plain text or HTML form and contains the examples and auxiliary descriptions. The automation layer connects the example to a sof tware system under test. Examples of such tools are Behat Concordion Cucumber FitNesse Framework for Integrated Test Robot Framework Gauge software References  edit   a b c d e Adzic, Gojko 2011. Specification by example How successful teams deliver the right software . Manning. ISBN   9781617290084 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation . cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-po sitionright .1em center.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno -repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-o utput .cs1-registration,.mw-parser-output .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em  Pugh, Ken 2011. Lean-Agile Acceptance Test Driven Development Better Software Through Collaboration A Tale of Lean-Agile Acceptance Test Driven Development . Addison Wesley. ISBN   978-0-321-71408-4 .  a b c Larman, Craig Vodde, Bas 2010. Practices for Scaling Lean and Agile Development Large, Multisite, and Offshore Product Development with Large-Scale Scrum . Pearson. ISBN   978-0-321-63640-9 .  a b Adzic, Gojko 2009. Bridging the Communication Gap Specification by Example and Agile Acceptance Testing . Neuri. ISBN   0-9556836-1-0 .  Crispin, Lisa  Gregory, Janet 2008. Agile Testing A Practical Guide for Testers and Agile Teams . Addison Wesley. ISBN   978-0-321-53446-0 .  Pattern Languages of Program Design 2 . Addison-Wesley. 1996. ISBN   978-0-201-89527-8 .  Ward Cunningham. EPISODES A Pattern Language of Competitive Development Part I . C2.com . Retrieved 2014-01-08 .  Martin Fowler 18 March 2004 2004-03-18. SpecificationByExample . Martinfowler.com . Retrieved 2014-01-08 .  Beck, K. 1999. Extreme Programming Explained Embrace Change . Addison-Wesley. ISBN   978-0-321-27865-4 .  Evans, Eric 2004. Domain-Driven DesignTackling Complexity in the Heart of Software . Addison-Wesley. ISBN   0-321-12521-5 .  Weinberg, Gerald  Gause, Donald 1989. Exploring Requirements Quality Before Design . Dorset House. ISBN   0-932633-13-7 .  SHE QC A story grooming technique - Agile Allainces  Regional Scrum Gathering Hyderabad . Discuss Agile   Regional Scrum Gathering Hyderabad - SHE QC A story grooming technique  ConfEngine - Conference Platform . 2019-02-09 . Retrieved 2019-06-06 .  The Double Diamond Strategy  Execution of the Right Solution . ThoughtWorks . 2015-02-03 . Retrieved 2019-06-06 .  Tharayil, Ranjith. ISEC2019   WESEE 2019 . sites.google.com . Retrieved 2019-06-06 .  Tharayil, Ranjith. XP2019 SHEQC . xp2019.sched.com . Retrieved 2019-06-06 . External links  edit  Google discussion group Books, videos, tools and presentations from Specificationbyexample.com Definition on Martin Fowlers bliki Retrieved from  httpsen.wikipedia.orgwindex.phptitleSpecification_by_example oldid910002281  Categories  Wikipedia articles with style issues Software development philosophies Software testing Business analysis Hidden categories All articles with style issues All articles with unsourced statements Articles with unsourced statements from February 2016