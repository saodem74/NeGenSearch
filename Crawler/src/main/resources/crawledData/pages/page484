Numerical analysis From Wikipedia, the free encyclopedia Jump to navigation Jump to search It has been suggested that Numerical method be merged into this article.  Discuss  Proposed since January 2019. This article includes a list of references , but its sources remain unclear because it has insufficient inline citations . Please help to improve this article by introducing more precise citations.  November 2013   Learn how and when to remove this template message  Babylonian clay tablet YBC 7289 c. 18001600 BC with annotations. The approximation of the square root of 2 is four sexagesimal figures, which is about six decimal figures. 1  2460  5160 2  1060 3  1.41421296... 1  Numerical analysis is the study of algorithms that use numerical approximation as opposed to symbolic manipulations  for the problems of mathematical analysis as distinguished from discrete mathematics . Numerical analysis naturally finds application in all fields of engineering and the physical sciences, but in the 21st  century also the life sciences, social sciences, medicine, business and even the arts have adopted elements of scientific computations. The growth in computing power has revolutionized the use of realistic mathematical models in science and engineering, and subtle numerical analysis is required to implement these detailed models of the world. For example, ordinary differential equations appear in celestial mechanics predicting the motions of planets, stars and galaxies numerical linear algebra is important for data analysis stochastic differential equations and Markov chains are essential in simulating living cells for medicine and biology. Before the advent of modern computers, numerical methods often depended on hand interpolation formulas applied to data from large printed tables. Since the mid 20th century, computers calculate the required functions instead, but many of the same formulas nevertheless continue to be used as part of the software algorithms. The numerical point of view goes back to the earliest mathematical writings. A tablet from the Yale Babylonian Collection  YBC 7289 , gives a sexagesimal numerical approximation of the square root of 2 , the length of the diagonal in a unit square . Computing the sides of a triangle in terms of square roots is a basic practical problem, for example in astronomy , carpentry , and construction . 2  Numerical analysis continues this long tradition rather than exact symbolic answers, which can only be applied to real-world measurements by translation into digits, it gives approximate solutions within specified error bounds. Contents 1 General introduction 1.1 History 1.2 Direct and iterative methods 1.2.1 Discretization and numerical integration 1.3 Discretization 2 Generation and propagation of errors 2.1 Round-off 2.2 Truncation and discretization error 2.3 Numerical stability and well-posed problems 3 Areas of study 3.1 Computing values of functions 3.2 Interpolation, extrapolation, and regression 3.3 Solving equations and systems of equations 3.4 Solving eigenvalue or singular value problems 3.5 Optimization 3.6 Evaluating integrals 3.7 Differential equations 4 Software 5 See also 6 Notes 7 References 7.1 Citations 7.2 Sources 8 External links 8.1 Journals 8.2 Online texts 8.3 Online course material General introduction  edit  The overall goal of the field of numerical analysis is the design and analysis of techniques to give approximate but accurate solutions to hard problems, the variety of which is suggested by the following Advanced numerical methods are essential in making numerical weather prediction feasible. Computing the trajectory of a spacecraft requires the accurate numerical solution of a system of ordinary differential equations. Car companies can improve the crash safety of their vehicles by using computer simulations of car crashes. Such simulations essentially consist of solving partial differential equations numerically. Hedge funds private investment funds use tools from all fields of numerical analysis to attempt to calculate the value of stocks and derivatives more precisely than other market participants. Airlines use sophisticated optimization algorithms to decide ticket prices, airplane and crew assignments and fuel needs. Historically, such algorithms were developed within the overlapping field of operations research . Insurance companies use numerical programs for actuarial analysis. The rest of this section outlines several important themes of numerical analysis. History  edit  The field of numerical analysis predates the invention of modern computers by many centuries. Linear interpolation was already in use more than 2000 years ago. Many great mathematicians of the past were preoccupied by numerical analysis, as is obvious from the names of important algorithms like Newtons method , Lagrange interpolation polynomial , Gaussian elimination , or Eulers method . To facilitate computations by hand, large books were produced with formulas and tables of data such as interpolation points and function coefficients. Using these tables, often calculated out to 16 decimal places or more for some functions, one could look up values to plug into the formulas given and achieve very good numerical estimates of some functions. The canonical work in the field is the NIST publication edited by Abramowitz and Stegun , a 1000-plus page book of a very large number of commonly used formulas and functions and their values at many points. The function values are no longer very useful when a computer is available, but the large listing of formulas can still be very handy. The mechanical calculator was also developed as a tool for hand computation. These calculators evolved into electronic computers in the 1940s, and it was then found that these computers were also useful for administrative purposes. But the invention of the computer also influenced the field of numerical analysis, since now longer and more complicated calculations could be done. Direct and iterative methods  edit  Direct vs iterative methods Consider the problem of solving 3 x 3  4  28 for the unknown quantity x . Direct method 3 x 3  4  28. Subtract 4 3 x 3  24. Divide by 3 x 3   8. Take cube roots x   2. For the iterative method, apply the bisection method to f  x   3 x 3  24. The initial values are a  0, b  3, f  a   24, f  b   57. Iterative method a b mid f mid 0 3 1.5 13.875 1.5 3 2.25 10.17... 1.5 2.25 1.875 4.22... 1.875 2.25 2.0625 2.32... From this table it can be concluded that the solution is between 1.875 and 2.0625. The algorithm might return any number in that range with an error less than 0.2. Discretization and numerical integration  edit  In a two-hour race, the speed of the car is measured at three instants and recorded in the following table. Time 020 100 140 kmh 140 150 180 A discretization would be to say that the speed of the car was constant from 000 to 040, then from 040 to 120 and finally from 120 to 200. For instance, the total distance traveled in the first 40 minutes is approximately  23  h      140  kmh      93.3  km . This would allow us to estimate the total distance traveled as 93.3  km  100  km  120  km  313.3  km , which is an example of numerical integration see below using a Riemann sum , because displacement is the integral of velocity. Ill-conditioned problem Take the function f  x   1 x     1 . Note that f 1.1  10 and f 1.001  1000 a change in x of less than 0.1 turns into a change in f  x  of nearly 1000. Evaluating f  x  near x  1 is an ill-conditioned problem. Well-conditioned problem By contrast, evaluating the same function f  x   1 x     1 near x  10 is a well-conditioned problem. For instance, f 10  19  0.111 and f 11  0.1 a modest change in x leads to a modest change in f  x . Direct methods compute the solution to a problem in a finite number of steps. These methods would give the precise answer if they were performed in infinite precision arithmetic . Examples include Gaussian elimination , the QR factorization method for solving systems of linear equations , and the simplex method of linear programming . In practice, finite precision is used and the result is an approximation of the true solution assuming stability . In contrast to direct methods, iterative methods are not expected to terminate in a finite number of steps. Starting from an initial guess, iterative methods form successive approximations that converge to the exact solution only in the limit. A convergence test, often involving the residual , is specified in order to decide when a sufficiently accurate solution has hopefully been found. Even using infinite precision arithmetic these methods would not reach the solution within a finite number of steps in general. Examples include Newtons method, the bisection method , and Jacobi iteration . In computational matrix algebra, iterative methods are generally needed for large problems. Iterative methods are more common than direct methods in numerical analysis. Some methods are direct in principle but are usually used as though they were not, e.g. GMRES and the conjugate gradient method . For these methods the number of steps needed to obtain the exact solution is so large that an approximation is accepted in the same manner as for an iterative method. Discretization  edit  Furthermore, continuous problems must sometimes be replaced by a discrete problem whose solution is known to approximate that of the continuous problem this process is called  discretization . For example, the solution of a differential equation is a function . This function must be represented by a finite amount of data, for instance by its value at a finite number of points at its domain, even though this domain is a continuum . Generation and propagation of errors  edit  The study of errors forms an important part of numerical analysis. There are several ways in which error can be introduced in the solution of the problem. Round-off  edit  Round-off errors arise because it is impossible to represent all real numbers exactly on a machine with finite memory which is what all practical digital computers are. Truncation and discretization error  edit  Truncation errors are committed when an iterative method is terminated or a mathematical procedure is approximated, and the approximate solution differs from the exact solution. Similarly, discretization induces a discretization error because the solution of the discrete problem does not coincide with the solution of the continuous problem. For instance, in the iteration in the sidebar to compute the solution of 3 x 3  4  28 displaystyle 3x3428 , after 10 or so iterations, it can be concluded that the root is roughly 1.99 for example. Therefore, there is a truncation error of 0.01. Once an error is generated, it will generally propagate through the calculation. For instance, already noted is that the operation  on a calculator or a computer is inexact. It follows that a calculation of the type a  b  c  d  e displaystyle abcde is even more inexact. The truncation error is created when a mathematical procedure is approximated. To integrate a function exactly it is required to find the sum of infinite trapezoids, but numerically only the sum of only finite trapezoids can be found, and hence the approximation of the mathematical procedure. Similarly, to differentiate a function, the differential element approaches zero but n umerically only a finite value of the differential element can be chosen. Numerical stability and well-posed problems  edit  Numerical stability is a notion in numerical analysis. An algorithm is called numerically stable if an error, whatever its cause, does not grow to be much larger during the calculation. This happens if the problem is  well-conditioned , meaning that the solution changes by only a small amount if the problem data are changed by a small amount. To the contrary, if a problem is ill-conditioned, then any small error in the data will grow to be a large error. Both the original problem and the algorithm used to solve that problem can be well-conditioned or ill-conditioned, and any combination is possible. So an algorithm that solves a well-conditioned problem may be either numerically stable or numerically unstable. An art of numerical analysis is to find a stable algorithm for solving a well-posed mathematical problem. For instance, computing the square root of 2 which is roughly 1.41421 is a well-posed problem. Many algorithms solve this problem by starting with an initial a pproximation x 0 to 2 displaystyle sqrt 2 , for instance x 0  1.4, and then computing improved guesses x 1 , x 2 , etc. One such method is the famous Babylonian method , which is given by x k 1  x k 2  1 x k . Another method, called method X, is given by x k 1   x k 2  2 2  x k . note 1  A few iterations of each scheme are calculated in table form below, with initial guesses x 0  1.4 and x 0  1.42. Babylonian Babylonian Method X Method X x 0  1.4 x 0  1.42 x 0  1.4 x 0  1.42 x 1  1.4142857... x 1  1.41422535... x 1  1.4016 x 1  1.42026896 x 2  1.414213564... x 2  1.41421356242... x 2  1.4028614... x 2  1.42056... ... ... x 1000000  1.41421... x 27  7280.2284... Observe that the Babylonian method converges quickly regardless of the initial guess, whereas Method X converges extremely slowly with initial guess x 0  1.4 and diverges for initial guess x 0  1.42. Hence, the Babylonian method is numerically stable, while Method X is numerically unstable. Numerical stability is affected by the number of the significant digits the machine keeps on, if a machine is used that keeps only the four most significant decimal digits, a good example on loss of significance can be given by these two equivalent functions f  x   x  x  1  x   and   g  x   x x  1  x . displaystyle fxxleftsqrt x1-sqrt xrighttext and gxfrac xsqrt x1sqrt x. Comparing the results of f  500   500  501  500   500  22.38  22.36   500  0.02   10 displaystyle f500500leftsqrt 501-sqrt 500right500left22.38-22.36right5000.0210 and g  500   500 501  500  500 22.38  22.36  500 44.74  11.17 displaystyle beginalignedat3g500 frac 500sqrt 501sqrt 500 frac 50022.3822.36 frac 50044.7411.17endalignedat by comparing the two results above, it is clear that loss of significance caused here by catastrophic cancelation has a huge effect on the results, even though both functions are equivalent, as shown below f  x   x  x  1  x   x  x  1  x  x  1  x x  1  x  x  x  1  2   x  2 x  1  x  x x  1  x x  1  x  x 1 x  1  x  x x  1  x  g  x  displaystyle beginalignedat4fx xleftsqrt x1-sqrt xright xleftsqrt x1-sqrt xrightfrac sqrt x1sqrt xsqrt x1sqrt x xfrac sqrt x12-sqrt x2sqrt x1sqrt x xfrac x1-xsqrt x1sqrt x xfrac 1sqrt x1sqrt x frac xsqrt x1sqrt x gxendalignedat The desired value, computed using infinite precision, is 11.174755... The example is a modification of one taken from Mathew Numerical methods using Matlab, 3rd ed. Areas of study  edit  The field of numerical analysis includes many sub-disciplines. Some of the major ones are Computing values of functions  edit  Interpolation Observing that the temperature varies from 20 degrees Celsius at 100 to 14 degrees at 300, a linear interpolation of this data would conclude that it was 17 degrees at 200 and 18.5 degrees at 130pm. Extrapolation If the gross domestic product of a country has been growing an average of 5 per year and was 100 billion last year, it might extrapolated that it will be 105 billion this year. Regression In linear regression, given n points, a line is computed that passes as close as possible to those n points. Optimization Say lemonade is sold at a lemonade stand , at 1 197 glasses of lemonade can be sold per day, and that for each increase of 0.01, one glass of lemonade less will be sold per day. If 1.485 could be charged, profit would be maximized but due to the constraint of having to charge a whole cent amount, charging 1.48 or 1.49 per glass will both yield the maximum income of 220.52 per day. Differential equation If 100 fans are set up to blow air from one end of the room to the other and then a feather isdropped into the wind, what happens The feather will follow the air currents, which may be very complex. One approximation is to measure the speed at which the air is blowing near the feather every second, and advance the simulated feather as if it were moving in a straight line at that same speed for one second, before measuring the wind speed again. This is called the Euler method for solving an ordinary differential equation. One of the simplest problems is the evaluation of a function at a given point. The most straightforward approach, of just plugging in the number in the formula is sometimes not very efficient. For polynomials, a better approach is using the Horner scheme , since it reduces the necessary number of multiplications and additions. Generally, it is important to estimate and control round-off errors arising from the use of floating point arithmetic. Interpolation, extrapolation, and regression  edit  Interpolation solves the following problem given the value of some unknown function at a number of points, what value does that function have at some other point between the given points Extrapolation is very similar to interpolation, except that now the value of the unknown function at a point which is outside the given points must be found. Regression is also similar, but it takes into account that the data is imprecise. Given some points, and a measurement of the value of some function at these points with an error, the unknown function can be found. The least squares -method is one way to achieve this. Solving equations and systems of equations  edit  Another fundamental problem is computing the solution of some given equation. Two cases are commonly distinguished, depending on whether the equation is linear or not. For instance, the equation 2 x  5  3 displaystyle 2x53 is linear while 2 x 2  5  3 displaystyle 2x253 is not. Much effort has been put in the development of methods for solving systems of linear equations . Standard direct methods, i.e., methods that use some matrix decomposition are Gaussian elimination , LU decomposition , Cholesky decomposition for symmetric or hermitian  and positive-definite matrix , and QR decomposition for non-square matrices. Iterative methods such as the Jacobi method , GaussSeidel method , successive over-relaxation and conjugate gradient method are usually preferred for large systems. General iterative methods can be developed using a matrix splitting . Root-finding algorithms are used to solve nonlinear equations they are so named since a root of a function is an argument for which the function yields zero. If the function is differentiable and the derivative is known, then Newtons method is a popular choice. Linearization is another technique for solving nonlinear equations. Solving eigenvalue or singular value problems  edit  Several important problems can be phrased in terms of eigenvalue decompositions or singular value decompositions . For instance, the spectral image compression algorithm 3  is based on the singular value decomposition. The corresponding tool in statistics is called principal component analysis . Optimization  edit  Main article Mathematical optimization Optimization problems ask for the point at which a given function is maximized or minimized. Often, the point also has to satisfy some constraints . The field of optimization is further split in several subfields, depending on the form of the objective function and the constraint. For instance, linear programming deals with the case that both the objective function and the constraints are linear. A famous method in linear programming is the simplex method. The method of Lagrange multipliers can be used to reduce optimization problems with constraints to unconstrained optimization problems. Evaluating integrals  edit  Main article Numerical integration Numerical integration, in some instances also known as numerical quadrature , asks for the value of a definite integral . Popular methods use one of the NewtonCotes formulas like the midpoint rule or Simpsons rule  or Gaussian quadrature . These methods rely on a divide and conquer strategy, whereby an integral on a relatively large set is broken down into integrals on smaller sets. In higher dimensions, where these methods become prohibitively expensive in terms of computational effort, one may use Monte Carlo or quasi-Monte Carlo methods see Monte Carlo integration , or, in modestly large dimensions, the method of sparse grids . Differential equations  edit  Main articles Numerical ordinary differential equations and Numerical partial differential equations Numerical analysis is also concerned with computing in an approximate way the solution of differential equations, both ordinary differential equations and partial differential equations. Partial differential equations are solved by first discretizing the equation, bringing it into a finite-dimensional subspace. This can be done by a finite element method , a finite difference method, or particularly in engineering a finite volume method . The theoretical justification of these methods often involves theorems from functional analysis . This reduces the problem to the solution of an algebraic equation. Software  edit  Main articles List of numerical analysis software and Comparison of numerical analysis software Since the late twentieth century, most algorithms are implemented in a variety of programming languages. The Netlib repository contains various collections of software routines for numerical problems, mostly in Fortran and C . Commercial products implementing many different numerical algorithms include the IMSL and NAG libraries a free-software alternative is the GNU Scientific Library . There are several popular numerical computing applications such as MATLAB , TK Solver , S-PLUS , and IDL as well as free and open source alternatives such as FreeMat , Scilab , GNU Octave similar to Matlab, and IT a C library. There are also programming languages such as R similar to S-PLUS and Python with libraries such as NumPy , SciPy and SymPy . Performance varies widely while vector and matrix operations are usually fast, scalar loops may vary in speed by more than an order of magnitude. 4  5  Many computer algebra systems such as Mathematica also benefit from the availability of arbitrary-precision arithmetic which can provide more accurate results. Also, any spreadsheet software can be used to solve simple problems relating to numerical analysis. See also  edit  Analysis of algorithms Computational science Interval arithmetic List of numerical analysis topics Numerical differentiation Numerical Recipes Symbolic-numeric computation Validated numerics Notes  edit   This is a fixed point iteration for the equation x   x 2  2  2  x  f  x  displaystyle xx2-22xfx , whose solutions include 2 displaystyle sqrt 2 . The iterates always move to the right since f  x   x displaystyle fxgeq x . Hence x 1  1.4  2 displaystyle x_11.4 sqrt 2 converges and x 1  1.42  2 displaystyle x_11.42 sqrt 2 diverges. References  edit  Citations  edit   Photograph, illustration, and description of the root2 tablet from the Yale Babylonian Collection  The New Zealand Qualification authority specifically mentions this skill in document 13004 version 2, dated 17 October 2003 titled CARPENTRY THEORY Demonstrate knowledge of setting out a building  The Singular Value Decomposition and Its Applications in Image Compression Archived 4 October 2006 at the Wayback Machine  Speed comparison of various number crunching packages Archived 5 October 2006 at the Wayback Machine  Comparison of mathematical programs for data analysis Stefan Steinhaus, ScientificWeb.com Sources  edit  .mw-parser-output .refbeginfont-size90margin-bottom0.5em.mw-parser-output .refbegin-hanging-indentsullist-style-typenonemargin-left0.mw-parser-output .refbegin-hanging-indentsulli,.mw-parser-output .refbegin-hanging-indentsdlddmargin-left0padding-left3.2emtext-indent-3.2emlist-stylenone.mw-parser-output .refbegin-100font-size100 Golub, Gene H.  Charles F. Van Loan 1986. Matrix Computations 3rd ed.. Johns Hopkins University Press. ISBN   0-8018-5413-X . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-positionright .1em ce nter.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-outpu t .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em Higham, Nicholas J. 1996. Accuracy and Stability of Numerical Algorithms . Society for Industrial and Applied Mathematics. ISBN   0-89871-355-2 . Hildebrand, F. B. 1974. Introduction to Numerical Analysis 2nd ed.. McGraw-Hill. ISBN   0-07-028761-9 . Leader, Jeffery J. 2004. Numerical Analysis and Scientific Computation . Addison Wesley. ISBN   0-201-73499-0 . Wilkinson, J.H. 1965. The Algebraic Eigenvalue Problem . Clarendon Press. Kahan, W. 1972. A survey of error-analysis . Proc. IFIP Congress 71 in Ljubljana. Info. Processing 71 . vol. 2. Amsterdam North-Holland Publishing. pp.  121439. examples of the importance of accurate arithmetic. Trefethen, Lloyd N. 2006. Numerical analysis , 20 pages. In Timothy Gowers and June Barrow-Green editors, Princeton Companion of Mathematics , Princeton University Press. External links  edit  Numerical analysis at Wikipedias sister projects Media from Wikimedia Commons Quotations from Wikiquote Textbooks from Wikibooks Journals  edit  gdz.sub.uni-goettingen , Numerische Mathematik , volumes 1-66, Springer, 1959-1994 searchable pages are images. in English in German springerlink.com , Numerische Mathematik , volumes 1-112, Springer, 19592009 SIAM Journal on Numerical Analysis , volumes 1-47, SIAM, 19642009 Online texts  edit  Hazewinkel, Michiel , ed. 2001 1994, Numerical analysis , Encyclopedia of Mathematics , Springer ScienceBusiness Media B.V.  Kluwer Academic Publishers, ISBN   978-1-55608-010-4 Numerical Recipes , William H. Press free, downloadable previous editions First Steps in Numerical Analysis  archived , R.J.Hosking, S.Joe, D.C.Joyce, and J.C.Turner CSEP Computational Science Education Project , U.S. Department of Energy Online course material  edit  Numerical Methods , Stuart Dalziel University of Cambridge Lectures on Numerical Analysis , Dennis Deturck and Herbert S. Wilf University of Pennsylvania Numerical methods , John D. Fenton University of Karlsruhe Numerical Methods for Physicists , Anthony OHare Oxford University Lectures in Numerical Analysis  archived , R. Radok Mahidol University Introduction to Numerical Analysis for Engineering , Henrik Schmidt Massachusetts Institute of Technology Numerical Analysis for Engineering , D. W. Harder University of Waterloo v t e Areas of mathematics Foundations Category theory Information theory Mathematical logic Philosophy of mathematics Set theory Algebra Abstract Elementary Linear Multilinear Analysis Calculus Real analysis Complex analysis Differential equations Functional analysis Discrete Combinatorics Graph theory Order theory Game theory Geometry Algebraic Analytic Differential Discrete Euclidean Finite Number theory Arithmetic Algebraic number theory Analytic number theory Diophantine geometry Topology Algebraic Differential Geometric Applied Control theory Mathematical biology Mathematical chemistry Mathematical economics Mathematical finance Mathematical physics Mathematical psychology Mathematical statistics Probability Statistics Computational Computer science Theory of computation Numerical analysis Optimization Computer algebra Others History of mathematics Recreational mathematics Mathematics and art Mathematics education Category Portal Commons WikiProject v t e Branches of physics Divisions Theoretical Phenomenology Computational Experimental Applied Classical Classical mechanics Continuum Solid Fluid Acoustics Electrodynamics Electrostatics Magnetostatics Plasma physics Accelerator physics Statistical mechanics Thermodynamics Condensed matter Materials Mesoscopic Polymers Soft Solid-state Modern Quantum mechanics Quantum electrodynamics Quantum field theory Quantum gravity Quantum information Relativity General Special Particle physics Astroparticle Nuclear Quantum chromodynamics Atomic, molecular and optical physics Atomic physics Molecular physics Optics Photonics Quantum optics Cosmology Astrophysics Nuclear Celestial mechanics Solar Heliophysics Space physics Interdisciplinary Biophysics Agrophysics Medical Neurophysics Engineering Geophysics Atmospheric Cloud Materials science Mathematical physics Physical chemistry Chemical physics Quantum computing Social physics Econophysics See also History of physics Nobel Prize in Physics Timeline of physics discoveries Theory of everything v t e Computer science Note This template roughly follows the 2012 ACM Computing Classification System . Hardware Printed circuit board Peripheral Integrated circuit Very Large Scale Integration Systems on Chip SoCs Energy consumption Green computing Electronic design automation Hardware acceleration Computer systems organization Computer architecture Embedded system Real-time computing Dependability Networks Network architecture Network protocol Network components Network scheduler Network performance evaluation Network service Software organization Interpreter Middleware Virtual machine Operating system Software quality Software notations and tools Programming paradigm Programming language Compiler Domain-specific language Modeling language Software framework Integrated development environment Software configuration management Software library Software repository Software development Software development process Requirements analysis Software design Software construction Software deployment Software maintenance Programming team Open-source model Theory of computation Model of computation Formal language Automata theory Computational complexity theory Logic Semantics Algorithms Algorithm design Analysis of algorithms Algorithmic efficiency Randomized algorithm Computational geometry Mathematics of computing Discrete mathematics Probability Statistics Mathematical software Information theory Mathematical analysis Numerical analysis Information systems Database management system Information storage systems Enterprise information system Social information systems Geographic information system Decision support system Process control system Multimedia information system Data mining Digital library Computing platform Digital marketing World Wide Web Information retrieval Security Cryptography Formal methods Security services Intrusion detection system Hardware security Network security Information security Application security Humancomputer interaction Interaction design Social computing Ubiquitous computing Visualization Accessibility Concurrency Concurrent computing Parallel computing Distributed computing Multithreading Multiprocessing Artificial intelligence Natural language processing Knowledge representation and reasoning Computer vision Automated planning and scheduling Search methodology Control method Philosophy of artificial intelligence Distributed artificial intelligence Machine learning Supervised learning Unsupervised learning Reinforcement learning Multi-task learning Cross-validation Graphics Animation Rendering Image manipulation Graphics processing unit Mixed reality Virtual reality Image compression Solid modeling Applied computing E-commerce Enterprise software Computational mathematics Computational physics Computational chemistry Computational biology Computational social science Computational engineering Computational healthcare Digital art Electronic publishing Cyberwarfare Electronic voting Video games Word processing Operations research Educational technology Document management Book Category Portal Outline WikiProject Commons Authority control GND  4042805-9 Retrieved from  httpsen.wikipedia.orgwindex.phptitleNumerical_analysis oldid912472251  Categories  Numerical analysis Mathematical physics Computational science Hidden categories Webarchive template wayback links Articles to be merged from January 2019 All articles to be merged Articles lacking in-text citations from November 2013 All articles lacking in-text citations Use dmy dates from July 2012 CS1 long volume value Articles with German-language external links Wikipedia articles with GND identifiers