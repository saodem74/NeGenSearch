Software design description From Wikipedia, the free encyclopedia Jump to navigation Jump to search See also Game design document This article needs additional citations for verification . Please help improve this article by adding citations to reliable sources . Unsourced material may be challenged and removed. Find sources   Software design description     news    newspapers    books    scholar    JSTOR  September 2014   Learn how and when to remove this template message  IEEE software life cycle SQA  Software quality assurance IEEE 730 SCM  Software configuration management IEEE 828 STD  Software test documentation IEEE 829 SRS  Software requirements specification IEEE 830 V V  Software verification and validation IEEE 1012 SDD  Software design description IEEE 1016 SPM  Software project management IEEE 1058 SUD  Software user documentation IEEE 1063 v t e A software design description a.k.a. software design document or SDD  just design document  also Software Design Specification  is a written description of a software product, that a software designer writes in order to give a software development team overall guidance to the architecture of the software project. An SDD usually accompanies an architecture diagram with pointers to detailed feature specifications of smaller pieces of the design. Practically, the description is required to coordinate a large team under a single vision, needs to be a stable reference, and outline all parts of the software and how they will work. Contents 1 Composition 2 IEEE 1016 3 See also 4 References 5 External links Composition  edit  The SDD usually contains the following information The data design describes structures that reside within the software. Attributes and relationships between data objects dictate the choice of data structures . The architecture design uses information flowing characteristics, and maps them into the program structure. The transformation mapping method is applied to exhibit distinct boundaries between incoming and outgoing data. The data flow diagrams allocate control input, processing and output along three separate modules. The interface design describes internal and external program interfaces, as well as the design of the human interface . Internal and external interface designs are based on the information obtained from the analysis model. The procedural design describes structured programming concepts using graphical, tabular and textual notations. These design mediums enable the designer to represent procedural detail, that facilitates translation to code. This blueprint for implementation forms the basis for all subsequent software engineering work. IEEE 1016  edit  IEEE 1016-2009 , titled IEEE Standard for Information TechnologySystems DesignSoftware Design Descriptions , 1  is an IEEE standard that specifies the required information content and organization for an SDD. 2  IEEE 1016 does not specify the medium of an SDD it is applicable to automated databases and design description languages but can be used for paper documents and other means of descriptions. 3  The 2009 edition was a major revision to IEEE 1016-1998, elevating it from recommended practice to full standard. This revision was modeled after IEEE Std 1471-2000 , Recommended Practice for Architectural Description of Software-intensive Systems , extending the concepts of view, viewpoint, stakeholder, and concern from architecture description to support documentation of high-level and detailed design and construction of software. IEEE 1016, Introduction  Following the IEEE 1016 conceptual model, an SDD is organized into one or more design views. Each design view follows the conventions of its design viewpoint. IEEE 1016 defines the following design viewpoints for use 4  Context viewpoint Composition viewpoint Logical viewpoint Dependency viewpoint Information viewpoint Patterns use viewpoint Interface viewpoint Structure viewpoint Interaction viewpoint State dynamics viewpoint Algorithm viewpoint Resource viewpoint In addition, users of the standard are not limited to these viewpoints but may define their own. 5  See also  edit  Game design document High-level design Low-level design References  edit   IEEE Standard for Information Technology  Systems Design  Software Design Descriptions . IEEE. 2009-07-20 . Retrieved 2014-07-06 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-positionright .1em ce nter.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-outpu t .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em  IEEE 1016, Abstract .  IEEE 1016, Abstract .  IEEE 1016, Clause 5.  IEEE 1016, sub-clause 4.5. External links  edit  IEEE 1016 website v t e Design Outline Portal Designer Disciplines Communication design Advertising Book design Corporate design Exhibit design Film title design Graphic design Motion Postage stamp design Print design Illustration Information design Instructional design News design Photography Retail design Signage   Traffic sign design Typography   Type design Video design Visual merchandising Environmental design Architecture Architectural lighting design Building design Passive solar Ecological design Environmental impact design Garden design Computer-aided Healthy community design Hotel design Interior architecture Interior design EID Keyline design Landscape architecture Sustainable Landscape design Spatial design Urban design Industrial design Automotive design Automotive suspension design CMF design Corrugated box design Electric guitar design Furniture design Sustainable Hardware interface design Motorcycle design Packaging and labeling Photographic lens design Product design Production design Sensory design Service design Interaction design Experience design EED Game design Level design Video game design Hardware interface design Icon design Immersive design Information design Sonic interaction design User experience design User interface design Web design Other applied arts Public art design Ceramic   glass design Fashion design Costume design Jewelry design Floral design Game art design Property design Scenic design Sound design Stageset lighting design Textile design Other design  engineering Algorithm design Behavioural design Boiler design Database design Drug design Electrical system design Experimental design Filter design Geometric design Job design Integrated circuit design Circuit design Physical design Power network design Mechanism design Nuclear weapon design Nucleic acid design Organization design Process design Processor design Protein design Research design Social design Software design Spacecraft design Strategic design Systems design Approaches Activity-centered Adaptive web Affective Brainstorming By committee By contract C-K theory Closure Co-design Concept-oriented Configuration Contextual Continuous Cradle-to-cradle Creative problem-solving Creativity techniques Critical Design fiction Defensive Designbidbuild Designbuild architect-led Domain-driven Ecodesign Energy neutral Engineering design process Probabilistic design Error-tolerant Fault-tolerant Framework-oriented For assembly For behaviour change For manufacturability For Six Sigma For testing For X Functional Generative Geodesign HCD High-level Inclusive Integrated Integrated topside Intelligence-based Iterative KISS principle Low-level Metadesign Mind mapping Modular New Wave Object-oriented Open Parametric Participatory Platform-based Policy-based Process-centered Public interest Rational Regenerative Reliability engineering Research-based Responsibility-driven RWD Safe-life Sustainable Systemic SOD Tableless web Theory of constraints Top-down and bottom-up Transformation Transgenerational TRIZ Universal Design for All Usage-centered Use-centered User-centered Empathic User innovation Value-driven Value sensitive Privacy by Design choice computing controls flow leadership management marker methods pattern research science sprint strategy theory thinking Tools Intellectual property Organizations Awards Tools AAD Architectural model Blueprint Comprehensive layout CAD CAID Virtual home design software CAutoD Design quality indicator Electronic design automation Flowchart Mockup Product design specification Prototype Sketch Storyboard Technical drawing Web design program Website wireframe Intellectual property Community design Design around Design patent Fashion design copyright Geschmacksmuster Industrial design rights European Union Organizations AIGA Chartered Society of Designers Design and Industries Association Design Council International Forum Design The Design Society Design Research Society Awards European Design Award German Design Award Good Design Award Chicago Good Design Award Japan Graphex IF product design award James Dyson Award Prince Philip Designers Prize Related topics Aesthetics Agile Concept art Conceptual design Creative industries Cultural icon .design Enterprise architecture Futures studies Indie design Innovation Management Intelligent design Lean Startup New product development OODA Loop Philosophy of design Process simulation Slow design STEAM fields Unintelligent design Visualization Wicked problem Design brief change classic competition architectural student director education elements and principles engineer firm history knowledge language life load museum paradigm rationale review specification studio technology Commons Wikibooks Wikinews Wikiquote Wikisource Wiktionary v t e IEEE standards Current 488 730 754 Revision 854 828 829 896 1003 1014 1016 1076 1149.1 1154 1164 1275 1278 1284 1355 1394 1451 1497 1516 1541 1547 1584 1588 1596 1603 1613 1666 1667 1675 1685 1722 1733 1800 1801 1815 1850 1900 1901 1902 1904 1905 2030 2050 11073 12207 14764 16085 16326 29148 42010 802 series 802.1 D p Q Qat Qay w X ab ad AE ag ah ak aq AS ax az BA 802.3 -1983 a b d e i j u x y z ab ac ad ae af ah ak an aq at av az ba bt by 802.11 legacy mode a b c d e f g h i j k n p r s u v w y ac ad af ah ai ax ay .2 .4 .5 .6 .7 .8 .9 .10 .12 .14 .15 .1 .4 .4a .6 .16 Original  d  e .17 .18 .20 .21 .22 Proposed P1363 P1619 P1699 P1823 P1906.1 Superseded 754-1985 830 1219 1233 1362 1364 1471 See also IEEE Standards Association CategoryIEEE standards Retrieved from  httpsen.wikipedia.orgwindex.phptitleSoftware_design_description oldid902436806  Categories  Software design Software documentation IEEE standards Hidden categories Articles needing additional references from September 2014 All articles needing additional references