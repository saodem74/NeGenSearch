Rendering computer graphics From Wikipedia, the free encyclopedia Jump to navigation Jump to search For 3-dimensional rendering, see 3D rendering . For rendering of HTML, see browser engine . The process of generating an image from a model A variety of rendering techniques applied to a single 3D scene An image created by using POV-Ray 3.6 Rendering or image synthesis is the automatic process of generating a photorealistic or non-photorealistic image from a 2D or 3D model or models in what collectively could be called a scene file by means of computer programs . Also, the results of displaying such a model can be called a render . A scene file contains objects in a strictly defined language or data structure  it would contain geometry, viewpoint, texture , lighting , and shading information as a description of the virtual scene. The data contained in the scene file is then passed to a rendering program to be processed and output to a digital image or raster graphics image file. The term rendering may be by analogy with an artists rendering of a scene. Though the technical details of rendering methods vary, the general challenges to overcome in producing a 2D image from a 3D representation stored in a scene file are outlined as the graphics pipeline along a rendering device, such as a GPU . A GPU is a purpose-built device able to assist a CPU in performing complex rendering calculations. If a scene is to look relatively realistic and predictable under virtual lighting, the rendering software should solve the rendering equation . The rendering equation doesnt account for all lighting phenomena, but is a general lighting model for computer-generated imagery. Rendering is also used to describe the process of calculating effects in a video editing program to produce final video output. Rendering is one of the major sub-topics of 3D computer graphics , and in practice is always connected to the others. In the graphics pipeline , it is the last major step, giving the final appearance to the models and animation. With the increasing sophistication of computer graphics since the 1970s, it has become a more distinct subject. Rendering has uses in architecture , video games , simulators , movie or TV visual effects , and design visualization, each employing a different balance of features and techniques. As a product, a wide variety of renderers are available. Some are integrated into larger modeling and animation packages, some are stand-alone, some are free open-source projects. On the inside, a renderer is a carefully engineered program, based on a selective mixture of disciplines rela ted to light physics , visual perception , mathematics , and software development . In the case of 3D graphics, rendering may be done slowly, as in pre-rendering , or in realtime. Pre-rendering is a computationally intensive process that is typically used for movie creation, while real-time rendering is often done for 3D video games which rely on the use of graphics cards with 3D hardware accelerators . Contents 1 Usage 2 Features 3 Techniques 3.1 Scanline rendering and rasterisation 3.2 Ray casting 3.3 Ray tracing 4 Radiosity 5 Sampling and filtering 6 Optimization 7 Academic core 7.1 The rendering equation 7.2 The bidirectional reflectance distribution function 7.3 Geometric optics 7.4 Visual perception 8 Chronology of important published ideas 9 See also 10 References 11 Further reading 12 External links Usage  edit  When the pre-image a wireframe sketch usually is complete, rendering is used, which adds in bitmap textures or procedural textures , lights, bump mapping and relative position to other objects. The result is a completed image the consumer or intended viewer sees. For movie animations, several images frames must be rendered, and stitched together in a program capable of making an animation of this sort. Most 3D image editing programs can do this. Features  edit  A rendered image can be understood in terms of a number of visible features. Rendering research and development has been largely motivated by finding ways to simulate these efficiently. Some relate directly to particular algorithms and techniques, while others are produced together. Shading    how the color and brightness of a surface varies with lighting Texture-mapping    a method of applying detail to surfaces Bump-mapping    a method of simulating small-scale bumpiness on surfaces Foggingparticipating medium    how light dims when passing through non-clear atmosphere or air Shadows    the effect of obstructing light Soft shadows    varying darkness caused by partially obscured light sources Reflection    mirror-like or highly glossy reflection Transparency optics , transparency graphic or opacity    sharp transmission of light through solid objects Translucency    highly scattered transmission of light through solid objects Refraction    bending of light associated with transparency Diffraction    bending, spreading, and interference of light passing by an object or aperture that disrupts the ray Indirect illumination    surfaces illuminated by light reflected off other surfaces, rather than directly from a light source also known as global illumination Caustics a form of indirect illumination    reflection of light off a shiny object, or focusing of light through a transparent object, to produce bright highlights on another object Depth of field    objects appear blurry or out of focus when too far in front of or behind the object in focus Motion blur    objects appear blurry due to high-speed motion, or the motion of the camera Non-photorealistic rendering    rendering of scenes in an artistic style, intended to look like a painting or drawing Techniques  edit  Many rendering algorithms have been researched, and software used for rendering may employ a number of different techniques to obtain a final image. Tracing every particle of light in a scene is nearly always completely impractical and would take a stupendous amount of time. Even tracing a portion large enough to produce an image takes an inordinate amount of time if the sampling is not intelligently restricted. Therefore, a few loose families of more-efficient light transport modelling techniques have emerged rasterization , including scanline rendering , geometrically projects objects in the scene to an image plane, without advanced optical effects ray casting considers the scene as observed from a specific point of view, calculating the observed image based only on geometry and very basic optical laws of reflection intensity, and perhaps using Monte Carlo techniques to reduce artifacts ray tracing is similar to ray casting, but employs more advanced optical simulation, and usually uses Monte Carlo techniques to obtain more realistic results at a speed that is often orders of magnitude faster. The fourth type of light transport technique, radiosity is not usually implemented as a rendering technique, but instead calculates the passage of light as it leaves the light source and illuminates surfaces. These surfaces are usually rendered to the display using one of the other three techniques. Most advanced software combines two or more of the techniques to obtain good-enough results at reasonable cost. Another distinction is between image order algorithms, which iterate over pixels of the image plane, and object order algorithms, which iterate over objects in the scene. Generally object order is more efficient, as there are usually fewer objects in a scene than pixels. Scanline rendering and rasterisation  edit  Main article Rasterisation Rendering of the European Extremely Large Telescope . A high-level representation of an image necessarily contains elements in a different domain from pixels. These elements are referred to as primitive s . In a schematic drawing, for instance, line segments and curves might be primitives. In a graphical user interface, windows and buttons might be the primitives. In rendering of 3D models, triangles and polygons in space might be primitives. If a pixel-by-pixel image order approach to rendering is impractical or too slow for some task, then a primitive-by-primitive object order approach to rendering may prove useful. Here, one loops through each of the primitives, determines which pixels in the image it affects, and modifies those pixels accordingly. This is called rasterization , and is the rendering method used by all current graphics cards . Rasterization is frequently faster than pixel-by-pixel rendering. First, large areas of the image may be empty of primitives rasterization will ignore these areas, but pixel-by-pixel rendering must pass through them. Second, rasterization can improve cache coherency and reduce redundant work by taking advantage of the fact that the pixels occupied by a single primitive tend to be contiguous in the image. For these reasons, rasterization is usually the approach of choice when interactive rendering is required however, the pixel-by-pixel approach can often produce higher-quality images and is more versatile because it does not depend on as many assumptions about the image as rasterization. The older form of rasterization is characterized by rendering an entire face primitive as a single color. Alternatively, rasterization can be done in a more complicated manner by first rendering the vertices of a face and then rendering the pixels of that face as a blending of the vertex colors. This version of rasterization has overtaken the old method as it allows the gra phics to flow without complicated textures a rasterized image when used face by face tends to have a very block-like effect if not covered in complex textures the faces are not smooth because there is no gradual color change from one primitive to the next. This newer method of rasterization utilizes the graphics cards more taxing shading functions and still achieves better performance because the simpler textures stored in memory use less space. Sometimes designers will use one rasterization method on some faces and the other method on others based on the angle at which that face meets other joined faces, thus increasing speed and not hurting the overall effect. Ray casting  edit  Main article Ray casting This section does not cite any sources . Please help improve this section by adding citations to reliable sources . Unsourced material may be challenged and removed .  May 2010   Learn how and when to remove this template message  In ray casting the geometry which has been modeled is parsed pixel by pixel, line by line, from the point of view outward, as if casting rays out from the point of view. Where an object is intersected, the color value at the point may be evaluated using several methods. In the simplest, the color value of the object at the point of intersection becomes the value of that pixel. The color may be determined from a texture-map . A more sophisticated method is to modify the colour value by an illumination factor, but without calculating the relationship to a simulated light source. To reduce artifacts, a number of rays in slightly different directions may be averaged. Ray casting involves calculating the view direction from camera position, and incrementally following along that ray cast through solid 3d objects in the scene, while accumulating the resulting value from each point in 3D space. This is related and similar to ray tracing except that the raycast is usually not bounced off surfaces where the ray tracing indicates that it is tracing out the lights path including bounces. Ray casting implies that the light ray is following a straight path which may include travelling through semi-transparent objects. The ray cast is a vector that can originate from the camera or from the scene endpoint back to front, or front to back. Sometimes the final light value is a derived from a trans fer function and sometimes its used directly. Rough simulations of optical properties may be additionally employed a simple calculation of the ray from the object to the point of view is made. Another calculation is made of the angle of incidence of light rays from the light sources, and from these as well as the specified intensities of the light sources, the value of the pixel is calculated. Another simulation uses il lumination plotted from a radiosity algorithm, or a combination of these two. Ray tracing  edit  Spiral Sphere and Julia, Detail , a computer-generated image created by visual artist Robert W. McGregor using only POV-Ray 3.6 and its built-in scene description language. Main article Ray tracing graphics Ray tracing aims to simulate the natural flow of light, interpreted as particles. Often, ray tracing methods are utilized to approximate the solution to the rendering equation by applying Monte Carlo methods to it. Some of the most used methods are path tracing , bidirectional path tracing , or Metropolis light transport , but also semi realistic methods are in use, like Whitted Style Ray Tracing , or hybrids. While most implementations let light propagate on straight lines, applications exist to simulate relativistic spacetime effects. 1  In a final, production quality rendering of a ray traced work, multiple rays are generally shot for each pixel, and traced not just to the first object of intersection, but rather, through a number of sequential bounces, using the known laws of optics such as angle of incidence equals angle of reflection and more advanced laws that deal with refraction and surface roughness . Once the ray either encounters a light source, or more probably once a set limiting number of bounces has been evaluated, then the surface illumination at that final point is evaluated using techniques described above, and the changes along the way through the various bounces evaluated to estimate a value observed at the point of view. This is all repeated for each sample, for each pixel. In distribution ray tracing , at each point of intersection, multiple rays may be spawned. In path tracing , however, only a single ray or none is fired at each intersection, utilizing the statistical nature of Monte Carlo experiments. As a brute-force method, ray tracing has been too slow to consider for real-time, and until recently too slow even to consider for short films of any degree of quality, although it has been used for special effects sequences, and in advertising, where a short portion of high quality perhaps even photorealistic  footage is required. However, efforts at optimizing to reduce the number of calculations needed in portions of a work where detail is not high or does not depend on ray tracing features have led to a realistic possibility of wider use of ray tracing. There is now some hardware accelerated ray tracing equipment, at least in prototype phase, and some game demos which show use of real-time software or hardware ray tracing. Radiosity  edit  Main article Radiosity computer graphics Radiosity is a method which attempts to simulate the way in which directly illuminated surfaces act as indirect light sources that illuminate other surfaces. This produces more realistic shading and seems to better capture the  ambience  of an indoor scene. A classic example is the way that shadows hug the corners of rooms. The optical basis of the simulation is that some diffused light from a given point on a given surface is reflected in a large spectrum of directions and illuminates the area around it. The simulation technique may vary in complexity. Many renderings have a very rough estimate of radiosity, simply illuminating an entire scene very slightly with a factor known as ambiance. However, when advanced radiosity estimation is coupled with a high quality ray tracing algorithm, images may exhibit convincing realism, particularly for indoor scenes. In advanced radiosity simulation, recursive, finite-element algorithms bounce light back and forth between surfaces in the model, until some recursion limit is reached. The colouring of one surface in this way influences the colouring of a neighbouring surface, and vice versa. The resulting values of illumination throughout the model sometimes including for empty spaces are stored and used as additional inputs when performing calculations in a ray-casting or ray-tracing model. Due to the iterativerecursive nature of the technique, complex objects are particularly slow to emulate. Prior to the standardization of rapid radiosity calculation, some digital artists used a technique referred to loosely as false radiosity by darkening areas of texture maps corresponding to corners, joints and recesses, and applying them via self-illumination or diffuse mapping for scanline rendering. Even now, advanced radiosity calculations may be reserved for calculating the ambiance of the room, from the light reflecting off walls, floor and ceiling, without examining the contribution that complex objects ma ke to the radiosityor complex objects may be replaced in the radiosity calculation with simpler objects of similar size and texture. Radiosity calculations are viewpoint independent which increases the computations involved, but makes them useful for all viewpoints. If there is little rearrangement of radiosity objects in the scene, the same radiosity data may be reused for a number of frames, making radiosity an effective way to improve on the flatness of ray casting, without seriously impacting the overall rendering time-per-frame. Because of this, radiosity is a prime component of leading real-time rendering methods, and has been used from beginning-to-end to create a large number of well-known recent feature-length animated 3D-cartoon films. Sampling and filtering  edit  One problem that any rendering system must deal with, no matter which approach it takes, is the sampling problem . Essentially, the rendering process tries to depict a continuous function from image space to colors by using a finite number of pixels. As a consequence of the NyquistShannon sampling theorem or Kotelnikov theorem, any spatial waveform that can be displayed must consist of at least two pixels, which is proportional to image resolution . In simpler terms, this expresses the idea that an image cannot display details, peaks or troughs in color or intensity, that are smaller than one pixel. If a naive rendering algorithm is used without any filtering, high frequencies in the image function will cause ugly aliasing to be present in the final image. Aliasing typically manifests itself as jaggies , or jagged edges on objects where the pixel grid is visible. In order to remove aliasing, all rendering algorithms if they are to produce good-looking images must use some kind of low-pass filter on the image function to remove high frequencies, a process called antialiasing . Optimization  edit  Due to the large number of calculations, a work in progress is usually only rendered in detail appropriate to the portion of the work being developed at a given time, so in the initial stages of modeling, wireframe and ray casting may be used, even where the target output is ray tracing with radiosity. It is also common to render only parts of the scene at high detail, and to r emove objects that are not important to what is currently being developed. For real-time, it is appropriate to simplify one or more common approximations, and tune to the exact parameters of the scenery in question, which is also tuned to the agreed parameters to get the most bang for the buck. Academic core  edit  Main article Unbiased rendering The implementation of a realistic renderer always has some basic element of physical simulation or emulation  some computation which resembles or abstracts a real physical process. The term  physically based  indicates the use of physical models and approximations that are more general and widely accepted outside rendering. A particular set of related techniques have gradually become established in the rendering community. The basic concepts are moderately straightforward, but intractable to calculate and a single elegant algorithm or approach has been elusive for more general purpose renderers. In order to meet demands of robustness, accuracy and practicality, an implementation will be a complex combination of different techniques. Rendering research is concerned with both the adaptation of scientific models and their efficient application. The rendering equation  edit  Main article Rendering equation This is the key academictheoretical concept in rendering. It serves as the most abstract formal expression of the non-perceptual aspect of rendering. All more complete algorithms can be seen as solutions to particular formulations of this equation. L o  x , w    L e  x , w      f r  x , w   , w   L i  x , w     w    n   d w   displaystyle L_ox,vec wL_ex,vec wint _Omega f_rx,vec w,vec wL_ix,vec wvec wcdot vec nmathrm d vec w Meaning at a particular position and direction, the outgoing light L o  is the sum of the emitted light L e  and the reflected light. The reflected light being the sum of the incoming light L i  from all directions, multiplied by the surface reflection and incoming angle. By connecting outward light to inward light, via an interaction point, this equation stands for the whole light transport  all the movement of light  in a scene. The bidirectional reflectance distribution function  edit  The bidirectional reflectance distribution function BRDF expresses a simple model of light interaction with a surface as follows f r  x , w   , w    d L r  x , w   L i  x , w     w    n   d w   displaystyle f_rx,vec w,vec wfrac mathrm d L_rx,vec wL_ix,vec wvec wcdot vec nmathrm d vec w Light interaction is often approximated by the even simpler models diffuse reflection and specular reflection, although both can ALSO be BRDFs. Geometric optics  edit  Rendering is practically exclusively concerned with the particle aspect of light physics  known as geometrical optics . Treating light, at its basic level, as particles bouncing around is a simplification, but appropriate the wave aspects of light are negligible in most scenes, and are significantly more difficult to simulate. Notable wave aspect phenomena include diffraction as seen in the colours of CDs and DVDs  and polarisation as seen in LCDs . Both types of effect, if needed, are made by appearance-oriented adjustment of the reflection model. Visual perception  edit  Though it receives less attention, an understanding of human visual perception is valuable to rendering. This is mainly because image displays and human perception have restricted ranges. A renderer can simulate an almost infinite range of light brightness and color, but current displays  movie screen, computer monitor, etc.  cannot handle so much, and something must be discarded or compressed. Human perception also has limits, and so does not need to be given large-range images to create realism. This can help solve the problem of fitting images into displays, and, furthermore, suggest what short-cuts could be used in the rendering simulation, since certain subtleties wont be noticeable. This re lated subject is tone mapping . Mathematics used in rendering includes linear algebra , calculus , numerical mathematics , signal processing , and Monte Carlo methods . Rendering for movies often takes place on a network of tightly connected computers known as a render farm . The current  when  state of the art in 3-D image description for movie creation is the mental ray scene description language designed at mental images and RenderMan Shading Language designed at Pixar . 2  compare with simpler 3D fileformats such as VRML or APIs such as OpenGL and DirectX tailored for 3D hardware accelerators. Other renderers including proprietary ones can and are sometimes used, but most other renderers tend to miss one or more of the often needed features like good texture filtering, texture caching, programmable shaders, highend geometry types like hair, subdivision or nurbs surfaces with tesselation on demand, geometry caching, raytracing with geometry caching, high quality shadow mapping , speed or patent-free implementations. Other highly sought features these days may include interactive photorealistic rendering  IPR and hardware renderingshading. Some renderers execute on the GPU instead of the CPU e.g. FurryBall , Redshift, Octane. The parallelized nature of GPUs can be used for shorter render times. However, GPU renderers are constrained by the amount of video memory available. Chronology of important published ideas  edit  Rendering of an ESTCube-1 satellite 1968 Ray casting 3  1970 Scanline rendering 4  1971 Gouraud shading 5  1973 Phong shading 6  7  1973 Phong reflection 6  1973 Diffuse reflection 8  1973 Specular highlight 6  1973 Specular reflection 6  1974 Sprites 9  1974 Scrolling 9  1974 Texture mapping 10  1974 Z-buffering 10  1976 Environment mapping 11  1977 Blinn shading 12  1977 Side-scrolling 13  1977 Shadow volumes 14  1978 Shadow mapping 15  1978 Bump mapping 16  1979 Tile map 17  1980 BSP trees 18  1980 Ray tracing 19  1981 Parallax scrolling 20  1981 Sprite zooming 21  1981 Cook shader 22  1983 MIP maps 23  1984 Octree ray tracing 24  1984 Alpha compositing 25  1984 Distributed ray tracing 26  1984 Radiosity 27  1985 Rowcolumn scrolling 28  1985 Hemicube radiosity 29  1986 Light source tracing 30  1986 Rendering equation 31  1987 Reyes rendering 32  1988 Depth cue 33  1988 Distance fog 33  1988 Tiled rendering 33  1991 Xiaolin Wu line anti-aliasing 34  35  1991 Hierarchical radiosity 36  1993 Texture filtering 37  1993 Perspective correction 38  1993 Transform, clipping, and lighting 39  1993 Directional lighting 39  1993 Trilinear interpolation 39  1993 Z-culling 39  1993 OrenNayar reflectance 40  1993 Tone mapping 41  1993 Subsurface scattering 42  1994 Ambient occlusion 43  1995 Hidden surface determination 44  1995 Photon mapping 45  1996 Multisample anti-aliasing 46  1997 Metropolis light transport 47  1997 Instant Radiosity 48  1998 Hidden surface removal 49  2000 Pose space deformation 50  2002 Precomputed Radiance Transfer 51  See also  edit  2D computer graphics 3D computer graphics 3D rendering Artistic rendering Architectural rendering Chromatic aberration    Failure of a lens to focus all colors on the same point Displacement mapping Global illumination    Group of rendering algorithms used in 3D computer graphics Graphics pipeline Heightmap High-dynamic-range rendering Image-based modeling and rendering Motion blur Non-photorealistic rendering Normal mapping Painters algorithm Physically based rendering Pre-rendering Raster image processor Radiosity    Computer graphics rendering method using diffuse reflection Ray tracing    rendering method Real-time computer graphics Reyes Scanline renderingScanline algorithm    rendering method Software rendering Sprite computer graphics Unbiased rendering Vector graphics VirtualGL Virtual model Virtual studio Volume rendering Z-buffer algorithms References  edit   Relativistic Ray-Tracing Simulating the Visual Appearance of Rapidly Moving Objects. 1995. CiteSeerX   10.1.1.56.830 . Cite journal requires journal  help  .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation . cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-po sitionright .1em center.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno -repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-o utput .cs1-registration,.mw-parser-output .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em  Raghavachary, Saty 30 July 2006. A brief introduction to RenderMan . ACM SIGGRAPH 2006 Courses on - SIGGRAPH 06 . ACM. p.  2. doi  10.11451185657.1185817 . ISBN   978-1595933645 . Retrieved 7 May 2018  via dl.acm.org.  Appel, A. 1968. Some techniques for shading machine renderings of solids PDF . Proceedings of the Spring Joint Computer Conference . 32 . pp.  3749. Archived PDF from the original on 2012-03-13. Cite uses deprecated parameter deadurl  help   Bouknight, W. J. 1970. A procedure for generation of three-dimensional half-tone computer graphics presentations. Communications of the ACM . 13 9 527536. doi  10.1145362736.362739 .  Gouraud, H. 1971. Continuous shading of curved surfaces PDF . IEEE Transactions on Computers . 20 6 623629. doi  10.1109t-c.1971.223313 . Archived from the original PDF on 2010-07-02. Cite uses deprecated parameter deadurl  help   a b c d University of Utah School of Computing, httpwww.cs.utah.eduschoolhistoryphong-ref Archived 2013-09-03 at the Wayback Machine  Phong, B-T 1975. Illumination for computer generated pictures PDF . Communications of the ACM . 18 6 311316. CiteSeerX   10.1.1.330.4718 . doi  10.1145360825.360839 . Archived from the original PDF on 2012-03-27. Cite uses deprecated parameter deadurl  help   Bui Tuong Phong, Illumination for computer generated pictures Archived 2016-03-20 at the Wayback Machine , Communications of ACM 18 1975, no. 6, 311317.  a b Putas. The way to home 3d . vintage3d.org . Archived from the original on 15 December 2017 . Retrieved 7 May 2018 . Cite uses deprecated parameter deadurl  help   a b Catmull, E. 1974. A subdivision algorithm for computer display of curved surfaces PDF PhD thesis. University of Utah. Archived PDF from the original on 2014-11-14. Cite uses deprecated parameter deadurl  help   Blinn, J.F.  Newell, M.E. 1976. Texture and reflection in computer generated images. Communications of the ACM . 19 10 542546. CiteSeerX   10.1.1.87.8903 . doi  10.1145360349.360353 .  Blinn, James F. 20 July 1977. Models of light reflection for computer synthesized pictures. ACM SIGGRAPH Computer Graphics . 11 2 192198. doi  10.1145965141.563893  via dl.acm.org.  Bomber - Videogame by Sega . www.arcade-museum.com . Retrieved 7 May 2018 .  Crow, F.C. 1977. Shadow algorithms for computer graphics PDF . Computer Graphics Proceedings of SIGGRAPH 1977 . 11 . pp.  242248. Archived from the original PDF on 2012-01-13 . Retrieved 2011-07-15 . Cite uses deprecated parameter deadurl  help   Williams, L. 1978. Casting curved shadows on curved surfaces. Computer Graphics Proceedings of SIGGRAPH 1978 . 12 . pp.  270274. CiteSeerX   10.1.1.134.8225 .  Blinn, J.F. 1978. Simulation of wrinkled surfaces PDF . Computer Graphics Proceedings of SIGGRAPH 1978. 12 . pp.  286292. Archived PDF from the original on 2012-01-21. Cite uses deprecated parameter deadurl  help   Wolf, Mark J. P. 15 June 2012. Before the Crash Early Video Game History . Wayne State University Press. ISBN   978-0814337226 . Retrieved 7 May 2018  via Google Books.  Fuchs, H.  Kedem, Z.M.  Naylor, B.F. 1980. On visible surface generation by a priori tree structures . Computer Graphics Proceedings of SIGGRAPH 1980. 14 . pp.  124133. CiteSeerX   10.1.1.112.4406 .  Whitted, T. 1980. An improved illumination model for shaded display. Communications of the ACM . 23 6 343349. CiteSeerX   10.1.1.114.7629 . doi  10.1145358876.358882 .  Purcaru, Bogdan Ion 13 March 2014. Games vs. Hardware. The History of PC video games The 80s . Purcaru Ion Bogdan . Retrieved 7 May 2018  via Google Books.  System 16 - Sega VCO Object Hardware Sega . www.system16.com . Archived from the original on 5 April 2016 . Retrieved 7 May 2018 . Cite uses deprecated parameter deadurl  help   Cook, R.L.  Torrance, K.E. 1981. A reflectance model for computer graphics . Computer Graphics Proceedings of SIGGRAPH 1981. 15 . pp.  307316. CiteSeerX   10.1.1.88.7796 .  Williams, L. 1983. Pyramidal parametrics . Computer Graphics Proceedings of SIGGRAPH 1983. 17 . pp.  111. CiteSeerX   10.1.1.163.6298 .  Glassner, A.S. 1984. Space subdivision for fast ray tracing. IEEE Computer Graphics  Applications . 4 10 1522. doi  10.1109mcg.1984.6429331 .  Porter, T. Duff, T. 1984. Compositing digital images PDF . Computer Graphics Proceedings of SIGGRAPH 1984. 18 . pp.  253259. Archived PDF from the original on 2015-02-16. Cite uses deprecated parameter deadurl  help   Cook, R.L.  Porter, T. Carpenter, L. 1984. Distributed ray tracing PDF . Computer Graphics Proceedings of SIGGRAPH 1984. 18 . pp.  137145.  permanent dead link   Goral, C.  Torrance, K.E.  Greenberg, D.P.  Battaile, B. 1984. Modeling the interaction of light between diffuse surfaces . Computer Graphics Proceedings of SIGGRAPH 1984. 18 . pp.  213222. CiteSeerX   10.1.1.112.356 .  Archived copy . Archived from the original on 2016-03-04 . Retrieved 2016-08-08 . Cite uses deprecated parameter deadurl  help  CS1 maint archived copy as title  link   Cohen, M.F.  Greenberg, D.P. 1985. The hemi-cube a radiosity solution for complex environments PDF . Computer Graphics Proceedings of SIGGRAPH 1985. 19 . pp.  3140. doi  10.1145325165.325171 . Archived PDF from the original on 2014-04-24. Cite uses deprecated parameter deadurl  help   Arvo, J. 1986. Backward ray tracing . SIGGRAPH 1986 Developments in Ray Tracing course notes. CiteSeerX   10.1.1.31.581 .  Kajiya, J. 1986. The rendering equation . Computer Graphics Proceedings of SIGGRAPH 1986. 20 . pp.  143150. CiteSeerX   10.1.1.63.1402 .  Cook, R.L.  Carpenter, L.  Catmull, E. 1987. The Reyes image rendering architecture PDF . Computer Graphics Proceedings of SIGGRAPH 1987. 21 . pp.  95102. Archived PDF from the original on 2011-07-15. Cite uses deprecated parameter deadurl  help   a b c Archived copy . Archived from the original on 2014-10-03 . Retrieved 2014-10-02 . Cite uses deprecated parameter deadurl  help  CS1 maint archived copy as title  link   Wu, Xiaolin July 1991. An efficient antialiasing technique . Computer Graphics . 25 . pp.  143152. doi  10.1145127719.122734 . ISBN   978-0-89791-436-9 .  Wu, Xiaolin 1991. Fast Anti-Aliased Circle Generation. In James Arvo ed.. Graphics Gems II . San Francisco Morgan Kaufmann. pp.  446450. ISBN   978-0-12-064480-3 .  Hanrahan, P.  Salzman, D.  Aupperle, L. 1991. A rapid hierarchical radiosity algorithm . Computer Graphics Proceedings of SIGGRAPH 1991. 25 . pp.  197206. CiteSeerX   10.1.1.93.5694 .  IGN Presents the History of SEGA . ign.com . 21 April 2009. Archived from the original on 16 March 2018 . Retrieved 7 May 2018 . Cite uses deprecated parameter deadurl  help   System 16 - Sega Model 2 Hardware Sega . www.system16.com . Archived from the original on 21 December 2010 . Retrieved 7 May 2018 . Cite uses deprecated parameter deadurl  help   a b c d System 16 - Namco Magic Edge Hornet Simulator Hardware Namco . www.system16.com . Archived from the original on 12 September 2014 . Retrieved 7 May 2018 . Cite uses deprecated parameter deadurl  help   M. Oren and S.K. Nayar,  Generalization of Lamberts Reflectance Model Archived 2010-02-15 at the Wayback Machine . SIGGRAPH. pp.239-246, Jul, 1994  Tumblin, J.  Rushmeier, H.E. 1993. Tone reproduction for realistic computer generated images PDF . IEEE Computer Graphics  Applications . 13 6 4248. doi  10.110938.252554 . Archived PDF from the original on 2011-12-08. Cite uses deprecated parameter deadurl  help   Hanrahan, P.  Krueger, W. 1993. Reflection from layered surfaces due to subsurface scattering . Computer Graphics Proceedings of SIGGRAPH 1993. 27 . pp.  165174. CiteSeerX   10.1.1.57.9761 .  Miller, Gavin 24 July 1994. Efficient algorithms for local and global accessibility shading . Proceedings of the 21st annual conference on Computer graphics and interactive techniques - SIGGRAPH 94 . ACM. pp.  319326. doi  10.1145192161.192244 . ISBN   978-0897916677 . Retrieved 7 May 2018  via dl.acm.org.  Archived copy PDF . Archived PDF from the original on 2016-10-11 . Retrieved 2016-08-08 . Cite uses deprecated parameter deadurl  help  CS1 maint archived copy as title  link   Jensen, H.W.  Christensen, N.J. 1995. Photon maps in bidirectional monte carlo ray tracing of complex objects. Computers  Graphics . 19 2 215224. CiteSeerX   10.1.1.97.2724 . doi  10.10160097-84939400145-o .  System 16 - Sega Model 3 Step 1.0 Hardware Sega . www.system16.com . Archived from the original on 6 October 2014 . Retrieved 7 May 2018 . Cite uses deprecated parameter deadurl  help   Veach, E.  Guibas, L. 1997. Metropolis light transport . Computer Graphics Proceedings of SIGGRAPH 1997. 16 . pp.  6576. CiteSeerX   10.1.1.88.944 .  Keller, A. 1997. Instant Radiosity . Computer Graphics Proceedings of SIGGRAPH 1997. 24 . pp.  4956. CiteSeerX   10.1.1.15.240 .  httpsweb.archive.orgweb20070811102018httpwww3.sharkyextreme.comhardwarereviewsvideoneon2502.shtml  Lewis, J. P. Cordner, Matt Fong, Nickson 1 July 2000. Pose space deformation . Pose space deformation a unified approach to shape interpolation and skeleton-driven deformation . ACM PressAddison-Wesley Publishing Co. pp.  165172. doi  10.1145344779.344862 . ISBN   978-1581132083 . Retrieved 7 May 2018  via dl.acm.org.  Sloan, P.  Kautz, J.  Snyder, J. 2002. Precomputed Radiance Transfer for Real-Time Rendering in Dynamic, Low Frequency Lighting Environments PDF . Computer Graphics Proceedings of SIGGRAPH 2002. 29 . pp.  527536. Archived from the original PDF on 2011-07-24. Cite uses deprecated parameter deadurl  help  Further reading  edit  Akenine-Mller, Tomas Haines, Eric 2004. Real-time rendering 2 ed.. Natick, Mass. AK Peters. ISBN   978-1-56881-182-6 . Blinn, Jim 1996. Jim Blinns corner   a trip down the graphics pipeline . San Francisco, Calif. Morgan Kaufmann Publishers. ISBN   978-1-55860-387-5 . Cohen, Michael F. Wallace, John R. 1998. Radiosity and realistic image synthesis 3 ed.. Boston, Mass. u.a. Academic Press Professional. ISBN   978-0-12-178270-2 . Philip Dutr Bekaert, Philippe Bala, Kavita 2003. Advanced global illumination Online-Ausg. ed.. Natick, Mass. A K Peters. ISBN   978-1-56881-177-2 . Foley, James D.  Van Dam Feiner Hughes 1990. Computer graphics   principles and practice 2 ed.. Reading, Mass. Addison-Wesley. ISBN   978-0-201-12110-0 . Andrew S. Glassner, ed. 1989. An introduction to ray tracing 3 ed.. London u.a. Acad. Press. ISBN   978-0-12-286160-4 . Glassner, Andrew S. 2004. Principles of digital image synthesis 2 ed.. San Francisco, Calif. Kaufmann. ISBN   978-1-55860-276-2 . Gooch, Bruce Gooch, Amy 2001. Non-photorealistic rendering . Natick, Mass. A K Peters. ISBN   978-1-56881-133-8 . Jensen, Henrik Wann 2001. Realistic image synthesis using photon mapping Nachdr. ed.. Natick, Mass. AK Peters. ISBN   978-1-56881-147-5 . Pharr, Matt Humphreys, Greg 2004. Physically based rendering from theory to implementation . Amsterdam ElsevierMorgan Kaufmann. ISBN   978-0-12-553180-1 . Shirley, Peter  Morley, R. Keith 2003. Realistic ray tracing 2 ed.. Natick, Mass. AK Peters. ISBN   978-1-56881-198-7 . Strothotte, Thomas Schlechtweg, Stefan 2002. Non-photorealistic computer graphics modeling, rendering, and animation 2 ed.. San Francisco, CA Morgan Kaufmann. ISBN   978-1-55860-787-3 . Ward, Gregory J. July 1994. The RADIANCE Lighting Simulation and Rendering System . Siggraph 94  45972. External links  edit  Look up renderer in Wiktionary, the free dictionary. GPU Rendering Magazine , online CGI magazine about advantages of GPU rendering SIGGRAPH The ACMs special interest group in graphics  the largest academic and professional association and conference. httpsweb.archive.orgweb20040923075327httpwww.cs.brown.edutor List of links to recent, as of 2004 siggraph papers and some others on the web. v t e Film crew  filmmaking  Above the line Actor Bit actor Cameo actor Character actor Leading actor Movie star Superstar Supporting actor Film director Screenwriter Film producer Executive producer Line producer Below the line Pre-production Unit production manager Production coordinator Production accountant Assistant director Script supervisor Script coordinator Casting director Production assistant Location manager Location scout Storyboard Storyboard artist Production design Production designer Art director Costume designer Greensman Hairdresser Make-up artist Set decorator Set dresser Property master  mistress props Weapons master Visual arts Matte painter Illustrator Scenic design Photography Cinematographer   Director of photography Camera operator Focus puller Clapper loader Steadicam Digital imaging technician Second unit Gaffer Best boy electrical Lighting technician Key grip Best boy grip Grip Dolly grip Sound Director of audiography Production sound mixer Boom operator Utility sound technician Dialogue editor Re-recording mixer Foley artist Dubbing ADR Subtitles Composer Music supervisor Music editor Orchestrator Special effects Special effects supervisor Visual effects supervisor Animation Animator Visual effects Modeling Rigging Layout artist Talent Acting coach Body double Dialect coach Ensemble cast Movement director Choreographer Extra Talent agent Actor   voice  Cast member Stand-in Acting instructor Stage combat Stunt double Stunt performer Under-five Post-production Film editor Sound editor Colorist Animator Technical director Visual effects VFX creative director Visual effects editor Compositor Computer-generated imagery Rendering Other Unit still photographer v t e Visualization of technical information Fields Biological data visualization Chemical imaging Crime mapping Data visualization Educational visualization Flow visualization Geovisualization Information visualization Mathematical visualization Medical imaging Molecular graphics Product visualization Scientific visualization Software visualization Technical drawing User interface design Visual culture Volume visualization Image types Chart Diagram Engineering drawing Graph of a function Ideogram Map Photograph Pictogram Plot Schematic Skeletal formula Statistical graphics Table Technical drawings Technical illustration User interface People Jacques Bertin Stuart Card Thomas A. DeFanti Michael Friendly George Furnas Pat Hanrahan Nigel Holmes Christopher R. Johnson Gordon Kindlmann August Kekul Manuel Lima Alan MacEachren Jock D. Mackinlay Michael Maltz Bruce H. McCormick Miriah Meyer Charles Joseph Minard Rudolf Modley Gaspard Monge Tamara Munzner Otto Neurath Florence Nightingale Hanspeter Pfister Clifford A. Pickover William Playfair Karl Wilhelm Pohlke Adolphe Quetelet George G. Robertson Arthur H. Robinson Lawrence J. Rosenblum Ben Shneiderman Fraser Stoddart Edward Tufte Fernanda Vigas Ade Olufeko Howard Wainer Martin Wattenberg Bang Wong Related topics Cartography Chartjunk Computer graphics in computer science Graph drawing Graphic design Graphic organizer Imaging science Information graphics Information science Mathematics and art Mental visualisation Misleading graph Neuroimaging Patent drawing Scientific modelling Spatial analysis Visual analytics Visual perception Volume cartography Volume rendering v t e Computer science Note This template roughly follows the 2012 ACM Computing Classification System . Hardware Printed circuit board Peripheral Integrated circuit Very Large Scale Integration Systems on Chip SoCs Energy consumption Green computing Electronic design automation Hardware acceleration Computer systems organization Computer architecture Embedded system Real-time computing Dependability Networks Network architecture Network protocol Network components Network scheduler Network performance evaluation Network service Software organization Interpreter Middleware Virtual machine Operating system Software quality Software notations and tools Programming paradigm Programming language Compiler Domain-specific language Modeling language Software framework Integrated development environment Software configuration management Software library Software repository Software development Software development process Requirements analysis Software design Software construction Software deployment Software maintenance Programming team Open-source model Theory of computation Model of computation Formal language Automata theory Computational complexity theory Logic Semantics Algorithms Algorithm design Analysis of algorithms Algorithmic efficiency Randomized algorithm Computational geometry Mathematics of computing Discrete mathematics Probability Statistics Mathematical software Information theory Mathematical analysis Numerical analysis Information systems Database management system Information storage systems Enterprise information system Social information systems Geographic information system Decision support system Process control system Multimedia information system Data mining Digital library Computing platform Digital marketing World Wide Web Information retrieval Security Cryptography Formal methods Security services Intrusion detection system Hardware security Network security Information security Application security Humancomputer interaction Interaction design Social computing Ubiquitous computing Visualization Accessibility Concurrency Concurrent computing Parallel computing Distributed computing Multithreading Multiprocessing Artificial intelligence Natural language processing Knowledge representation and reasoning Computer vision Automated planning and scheduling Search methodology Control method Philosophy of artificial intelligence Distributed artificial intelligence Machine learning Supervised learning Unsupervised learning Reinforcement learning Multi-task learning Cross-validation Graphics Animation Rendering Image manipulation Graphics processing unit Mixed reality Virtual reality Image compression Solid modeling Applied computing E-commerce Enterprise software Computational mathematics Computational physics Computational chemistry Computational biology Computational social science Computational engineering Computational healthcare Digital art Electronic publishing Cyberwarfare Electronic voting Video games Word processing Operations research Educational technology Document management Book Category Portal Outline WikiProject Commons Retrieved from  httpsen.wikipedia.orgwindex.phptitleRendering_computer_graphics oldid914349598  Categories  3D rendering Hidden categories CS1 errors missing periodical CS1 errors deprecated parameters Webarchive template wayback links All articles with dead external links Articles with dead external links from April 2018 Articles with permanently dead external links CS1 maint archived copy as title Articles with short description Articles needing additional references from May 2010 All articles needing additional references All articles with vague or ambiguous time Vague or ambiguous time from February 2014