DGL From Wikipedia, the free encyclopedia Jump to navigation Jump to search This article needs additional citations for verification . Please help improve this article by adding citations to reliable sources . Unsourced material may be challenged and removed. Find sources   DGL     news    newspapers    books    scholar    JSTOR  October 2010   Learn how and when to remove this template message  DGL was a programming language developed by Data General Corp for the Nova , Eclipse and EclipseMV families of minicomputers in the 1970s and early 1980s. There were actually two separate versions Old Algol, which ran on and generated code for the Nova series of 16 bit computers. The compiler only did a little optimization. It was only available on the RDOS family of operating systems. DGL, which was developed by extensively modifying the Fortran 5 optimizing compiler. This compiler ran only on the Eclipse and EclipseMV family of computers but generated optimized code for the Nova, Eclipse and EclipseMV Eagle family. It was available on RDOS, AOS and AOSVS. The language itself was an extended version of Algol 60 . It supported Integers, Single and Double precision floating point and complex numbers, and both fixed and arbitrary precision strings. It also supported full arbitrary precision BCD arithmetic on strings. It had a large number of convenient program flow features, but having been designed in the mid 70s, lacked user defined data structures. DGL had a substantial runtime library for its day, and was used for systems programming both within and outside of Data General. Originally called Algol5, the product renamed DGL shortly before the first commercial release in 1978. Officially, the name is meaningless but it was apparently supposed to imply Data General Language. After the first commercial release, targeting 16 bit Eclipse and Nova, several subsequent updates and major versions were released, approximately one a year. Contents 1 Comparison with Algol 60 1.1 Algol 60 features not supported in DGL 1.2 Extensions 1.2.1 String Operations 1.2.2 Input and Output 1.2.3 Other Extensions 2 References Comparison with Algol 60  edit  Appendix A of Data Generals 1982 revision of its DGL Language Reference Manual, 093-00229-01 describes DGL as based on the ALGOL 60 programming language, but gives data types, operations and statements that ALGOL 60 lacks. Specific differences are Algol 60 features not supported in DGL  edit  Algol 60 Feature As described in Algol 60 Report 1  paragraph DG notes Call by name para. 4.7.3.2 DGL allows procedure parameters as type PROCEDURE, allowing procedures to be passed by name to other procedures. Nested quotation marks in literals 2.6.1 and 2.4.1 No limit on length of identifiers DGL identifier names need to be unique within the first 32 characters Two division operators 3.3.4.2 DGL uses  for both real and integer division an integer divided by another integer implies integer division e.g. 14 is 0 unless the compilers global R switch is used Notation of 10 integer  2.5.1 DGL uses E integer  or D integer  for double precision for scientific notation to show powers of ten A program consisting only of a compound statement  4.1.1 Non-ASCII characters ,,,,,,, as Boolean operators 3.4.6.1 DGL allows instead AND, OR, NOT, IMP, EQV,  or  ,  or  , and   or   as well as XOR Including non-Algol code within Algol procedures 4.7.8 Apart from the FORTRAN 5 math library, documentation for external procedures assumes only other DGL procedures will be linked in. Extensions  edit  Some of the extensions to the Algol 60 standard introduced in DGL or carried over from Data Generals previous Algol implementation of 1971 String Operations  edit  SUBSTR - substring INDEX - position of a substring LENGTH - length of a string SETCURRENT - sets the current length of a string, e.g. setcurrentstr,lengthstr-1 Concatentation operator  String arithmetic e.g. 123.45  0.01  Type conversion Boolean, Integer, Real, Pointer, Bit Octal numbers and some special symbols enclosed in brackets to represent ASCII characters Input and Output  edit  Fully formatted output, unformatted input, and output for all supported data types Full interface to Data Generals RDOS , AOS and AOSVS system calls Cache memory management with virtual memory option. Interface to CLRE and INFOS II databases Other Extensions  edit  Conditional compilation of sections of code, using letter-digit-string statement   end-of-line comments using the   character and  comment  expanded do , for , and if syntax e.g. WHILE boolexp1  DO statement  UNTIL boolexp2   Types BIT, BYTE, 16-bit and 32-bit integers, 32-bit and 64-bit reals and arbitrary precision arithmetic, Literals, e.g. LITERAL C 299792.458 Global data Error trapping External procedures and data Cluster declaration... very similar to Pascal units allows a cluster of procedures and data in a separate compiled source. Pointer -  symbol and BASED variables of all types Exclusive-OR operator XOR Multitasking References  edit   Naur, Peter Jan 1963. Revised Report on the Algorithmic Language ALGOL 60. Communications of the ACM . 6  117. doi  10.1145366193.366201 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-positionright .1em ce nter.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-outpu t .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em DGL Compiler Reference Manual , Data General Corp, 1978 DGL Runtime Reference Manual , Data General Corp, 1978 Retrieved from  httpsen.wikipedia.orgwindex.phptitleDGL oldid868427336  Categories  Systems programming languages Procedural programming languages Programming languages created in 1978 Hidden categories Articles needing additional references from October 2010 All articles needing additional references