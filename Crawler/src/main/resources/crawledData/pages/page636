Enterprise engineering From Wikipedia, the free encyclopedia Jump to navigation Jump to search Enterprise engineering is defined as the body of knowledge, principles, and practices to design all or part of an enterprise. 1  An enterprise is a complex, socio-technical system that comprises interdependent resources of people, information, and technology that must interact with each other and their environment in support of a common mission. According to Kosanke, Vernadat and Zelm, enterprise engineering is an enterprise life-cycle oriented discipline for the identification, design, and implementation of enterprises and their continuous evolution , supported by enterprise modelling. Enterprise engineering is a subdiscipline of industrial engineering  systems engineering . The discipline examines each aspect of the enterprise, including business processes, information flows, material flows, and organizational structure. 2  Enterprise engineering may focus on the design of the enterprise as a whole, or on the design and integration of certain business components. 3  Contents 1 Overview 2 Methods 2.1 Design  Engineering Methodology for Organizations 2.2 Computer Integrated Manufacturing Open Systems Architecture 2.3 IDEF 2.4 Petri Nets 2.5 Unified Modeling Language UML 2.6 Enterprise Function Diagrams 3 See also 4 Associations 5 References 6 Further reading Overview  edit  In theory and practice more types of enterprise engineering have emerged. In the field of engineering , a more general form of enterprise engineering has emerged. 4  Encompassing the application of knowledge, principles, and disciplines related to the analysis, design, implementation and operation of all elements associated with an enterprise. In essence this is an interdisciplinary field which combines systems engineering and strategic management as it seeks to engineer the entire enterprise in terms of the products , processes and business operations ,. 4  this field is related to engineering management , operations management , service management and systems engineering . In the context of software development , a specific field of enterprise engineering has also appeared that deals with the modelling and integration of various organizational and technical parts of business processes and functions. 5  In the context of information systems development, this has become an area of activity for the organization of systems analysis , and an extension to the existing scope of Information Modelling . 6  It can also be viewed as an extension and generalization of the systems analysis and systems design phases of the software development process . 7  Here, enterprise modelling can form part of the early, middle and late information system development life cycle . Explicit representation of the organizational and technical system infrastructure is being developed in order to understand the orderly transformations of existing work practices. 7  This discipline is also known as Enterprise architecture , or along with Enterprise ontology, defined as being one of the two major sub-fields of Enterprise architecture. 2  Methods  edit  Enterprise engineering involves formal methodologies, methods and techniques which are designed, tested and used extensively in order to offer organizations reusable business process solutions Design  Engineering Methodology for Organizations 8  2  Computer Integrated Manufacturing Open Systems Architecture CIMOSA methodology 9  Integrated DEFinition IDEF methodology 10  Petri Nets 11  Unified Modeling Language UML or Unified Enterprise Modeling Language UEML 12  13  Enterprise Function Diagrams EFD These methodologies, techniques and methods are all more or less suited to modeling an enterprise and its underlying processes. Design  Engineering Methodology for Organizations  edit  DEMO is a methodology for designing, organizing and linking organizations. Central concept is the communicative action communication is considered essential for the functioning of organizations. Agreements between employees, customers and suppliers are indeed created to communicate. The same is true for the acceptance of the results supplied. 8  2  The DEMO methodology is based on the following principles 14  The essence of an organization is that it consists of people with authority and responsibility to act and negotiate. The modeling of business processes and information systems is a rational activity, which leads to uniformity. Models should be understandable for all concerned. Information should fit with their users. The DEMO methodology provides a coherent understanding of communication, information, action and organization. The scope is here shifted from Information Systems Engineering to Business Systems Engineering, with a clear understanding of both the information and the central organizations. Computer Integrated Manufacturing Open Systems Architecture  edit  CIMOSA provides templates and interconnected modeling constructs to encode business, people and information technology IT aspects of enterprise requirements. This is done from multiple perspectives Information view, Function view, Resource view and Organization view. These constructs can further be used to structure and facilitate the design and implementation of detailed IT syste ms. The division into different views makes it a clarifying reference for enterprise and software engineers. It shows information needs for different enterprise functions such as activities, processes and operations alongside their corresponding resources. In this way it can easily be determined which IT system will fulfill the information needs of a particular activity and its ass ociated processes. IDEF  edit  IDEF , first developed as a modeling language to model manufacturing systems, has been used by the U.S. Airforce since 1981 and originally offered four different notations to model an enterprise from a certain viewpoint. These were IDEF0 , IDEF1, IDEF2 and IDEF3 for functional, data, dynamic and process analysis respectively. Over the past decades a number of tools and techniques for the integration of these different notations have been developed incrementally. IDEF shows how a business process flows through a variety of decomposed business functions with corresponding information inputs, outputs and actors. Like CIMOSA, it also uses different enterprise views. Moreover, IDEF can be easily transformed into UML-diagrams for the further development of IT systems. These positive characteristics make it a powerful method for the development of Functional Software Architectures. Petri Nets  edit  Petri Nets are established tools used to model manufacturing systems. 15  They are highly expressive and provide good formalisms for the modeling of concurrent systems . The most advantageous properties are the ability to create simple representation of states, concurrent system transitions and capabilities thereby allowing modelling of the duration of transitions. As a result, Petri Nets can be used to model certain business processes with corresponding state and transitions or activities therein as well as outputs. Moreover, Petri Nets can be used to model different software systems and transitions between these systems. In this way programmers can use it as a schematic coding reference. In recent years research has shown that Petri Nets can contribute to the development of business process integration. One of these is the Model Blue methodology developed by IBM s Chinese Research Laboratory. Model Blue outlines the importance of model driven business integration as an emerging approach to building integrated software platforms. 16  The correspondence between their Model Blue business view and an equivalent Petri Net is also shown, which indicates that their research has closed the gap between business and IT. However, instead of Petri Nets the researchers instead use their own Model Blue IT view, which can be derived from their business view through a transformation engine. Unified Modeling Language UML  edit  Unified Modeling Language UML is a broadly accepted modeling language for the development of software systems and applications. Many within the Object-oriented analysis and design community also use UML for enterprise modeling purposes. Here, emphasis is placed on the usage of enterprise objects or business objects from which complex enterprise systems are made. A collection of these objects and corresponding interactions between them can represent a complex business system or process. While Petri Nets focus on the interaction and states of objects, UML focuses more on the business objects themselves. Sometimes these are called enterprise building blocks and includes resources, processes, goals, rules and metamodels. 17  Despite the fact that UML can be used to model an integrated software system, it has been argued that the reality of business can be modeled with a software modeling language. In response, the object oriented community makes business extensions for UML and adapts the language accordingly. Extended Enterprise Modeling Language EEML is derived from UML and is proposed as a business modeling language. The question remains as to whether this business transformation is the correct method to use, as it was earlier said that UML in combination with other pure business methods may be a better alternative. Enterprise Function Diagrams  edit  EFD is a used as a modeling technique for the representation of enterprise functions and corresponding interactions. Different business processes can be modeled in these representations through the use of function modules and triggers. A starting business process delivers different inputs to different functions. A process flowing through all the functions and sub-functions cr eates multiple outputs. Enterprise Function Diagrams thereby provide an easy-to-use and detailed representation about a business process and its corresponding functions, inputs, outputs and triggers. In this way EFD has many similarities with IDEF0 diagrams, which also represent business processes in a hierarchical fashion as a combination of functions and triggers. The two di ffer in that an EFD places the business functions in an organization hierarchical perspective, which outlines the downstream of certain processes in the organization. On the other hand, IDEF0 diagrams show the responsibilities of certain business functions through the use of arrows. Furthermore, IDEF0 provides a clear representation of inputs and outputs for every subfunction . EFD may be used as a business front-end to a software modeling language like UML and its major similarities to IDEF as a modeling tool indicate that this is indeed possible. However, further research is needed to improve EFD techniques in such a way that formal mappings to UML can be made. 18  Research on the complementary use of IDEF and UML has contributed to the acceptance of IDEF as business-front end and therefore a similar study should be carried out with EFD and UML. See also  edit  Business Engineering Business Architecture Design  Engineering Methodology for Organizations Enterprise architecture Enterprise Architecture Planning Enterprise integration Enterprise Life Cycle Enterprise systems engineering Generalised Enterprise Reference Architecture and Methodology Functional Software Architecture Industrial Engineering Engineering Management Engineering Administration Software factory View model Associations  edit  Enterprise Engineering Institute CIAO Network INFORMS Institute of Industrial Engineers References  edit   R.E. Giachetti 2010. Design of Enterprise Systems Theory, Methods, and Architecture . CRC Press, Boca Raton, FL.  a b c d Jan Dietz 2006. Enterprise Ontology - Theory and Methodology . Springer-Verlag Berlin Heidelberg.  De Vries, Marne, Aurona Gerber, and Alta van der Merwe. In Aveiro D., Tribolet J. , Gouveia D. eds The Nature of the Enterprise Engineering Discipline. Advances in Enterprise Engineering VIII. Springer International Publishing, 2014. p. 1-15.  a b Enterprise Engineering Research at Royal Holloway Archived 2013-10-26 at the Wayback Machine led by Dr Alan Pilkington , Ver 9.08. Accessed 4 November 2008.  Vernadat, F.B . 1996 Enterprise Modeling and Integration Principles and Applications . Chapman  Hall, London, .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation . cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-po sitionright .1em center.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno -repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-o utput .cs1-registration,.mw-parser-output .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em ISBN   0-412-60550-3 .  J. A. Bubenko 1993. Extending the Scope of Information Modelling. In Proceedings of the 4th International Workshop on the Deductive Approach to Information Systems and Database Systems, Costa Brava, Catalonia . 1993.  a b Gustas, R and Gustiene, P 2003 Towards the Enterprise engineering approach for Information system modelling across organisational and technical boundaries, in Proceedings of the fifth International Conference on Enterprise Information Systems , vol. 3, Angers, France, 2003, pp. 77-88.  a b Enterprise Engineering Institute . www.ee-institute.org . Retrieved 2018-11-23 .  Beekman, 1989 European Committee for Standardization, ECN TC310 WG1, 1994  U.S. Airforce 1981 ICAM architecture part 1, Ohio, Air Force Materials Laboratory, Wright-Patterson  Peterson J.L. 1981 Petri net theory and the modeling of systems, Englewood Cliffs, N.J., Prentice Hall.  Marshall, C. 2000 Enterprise Modelling with UML, ISBN   0-201-43313-3 , Addison-Wesley, MA.  Vernadat F.B.  A vision for future work of the task force IFAC-IFIP.  Academic Publications . www.ee-institute.org . Retrieved 2018-11-23 .  Silva, M. and Valette, R. 1989 Petri nets and Flexible manufacturing . Lecture Notes on Computer Science, 424, 374417.  Zhu et al. 2004 Model-driven business process integration and management A case study with the Bank SinoPac regional service platform, IBM Corporation, Res.  Dev. Vol. 48 No. 56.  Eriksson  Penker 1998 UML Toolkit, Wiley, New York.  Kim  Weston  Hodgson  Lee 2002 The complementary use of IDEF and UML. Information system engineering, Deajon University South Korea, Computers  Industrial Engineering 50, 3556. Further reading  edit  Wikiquote has quotations related to Enterprise engineering Jan L.G. Dietz 2008 eds.. Advances in enterprise engineering I   4th International Workshop CIAO and 4th International Workshop EOMAS, held at CAiSE 2008, Montpellier, France, June 1617, 2008. Proceedings . Cheng Hsu 2007 eds. Service enterprise integration   an enterprise engineering perspective . Duane W. Hybertson 2009. Model-oriented systems engineering science   a unifying framework for traditional and complex systems . Feltus, Christophe Petit, Michael Vernadat, Franois . 2009. Refining the Notion of Responsibility in Enterprise Engineering to Support Corporate Governance of IT , Proceedings of the 13th IFAC Symposium on Information Control Problems in Manufacturing INCOM09, Moscow, Russia Kurt Kosanke, Franois Vernadat, and Martin Zelm, CIMOSA Enterprise engineering and integration , Computers in Industry, 40 2-3 1999 83-97. Liles, Donald H. , et al.  Enterprise engineering a discipline . Society for Enterprise Engineering Conference Proceedings. Vol. 6. 1995. Liles, Donald H. , and Adrien R. Presley.  Enterprise modeling within an enterprise engineering framework . Proceedings of the 28th conference on Winter simulation. IEEE Computer Society, 1996. Retrieved from  httpsen.wikipedia.orgwindex.phptitleEnterprise_engineering oldid910006874  Categories  Enterprise architecture Enterprise modelling Hidden categories Webarchive template wayback links