Software craftsmanship From Wikipedia, the free encyclopedia Jump to navigation Jump to search Software craftsmanship is an approach to software development that emphasizes the coding skills of the software developers . It is a response by software developers to the perceived ills of the mainstream software industry , including the prioritization of financial concerns over developer accountability. Historically, programmers have been encouraged to see themselves as practitioners of the well-defined statistical analysis and mathematical rigor of a scientific approach with computational theory. This has changed to an engineering approach with connotations of precision, predictability, measurement, risk mitigation, and professionalism. Practice of engineering led to calls for licensing, certification and codified bodies of knowledge as mechanisms for spreading engineering knowledge and maturing the field. The Agile Manifesto , with its emphasis on individuals and interactions over processes and tools questioned some of these assumptions. The Software Craftsmanship Manifesto extends and challenges further the assumptions of the Agile Manifesto, drawing a metaphor between modern software development and the apprenticeship model of medieval Europe . Contents 1 Overview 2 History 3 References 4 Further reading 5 External links Overview  edit  The movement traces its roots to the ideas expressed in written works. The Pragmatic Programmer by Andy Hunt and Dave Thomas and Software Craftsmanship by Pete McBreen explicitly position software development as heir to the guild traditions of medieval Europe. The philosopher Richard Sennett wrote about software as a modern craft in his book The Craftsman. Freeman Dyson , in his essay Science as a Craft Industry , expands software crafts to include mastery of using software as a driver for economic benefit In spite of the rise of Microsoft and other giant producers, software remains in large part a craft industry. Because of the enormous variety of specialized applications, there will always be room for individuals to write software based on their unique knowledge. There will always be niche markets to keep small software companies alive. The craft of writing software will not b ecome obsolete. And the craft of using software creatively is flourishing even more than the craft of writing it. Following initial discussion, conferences were held in both London 1  and Chicago, 2  after which, a manifesto 3  was drafted and put online to gather signatories. This was followed by the development of practices to further develop the movement including the exchange of talent in Craftsman Swaps and the assessment of skills in Craftsmanship Spikes History  edit  In 1992, Jack W. Reeves essay What Is Software Design 4  suggested that software development is more a craft than an engineering discipline. Seven years later, in 1999, The Pragmatic Programmer was published. Its sub-title, From Journeyman to Master, suggested that programmers go through stages in their professional development akin to the medieval guild traditions of Europe. In 2001, Pete McBreens book Software Craftsmanship was published. It suggested that software developers need not see themselves as part of the engineering tradition and that a different metaphor would be more suitable. In his August keynote at Agile 2008 , Robert C. Martin proposed a fifth value for the Agile Manifesto, namely Craftsmanship over Crap. He later changed his proposal to Craftsmanship over Execution. 5  In December 2008, a number of aspiring software craftsmen met in Libertyville, Illinois , with the intent of establishing a set of principles for software craftsmanship. Three months later, a summary of the general conclusions was decided upon. It was presented publicly, for both viewing and signing, in the form of a Manifesto for Software Craftsmanship. 6  In April 2009, two of the companies in the software craftsmanship movement, 8th Light and Obtiva , experimented with a Craftsman Swap. 7  The Chicago Tribune covered this event on 15 June 2009. 8  In January 2010, a second Craftsman Swap was held between Obtiva and Relevance. 9  In March, 2014, Software Craftsmanship   Professionalism Pragmatism Pride was published by Sandro Mancuso In Sandros own words this - Proposing a very different mindset for developers and companies, a strong set of technical disciplines and practices, mostly based on Extreme Programming, and with a great alignment with Agile methodologies, Software Craftsmanship promises to take our industry to the next level, promoting professionalism, technical excellence, the death of the production line and factory worke rs attitude. References  edit   Software Craftsmanship Conference . Parlez UML . Archived from the original on 2009-02-06. Cite uses deprecated parameter deadurl  help  .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation . cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-po sitionright .1em center.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno -repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-o utput .cs1-registration,.mw-parser-output .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em  Software Craftsmanship North America . Software Craftsmanship .  Software Craftsmanship Manifesto . Software Craftsmanship .  Reeves, Jack W 2005-02-23, What Is Software Design , Developer Dot Star , retrieved 2015-06-24  Craftsmanship  the Fifth Agile Manifesto Value , Infoq , Aug 2008 , retrieved 2015-06-24  Manifesto for Software Craftsmanship . Manifesto.softwarecraftsmanship.org . Retrieved 2019-03-26 .  Employee swap gives two firms new perspectives , Ventura county star , 13 Jul 2009, archived from the original on 2012-09-17 Cite uses deprecated parameter deadurl  help   Wong, Wailin 15 June 2009. Open to the competition . Chicago Tribune .  Relevance Craftsman Swap Day 1  8th Light . 8thlight.com . Retrieved 2018-02-02 . Further reading  edit  Hoover, Dave Oshineye, Adewale. Apprenticeship Patterns Guidance for the Aspiring Software Craftsman . Foreword by Ward Cunningham . OReilly. ISBN   0-596-51838-2 . Martin, Robert C. 2008. Clean Code A Handbook of Agile Software Craftsmanship . Addison Wesley. ISBN   0-13-235088-2 . McBreen, Pete 2001. Software Craftsmanship The New Imperative . Addison Wesley. ISBN   0-201-73386-2 . Sennett, Richard 2008. The Craftsman . Yale University Press. ISBN   0-300-11909-7 . Pyritz, Bill 2003. Craftsmanship versus engineering Computer programming - An art or a science . Bell Labs Technical Journal . Archived from the original on 2013-01-05. Cite uses deprecated parameter dead-url  help  Mancuso, Sandro 2014. The Software Craftsman Professionalism, Pragmatism, Pride . Prentice Hall. ISBN   0-13-405250-1 . External links  edit  Software Craftsmanship North America Software Craftsmanship Manifesto Latvian Software Craftsmanship Community Software Craftsmanship Discussion Group Applying Software Craftsmanship to Big Teams Retrieved from  httpsen.wikipedia.orgwindex.phptitleSoftware_craftsmanship oldid914175691  Categories  Computer programming Hidden categories CS1 errors deprecated parameters