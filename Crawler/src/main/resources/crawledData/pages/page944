List of important publications in theoretical computer science From Wikipedia, the free encyclopedia Jump to navigation Jump to search Wikipedia list article This article has multiple issues. Please help improve it or discuss these issues on the talk page .  Learn how and when to remove these template messages  This article needs additional citations for verification . Please help improve this article by adding citations to reliable sources . Unsourced material may be challenged and removed. Find sources   List of important publications in theoretical computer science     news    newspapers    books    scholar    JSTOR  February 2015   Learn how and when to remove this template message  This article possibly contains original research . Please improve it by verifying the claims made and adding inline citations . Statements consisting only of original research should be removed.  February 2015   Learn how and when to remove this template message  This article may require cleanup to meet Wikipedias quality standards . The specific problem is the list presents item after item without objective published support, including selection of articles from the primary literature unsupported by source establishing their importance thus constituting WPOR  Please help improve this article if you can.  February 2015   Learn how and when to remove this template message   Learn how and when to remove this template message  This is a list of important publications in theoretical computer science , organized by field. Some reasons why a particular publication might be regarded as important Topic creator  A publication that created a new topic Breakthrough  A publication that changed scientific knowledge significantly Influence  A publication which has significantly influenced the world or has had a massive impact on the teaching of theoretical computer science. .mw-parser-output .toclimit-2 .toclevel-1 ul,.mw-parser-output .toclimit-3 .toclevel-2 ul,.mw-parser-output .toclimit-4 .toclevel-3 ul,.mw-parser-output .toclimit-5 .toclevel-4 ul,.mw-parser-output .toclimit-6 .toclevel-5 ul,.mw-parser-output .toclimit-7 .toclevel-6 uldisplaynone Contents 1 Computability 1.1 Cutlands Computability An Introduction to Recursive Function Theory Cambridge 1.2 Decidability of second order theories and automata on infinite trees 1.3 Finite automata and their decision problems 1.4 Introduction to Automata Theory, Languages, and Computation 1.5 On certain formal properties of grammars 1.6 On computable numbers, with an application to the Entscheidungsproblem 1.7 Rekursive Funktionen 1.8 Representation of Events in Nerve Nets and Finite Automata 2 Computational complexity theory 2.1 Arora  Baraks Computational Complexity and Goldreichs Computational Complexity both Cambridge 2.2 A machine-independent theory of the complexity of recursive functions 2.3 Algebraic methods for interactive proof systems 2.4 The complexity of theorem proving procedures 2.5 Computers and Intractability A Guide to the Theory of NP-Completeness 2.6 Degree of difficulty of computing a function and a partial ordering of recursive sets 2.7 How good is the simplex method 2.8 How to construct random functions 2.9 IP  PSPACE 2.10 Reducibility among combinatorial problems 2.11 The Knowledge Complexity of Interactive Proof Systems 2.12 A letter from Gdel to von Neumann 2.13 On the computational complexity of algorithms 2.14 Paths, trees, and flowers 2.15 Theory and applications of trapdoor functions 2.16 Computational Complexity 2.17 Interactive proofs and the hardness of approximating cliques 2.18 Probabilistic checking of proofs a new characterization of NP 2.19 Proof verification and the hardness of approximation problems 2.20 The Intrinsic Computational Difficulty of Functions 3 Algorithms 3.1 A machine program for theorem proving 3.2 A machine-oriented logic based on the resolution principle 3.3 The traveling-salesman problem and minimum spanning trees 3.4 A polynomial algorithm in linear programming 3.5 Probabilistic algorithm for testing primality 3.6 Optimization by simulated annealing 3.7 The Art of Computer Programming 3.8 Algorithms  Data Structures  Programs 3.9 The Design and Analysis of Computer Algorithms 3.10 How to Solve It By Computer 3.11 Algorithms 3.12 Introduction to Algorithms 4 Algorithmic information theory 4.1 On Tables of Random Numbers 4.2 A formal theory of inductive inference 4.3 Algorithmic information theory 5 Information theory 5.1 A mathematical theory of communication 5.2 Error detecting and error correcting codes 5.3 A method for the construction of minimum redundancy codes 5.4 A universal algorithm for sequential data compression 5.5 Elements of Information Theory 6 Formal verification 6.1 Assigning Meaning to Programs 6.2 An Axiomatic Basis for Computer Programming 6.3 Guarded Commands, Nondeterminacy and Formal Derivation of Programs 6.4 Proving Assertions about Parallel Programs 6.5 An Axiomatic Proof Technique for Parallel Programs I 6.6 A Discipline of Programming 6.7 Denotational Semantics 6.8 The Temporal Logic of Programs 6.9 Characterizing correctness properties of parallel programs using fixpoints 1980 6.10 Communicating Sequential Processes 1978 6.11 A Calculus of Communicating Systems 6.12 Software Development A Rigorous Approach 6.13 The Science of Programming 6.14 Communicating Sequential Processes 1985 6.15 Linear logic 1987 6.16 A Calculus of Mobile Processes 1989 6.17 The Z Notation A Reference Manual 6.18 Communication and Concurrency 6.19 a Practical Theory of Programming 7 References Computability  edit  Cutlands Computability An Introduction to Recursive Function Theory Cambridge  edit  Cutland, Nigel J. 1980. Computability An Introduction to Recursive Function Theory . Cambridge University Press . ISBN   978-0-521-29465-2 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-positionright .1em ce nter.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-outpu t .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em The review of this early text by Carl Smith of Purdue University in the Society for Industrial and Applied Mathematics Reviews , 1  reports that this a text with an appropriate blend of intuition and rigor in the exposition of proofs that presents the fundamental results of classical recursion theory RT... in a style... accessible to undergraduates with minimal mathematical background. While he states that it would make an excellent introductory text for an introductory course in RT for mathematics students, he suggests that an instructor must be prepared to substantially augment the material  when it used with computer science students given a dearth of material on RT applications to this area. 1  Decidability of second order theories and automata on infinite trees  edit  Michael O. Rabin Transactions of the American Mathematical Society , vol. 141, pp.  135, 1969 Description The paper presented the tree automaton , an extension of the automata . The tree automaton had numerous applications to proofs of correctness of programs . Finite automata and their decision problems  edit  Michael O. Rabin and Dana S. Scott IBM Journal of Research and Development , vol. 3, pp.  114125, 1959 Online version Description Mathematical treatment of automata , proof of core properties, and definition of non-deterministic finite automaton . Introduction to Automata Theory, Languages, and Computation  edit  Main article Introduction to Automata Theory, Languages, and Computation John E. Hopcroft , Jeffrey D. Ullman , and Rajeev Motwani Addison-Wesley , 2001, ISBN   0-201-02988-X Description A popular textbook. On certain formal properties of grammars  edit  Chomsky, N. 1959. On certain formal properties of grammars. Information and Control . 2 2 137167. doi  10.1016S0019-99585990362-6 . Description This article introduced what is now known as the Chomsky hierarchy , a containment hierarchy of classes of formal grammars that generate formal languages . On computable numbers, with an application to the Entscheidungsproblem  edit  Alan Turing Proceedings of the London Mathematical Society , Series 2 , vol. 42, pp.  230265, 1937, doi  10.1112plmss2-42.1.230 . Errata appeared in vol. 43, pp.  544546, 1938, doi  10.1112plmss2-43.6.544 . HTML version , PDF version Description This article set the limits of computer science. It defined the Turing Machine , a model for all computations. On the other hand, it proved the undecidability of the halting problem and Entscheidungsproblem and by doing so found the limits of possible computation. Rekursive Funktionen  edit  Pter, Rzsa 1951. Rekursive Funktionen . Academic Press. ISBN   9780125526500 . The first textbook on the theory of recursive functions . The book went through many editions and earned Pter the Kossuth Prize from the Hungarian government. 2  Reviews by Raphael M. Robinson and Stephen Kleene praised the book for providing an effective elementary introduction for students. 3  Representation of Events in Nerve Nets and Finite Automata  edit  S. C. Kleene U. S. Air Force Project Rand Research Memorandum RM-704 , 1951 Online version republished in Shannon, Claude  McCarthy, John , eds. 1956. Automata Studies . OCLC   564148 . Description this paper introduced finite automata , regular expressions , and regular languages , and established their connection. Computational complexity theory  edit  Arora  Baraks Computational Complexity and Goldreichs Computational Complexity both Cambridge  edit  Sanjeev Arora and Boaz Barak, Computational Complexity A Modern Approach, Cambridge University Press, 2009, 579 pages, Hardcover Oded Goldreich, Computational Complexity A Conceptual Perspective, Cambridge University Press, 2008, 606 pages, Hardcover Besides the estimable press bringing these recent texts forward, they are very positively reviewed in ACMs SIGACT News by Daniel Apon of the University of Arkansas, 4  who identifies them as textbooks for a course in complexity theory, aimed at early graduate or... advanced undergraduate students with numerous, unique strengths and very few weaknesses, and states that both are .mw-parser-output .templatequoteoverflowhiddenmargin1em 0padding0 40px.mw-parser-output .templatequote .templatequoteciteline-height1.5emtext-alignleftpadding-left1.6emmargin-top0 excellent texts that thoroughly cover both the breadth and depth of computational complexity theory by authors... each who are giants in theory of computing where each will be ...an exceptional reference text for experts in the field and that ...theorists, researchers and instructors of any school of thought will find either book useful. The reviewer notes that there is a definite attempt in Arora and Barak to include very up-to-date material, while Goldreich focuses more on developing a contextual and historical foundation for each concept presented, and that he applauds all authors for their outstanding contributions. 4  A machine-independent theory of the complexity of recursive functions  edit  Blum, Manuel 1967. A Machine-Independent Theory of the Complexity of Recursive Functions PDF . Journal of the ACM . 14 2 322336. doi  10.1145321386.321395 . Description The Blum axioms . Algebraic methods for interactive proof systems  edit  Lund, C.  Fortnow, L.  Karloff, H. Nisan, N. 1992. Algebraic methods for interactive proof systems. Journal of the ACM . 39 4 859868. CiteSeerX   10.1.1.41.9477 . doi  10.1145146585.146605 . Description This paper showed that PH is contained in IP . The complexity of theorem proving procedures  edit  Cook, Stephen A. 1971. The Complexity of Theorem-Proving Procedures PDF . Proceedings of the 3rd Annual ACM Symposium on Theory of Computing  151158. CiteSeerX   10.1.1.406.395 . doi  10.1145800157.805047 . Description This paper introduced the concept of NP-Completeness and proved that Boolean satisfiability problem SAT is NP-Complete . Note that similar ideas were developed independently slightly later by Leonid Levin at Levin, Universal Search Problems. Problemy Peredachi Informatsii 93265266, 1973. Computers and Intractability A Guide to the Theory of NP-Completeness  edit  Garey, Michael R.  Johnson, David S. 1979. Computers and Intractability A Guide to the Theory of NP-Completeness . New York Freeman. ISBN   978-0-7167-1045-5 . Description The main importance of this book is due to its extensive list of more than 300 NP-Complete problems. This list became a common reference and definition. Though the book was published only few years after the concept was defined such an extensive list was found. Degree of difficulty of computing a function and a partial ordering of recursive sets  edit  Rabin, Michael O. 1960. Degree of difficulty of computing a function and a partial ordering of recursive sets PDF . Technical Report No. 2 . Jerusalem Hebrew University. Description This technical report was the first publication talking about what later was renamed computational complexity 5  How good is the simplex method  edit  Victor Klee and George J. Minty Klee, Victor  Minty, George  J. 1972. How good is the simplex algorithm. In Shisha, Oved ed.. Inequalities  III Proceedings of the Third Symposium on Inequalities held at the University of California, Los Angeles, Calif., September  19,  1969, dedicated to the memory of Theodore  S. Motzkin . New York-London Academic Press. pp.  159175. MR   0332165 . Description Constructed the KleeMinty cube in dimension   D , whose  2 D corners are each visited by Dantzig s simplex algorithm for linear optimization . How to construct random functions  edit  Goldreich, O.  Goldwasser, S.  Micali, S. 1986. How to construct random functions PDF . Journal of the ACM . 33 4 792807. doi  10.11456490.6503 . Description This paper showed that the existence of one way functions leads to computational randomness . IP  PSPACE  edit  Shamir, A. 1992. IP  PSPACE. Journal of the ACM . 39 4 869877. doi  10.1145146585.146609 . Description IP is a complexity class whose characterization based on interactive proof systems  is quite different from the usual timespace bounded computational classes. In this paper, Shamir extended the technique of the previous paper by Lund, et al., to show that PSPACE is contained in IP , and hence IP  PSPACE, so that each problem in one complexity class is solvable in the other. Reducibility among combinatorial problems  edit  Main article Karps 21 NP-complete problems R. M. Karp In R. E. Miller and J. W. Thatcher, editors, Complexity of Computer Computations , Plenum Press, New York, NY, 1972, pp.  85103 Description This paper showed that 21 different problems are NP-Complete and showed the importance of the concept. The Knowledge Complexity of Interactive Proof Systems  edit  Goldwasser, S.  Micali, S.  Rackoff, C. 1989. The Knowledge Complexity of Interactive Proof Systems PDF . SIAM J. Comput. 18 1 186208. doi  10.11370218012 . Description This paper introduced the concept of zero knowledge . 6  A letter from Gdel to von Neumann  edit  Kurt Gdel A Letter from Gdel to John von Neumann , March 20, 1956 Online version Description Gdel discusses the idea of efficient universal theorem prover. On the computational complexity of algorithms  edit  Hartmanis, Juris  Stearns, Richard 1965. On the computational complexity of algorithms. Transactions of the American Mathematical Society . 117  285306. doi  10.1090s0002-9947-1965-0170805-7 . Description This paper gave computational complexity its name and seed. Paths, trees, and flowers  edit  Edmonds, J. 1965. Paths, trees, and flowers. Canadian Journal of Mathematics . 17  449467. doi  10.4153CJM-1965-045-4 . Description There is a polynomial time algorithm to find a maximum matching in a graph that is not bipartite and another step toward the idea of computational complexity . For more information see 2 . Theory and applications of trapdoor functions  edit  Yao, A. C. 1982. Theory and application of trapdoor functions. 23rd Annual Symposium on Foundations of Computer Science SFCS 1982 . pp.  8091. doi  10.1109SFCS.1982.45 . Description This paper creates a theoretical framework for trapdoor functions and described some of their applications, like in cryptography . Note that the concept of trapdoor functions was brought at New directions in cryptography six years earlier See section V Problem Interrelationships and Trap Doors.. Computational Complexity  edit  C.H. Papadimitriou Addison-Wesley , 1994, ISBN   0-201-53082-1 Description An introduction to computational complexity theory , the book explains its authors characterization of P-SPACE and other results. Interactive proofs and the hardness of approximating cliques  edit  Feige, U.  Goldwasser, S.  Lovsz, L.  Safra, S.  Szegedy, M. 1996. Interactive proofs and the hardness of approximating cliques. Journal of the ACM . 43 2 268292. doi  10.1145226643.226652 . Probabilistic checking of proofs a new characterization of NP  edit  Arora, S.  Safra, S. 1998. Probabilistic checking of proofs A new characterization of NP. Journal of the ACM . 45  70122. doi  10.1145273865.273901 . Proof verification and the hardness of approximation problems  edit  Arora, S.  Lund, C.  Motwani, R.  Sudan, M.  Szegedy, M. 1998. Proof verification and the hardness of approximation problems. Journal of the ACM . 45 3 501555. CiteSeerX   10.1.1.145.4652 . doi  10.1145278298.278306 . Description These three papers established the surprising fact that certain problems in NP remain hard even when only an approximative solution is required. See PCP theorem . The Intrinsic Computational Difficulty of Functions  edit  Cobham, Alan 1964. The Intrinsic Computational Difficulty of Functions PDF . Proc. Of the 1964 International Congress for Logic, Methodology, and the Philosophy of Science  2430. Description First definition of the complexity class P. One of the founding papers of complexity theory. Algorithms  edit  See also List of algorithms A machine program for theorem proving  edit  Davis, M.  Logemann, G. Loveland, D. 1962. A machine program for theorem-proving PDF . Communications of the ACM . 5 7 394397. doi  10.1145368273.368557 . Description The DPLL algorithm . The basic algorithm for SAT and other NP-Complete problems. A machine-oriented logic based on the resolution principle  edit  Robinson, J. A. 1965. A Machine-Oriented Logic Based on the Resolution Principle. Journal of the ACM . 12  2341. doi  10.1145321250.321253 . Description First description of resolution and unification used in automated theorem proving  used in Prolog and logic programming . The traveling-salesman problem and minimum spanning trees  edit  Held, M.  Karp, R. M. 1970. The Traveling-Salesman Problem and Minimum Spanning Trees. Operations Research . 18 6 11381162. doi  10.1287opre.18.6.1138 . Description The use of an algorithm for minimum spanning tree as an approximation algorithm for the NP-Complete travelling salesman problem . Approximation algorithms became a common method for coping with NP-Complete problems. A polynomial algorithm in linear programming  edit  L. G. Khachiyan Soviet Mathematics - Doklady , vol. 20, pp.  191194, 1979 Description For long, there was no provably polynomial time algorithm for the linear programming problem. Khachiyan was the first to provide an algorithm that was polynomial and not just was fast enough most of the time as previous algorithms. Later, Narendra Karmarkar presented a faster algorithm at Narendra Karmarkar, A new polynomial time algorithm for linear programming, Combinatorica , vol 4, no. 4, p.  373395, 1984. Probabilistic algorithm for testing primality  edit  Rabin, M. 1980. Probabilistic algorithm for testing primality. Journal of Number Theory . 12 1 128138. doi  10.10160022-314X8090084-0 . Description The paper presented the Miller-Rabin primality test and outlined the program of randomized algorithms . Optimization by simulated annealing  edit  Kirkpatrick, S.  Gelatt, C. D. Vecchi, M. P. 1983. Optimization by Simulated Annealing. Science . 220 4598 671680. Bibcode  1983Sci...220..671K . CiteSeerX   10.1.1.123.7607 . doi  10.1126science.220.4598.671 . PMID   17813860 . Description This article described simulated annealing which is now a very common heuristic for NP-Complete problems. The Art of Computer Programming  edit  Main article The Art of Computer Programming Donald Knuth Description This monograph has three popular algorithms books and a number of fascicles . The algorithms are written in both English and MIX assembly language or MMIX assembly language in more recent fascicles. This makes algorithms both understandable and precise. However, the use of a low-level programming language frustrates some programmers more familiar with modern structured programming languages . Algorithms  Data Structures  Programs  edit  Main article Algorithms  Data Structures  Programs Niklaus Wirth Prentice Hall, 1976, ISBN   0-13-022418-9 Description An early, influential book on algorithms and data structures, with implementations in Pascal. The Design and Analysis of Computer Algorithms  edit  Alfred V. Aho , John E. Hopcroft , and Jeffrey D. Ullman Addison-Wesley, 1974, ISBN   0-201-00029-6 Description One of the standard texts on algorithms for the period of approximately 19751985. How to Solve It By Computer  edit  Dromey, R. G. 1982. How to Solve it by Computer . Prentice-Hall International. ISBN   978-0-13-434001-2 . Description Explains the Why s of algorithms and data-structures. Explains the Creative Process , the Line of Reasoning , the Design Factors behind innovative solutions. Algorithms  edit  Robert Sedgewick Addison-Wesley, 1983, ISBN   0-201-06672-6 Description A very popular text on algorithms in the late 1980s. It was more accessible and readable but more elementary than Aho, Hopcroft, and Ullman. There are more recent editions. Introduction to Algorithms  edit  Main article Introduction to Algorithms Thomas H. Cormen , Charles E. Leiserson , Ronald L. Rivest , and Clifford Stein 3rd Edition, MIT Press, 2009, ISBN   978-0-262-03384-8 . Description This textbook has become so popular that it is almost the de facto standard for teaching basic algorithms. The 1st edition with first three authors was published in 1990, the 2nd edition in 2001, and the 3rd in 2009. Algorithmic information theory  edit  On Tables of Random Numbers  edit  Kolmogorov, Andrei N. 1963. On Tables of Random Numbers. Sankhy Ser. A . 25  369375. MR   0178484 . Kolmogorov, Andrei N. 1963. On Tables of Random Numbers. Theoretical Computer Science . 207 2 387395. doi  10.1016S0304-39759800075-9 . MR   1643414 . Description Proposed a computational and combinatorial approach to probability. A formal theory of inductive inference  edit  Ray Solomonoff Information and Control , vol. 7, pp.  122 and 224254, 1964 Online copy part I , part II Description This was the beginning of algorithmic information theory and Kolmogorov complexity . Note that though Kolmogorov complexity is named after Andrey Kolmogorov , he said that the seeds of that idea are due to Ray Solomonoff . Andrey Kolmogorov contributed a lot to this area but in later articles. Algorithmic information theory  edit  Chaitin, Gregory 1977. Algorithmic information theory PDF . IBM Journal of Research and Development . 21 4 350359. CiteSeerX   10.1.1.48.3094 . doi  10.1147rd.214.0350 . Archived from the original PDF on 2009-05-30. Cite uses deprecated parameter deadurl  help  Description An introduction to algorithmic information theory by one of the important people in the area. Information theory  edit  A mathematical theory of communication  edit  Shannon, C.E. 1948. A mathematical theory of communication . Bell System Technical Journal . 27 3 379423, 623656. doi  10.1002j.1538-7305.1948.tb01338.x . hdl  10338.dmlcz101429 . Description This paper created the field of information theory . Error detecting and error correcting codes  edit  Hamming, Richard 1950. Error detecting and error correcting codes . Bell System Technical Journal . 29 2 147160. doi  10.1002j.1538-7305.1950.tb00463.x . Description In this paper, Hamming introduced the idea of error-correcting code . He created the Hamming code and the Hamming distance and developed methods for code optimality proofs. A method for the construction of minimum redundancy codes  edit  Huffman, D. 1952. A Method for the Construction of Minimum-Redundancy Codes PDF . Proceedings of the IRE . 40 9 10981101. doi  10.1109JRPROC.1952.273898 . Description The Huffman coding . A universal algorithm for sequential data compression  edit  Ziv, J.  Lempel, A. 1977. A universal algorithm for sequential data compression . IEEE Transactions on Information Theory . 23 3 337343. CiteSeerX   10.1.1.118.8921 . doi  10.1109TIT.1977.1055714 . hdl  10338.dmlcz142947 . Archived from the original on 2003-12-04. Cite uses deprecated parameter deadurl  help  Description The LZ77 compression algorithm. Elements of Information Theory  edit  T. Cover  J. Thomas 1991. Elements of Information Theory PDF . pp.  3842. ISBN   978-0-471-06259-2 . Description A popular introduction to information theory. Formal verification  edit  Assigning Meaning to Programs  edit  Floyd, Robert 1967. Assigning Meaning to Programs PDF . Mathematical Aspects of Computer Science . Proceedings of Symposia in Applied Mathematics. 19 . pp.  1932. doi  10.1090psapm0190235771 . ISBN   9780821813195 . Description Robert Floyds landmark paper Assigning Meanings to Programs introduces the method of inductive assertions and describes how a program annotated with first-order assertions may be shown to satisfy a pre- and post-condition specification  the paper also introduces the concepts of loop invariant and verification condition. An Axiomatic Basis for Computer Programming  edit  Hoare, C. A. R. October 1969. An axiomatic basis for computer programming PDF . Communications of the ACM . 12 10 576580. doi  10.1145363235.363259 . Archived from the original PDF on 2016-03-04. Cite uses deprecated parameter deadurl  help  Description Tony Hoares paper An Axiomatic Basis for Computer Programming describes a set of inference i.e. formal proof rules for fragments of an Algol-like programming language described in terms of what are now called Hoare-triples. Guarded Commands, Nondeterminacy and Formal Derivation of Programs  edit  Dijkstra, E. W. 1975. Guarded commands, nondeterminacy and formal derivation of programs . Communications of the ACM . 18 8 453457. doi  10.1145360933.360975 . Description Edsger Dijkstras paper Guarded Commands, Nondeterminacy and Formal Derivation of Programs expanded by his 1976 postgraduate-level textbook A Discipline of Programming proposes that, instead of formally verifying a program after it has been written i.e. post facto, programs and their formal proofs should be developed hand-in-hand using predicate transformers to progressively refine weakest pre-conditions, a method known as program or formal refinement or derivation, or sometimes correctness-by-construction. Proving Assertions about Parallel Programs  edit  Edward A. Ashcroft J. Comput. Syst. Sci. 101 110135 1975 Description The paper that introduced invariance proofs of concurrent programs. An Axiomatic Proof Technique for Parallel Programs I  edit  Susan S. Owicki , David Gries Acta Inform. 6 319340 1976 Description In this paper, along with the same authors paper Verifying Properties of Parallel Programs An Axiomatic Approach. Commun. ACM 195 279285 1976, the axiomatic approach to parallel programs verification was presented. A Discipline of Programming  edit  Edsger W. Dijkstra 1976 Description Edsger Dijkstras classic postgraduate-level textbook A Discipline of Programming extends his earlier paper Guarded Commands, Nondeterminacy and Formal Derivation of Programs and firmly establishes the principle of formally deriving programs and their proofs from their specification. Denotational Semantics  edit  Joe Stoy 1977 Description Joe Stoys Denotational Semantics is the first postgraduate level book-length exposition of the mathematical or functional approach to the formal semantics of programming languages in contrast to the operational and algebraic approaches. The Temporal Logic of Programs  edit  Pnueli, A. 1977. The temporal logic of programs. 18th Annual Symposium on Foundations of Computer Science SFCS 1977 . IEEE. pp.  4657. doi  10.1109SFCS.1977.32 . Description The use of temporal logic was suggested as a method for formal verification. Characterizing correctness properties of parallel programs using fixpoints 1980  edit  E. Allen Emerson , Edmund M. Clarke In Proc. 7th International Colloquium on Automata Languages and Programming, pages 169181, 1980 Description Model checking was introduced as a procedure to check correctness of concurrent programs. Communicating Sequential Processes 1978  edit  C.A.R. Hoare 1978 Description Tony Hoares original communicating sequential processes CSP paper introduces the idea of concurrent processes i.e. programs that do not share variables but instead cooperate solely by exchanging synchronous messages. A Calculus of Communicating Systems  edit  Robin Milner 1980 Description Robin Milners A Calculus of Communicating Systems CCS paper describes a process algebra permitting systems of concurrent processes to be reasoned about formally, something which has not been possible for earlier models of concurrency semaphores, critical sections, original CSP. Software Development A Rigorous Approach  edit  Cliff Jones 1980 Description Cliff Jones textbook Software Development A Rigorous Approach is the first full-length exposition of the Vienna Development Method VDM, which had evolved principally at IBMs Vienna research lab over the previous decade and which combines the idea of program refinement as per Dijkstra with that of data refinement or reification whereby algebraically-defined abstract data types are formally transformed into progressively more concrete representations. The Science of Programming  edit  David Gries 1981 Description David Gries textbook The Science of Programming describes Dijkstras weakest precondition method of formal program derivation, except in a very much more accessible manner than Dijkstras earlier A Discipline of Programming . It shows how to construct programs that work correctly without bugs, other than from typing errors. It does this by showing how to use precondition and postcondition predicate expressions and program proving techniques to guide the way programs are created. The examples in the book are all small-scale, and clearly academic as opposed to real-world. They emphasize basic algorithms, such as sorting and merging, and string manipulation. Subroutines functions are included, but object-oriented and functional programming environments are not addressed. Communicating Sequential Processes 1985  edit  C.A.R. Hoare 1985 Description Tony Hoares Communicating Sequential Processes CSP textbook currently the third most cited computer science reference of all time presents an updated CSP model in which cooperating processes do not even have program variables and which, like CCS, permits systems of processes to be reasoned about formally. Linear logic 1987  edit  Girard, J.-Y 1987. Linear Logic PDF . Theoretical Computer Science . 50 1 1102. doi  10.10160304-39758790045-4 . Archived from the original PDF on 2006-11-29. Cite uses deprecated parameter deadurl  help  Description Girards linear logic was a breakthrough in designing typing systems for sequential and concurrent computation, especially for resource conscious typing systems. A Calculus of Mobile Processes 1989  edit  R. Milner , J. Parrow, D. Walker 1989 Online version Part 1 and Part 2 Description This paper introduces the Pi-Calculus , a generalisation of CCS which allows process mobility. The calculus is extremely simple and has become the dominant paradigm in the theoretical study of programming languages, typing systems and program logics. The Z Notation A Reference Manual  edit  Spivey, J. M. 1992. The Z Notation A Reference Manual 2nd ed.. Prentice Hall International. ISBN   978-0-13-978529-0 . Description Mike Spiveys classic textbook The Z Notation A Reference Manual summarises the formal specification language Z notation which, although originated by Jean-Raymond Abrial, had evolved principally at Oxford University over the previous decade. Communication and Concurrency  edit  Robin Milner Prentice-Hall International, 1989 Description Robin Milners textbook Communication and Concurrency is a more accessible, although still technically advanced, exposition of his earlier CCS work. a Practical Theory of Programming  edit  Eric Hehner Springer, 1993, current edition online here Description the up-to-date version of Predicative programming . The basis for C.A.R. Hoare s UTP. The simplest and most comprehensive formal methods. References  edit   a b Smith, Carl H. 1982. Computability An Introduction to Recursive Function Theory N. J. Cutland. SIAM Review . 24  98. doi  10.11371024029 .  Rzsa Pter Founder of Recursive Function Theory . Women in Science A Selection of 16 Contributors . San Diego Supercomputer Center. 1997 . Retrieved 23 August 2017 .  Reviews of Rzsa Pters books . www-history.mcs.st-andrews.ac.uk . Retrieved 29 August 2017 .  a b Daniel Apon, 2010, Joint Review of Computational Complexity A Conceptual Perspective by Oded Goldreich and Computational Complexity A Modern Approach by Sanjeev Arora and Boaz Barak, ACM SIGACT News, Vol. 414, December 2010, pp. 1215, see 1 , accessed 1 February 2015.  Shasha, Dennis , An Interview with Michael O. Rabin , Communications of the ACM , Vol. 53 No. 2, Pages 3742, February 2010.  SIGACT 2011 .mw-parser-output .refbeginfont-size90margin-bottom0.5em.mw-parser-output .refbegin-hanging-indentsullist-style-typenonemargin-left0.mw-parser-output .refbegin-hanging-indentsulli,.mw-parser-output .refbegin-hanging-indentsdlddmargin-left0padding-left3.2emtext-indent-3.2emlist-stylenone.mw-parser-output .refbegin-100font-size100 ACM Special Interest Group on Algorithms and Computation Theory 2011. Prizes Gdel Prize . Retrieved October 2011 . Check date values in accessdate  help  v t e Important publications in science Computing Mathematics Computer science   theoretical  Concurrent   parallel   distributed computing Cryptography Mathematics Statistics Natural science Biology   plant taxonomy  Chemistry Geology Medicine Physics   Einstein  Social science Anthropology Economics Psychology   humor research  Sociology Related Philosophy Antiquarian science books Retrieved from  httpsen.wikipedia.orgwindex.phptitleList_of_important_publications_in_theoretical_computer_science oldid907839455  Categories  Computer science papers History of computer science Lists of publications in science Hidden categories Articles with short description Articles needing additional references from February 2015 All articles needing additional references Articles that may contain original research from February 2015 All articles that may contain original research Articles needing cleanup from February 2015 All pages needing cleanup Cleanup tagged articles with a reason field from February 2015 Wikipedia pages needing cleanup from February 2015 Articles with multiple maintenance issues CS1 errors deprecated parameters CS1 errors dates