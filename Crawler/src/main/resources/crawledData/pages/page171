Winston W. Royce From Wikipedia, the free encyclopedia Jump to navigation Jump to search From a talk Royce gave on August 10, 1990 Winston Walker Royce August 15, 1929  June 7, 1995 was an American computer scientist , director at Lockheed Software Technology Center in Austin, Texas . He was a pioneer in the field of software development , 1  known for his 1970 paper from which the Waterfall model for software development was mistakenly  citation needed  drawn. 2  Contents 1 Biography 2 Work 2.1 Managing the development of large software systems 2.2 Software system engineering 2.3 Software architecture 3 See also 4 Publications 5 References Biography  edit  Born in 1929, Royce entered the California Institute of Technology , where he received his BS in physics , his MS in aeronautical engineering and in 1959 his PhD in aeronautical engineering under Julian David Cole 3  with the thesis Transonic flow over a non-lifting, slender body of revolution . Royce had begun his career as Assistant Professor at the California Institute of Technology. In 1961 he started as project manager in the aerospace division of TRW . His first project concerned the design of a mission planning and orbit selection system for spacecraft . In the following years he was involved in the research and development of several large and complex software systems, and started developing new methodologies for improving the management of software project. 4  In 1970 he published his influential article  Managing the development of large software systems , in which he presented several project management models, including what we now know as waterfall , iterative , and agile . 2  In 1985, he received the AIAA Information Systems Award. 5  During the 1980s he was director at Lockheed Software Technology Center in Austin, Texas. He retired in 1994 and died the following year at his home in Clifton, Virginia . 6  His eldest son is Walker Royce, Chief Software Economist of IBM s Rational division, and author of Software Project Management, A Unified Framework, and a principal contributor to the management philosophy inherent in the IBM Rational Unified Process . 7  Work  edit  Managing the development of large software systems  edit  The Waterfall model for software development is mistakenly attributed to Royce. Barry Boehm wrote in 1987 Royces 1970 paper is generally considered to be the paper which defined the stagewise waterfall model of the software process. But it is surprising to see both that the earlier Benington and Hosier papers had good approximations to the waterfall model, and that Royces paper already incorporates prototyping as an essential step compatible with the waterfall model. 8  In fact Royce demonstrated that while the development of large software systems required a more thorough approach, there was inherent risk in a single-pass sequential approach. He proposed an iterative approach and advocated that projects should pass through this at least twice. The unmodified waterfall model . Progress flows from the top to the bottom, like a waterfall . Royce started his 1970 article Managing the development of large software systems with a statement about the origin of his ideas I am going to describe my personal views about managing large software developments. I have had various assignments during the past nine years, mostly concerned with the development of software packages for spacecraft mission planning, commanding and post-flight analysis. In these assignments I have experienced different degrees of success with respect to arriving at an operati onal state, on-time, and within costs. I have become prejudiced by my experiences and I am going to relate some of these prejudices in this presentation. 2  Royce had determined that the development of computer programs regardless of size or complexity could be split into two development stages Analysis and Coding . For small software development projects these two steps were sufficient, but not for the development of larger software systems. These require many additional steps back and forth, which gives the development an iterative character. 2  To picture this iterative development Royce proposed a number of approaches, although he never used the term waterfall 9  nor advocated it as an effective methodology . 10  The earliest use of the term waterfall may have been a 1976 paper by Bell and Thayer. 11  Royce pictured the waterfall model with the following seven steps 2  Systems requirements Software requirements Analysis Program design Coding Testing, and Operation He called them implementation steps to develop a large computer program for delivery to a customer. Royce foresaw a major shortcoming in this methodology, which he described as The testing phase which occurs at the end of the development cycle is the first event for which timing, storage, inputoutput transfers, etc., are experienced as distinguished from analyzed. These phenomena are not precisely analyzable. They are not the solutions to the standard partial differential equations of mathematical physics for instance. Yet if these phenomena fail to satisfy the various external constraints, then invariably a major redesign is required. A simple octal patch or redo of some isolated code will not fix these kinds of difficulties. The required design changes are likely to be so disruptive that the software requirements upon which the design is based and which provides the rationale for everything are violated... 2  According to Royce in the process model the design iterations are never confined to the successive step, and for that model without iteration is risky and invites failure. 2  As alternative Royce proposed a more incremental development, where every next step links back to the step before. Software system engineering  edit  In the early 1980s Winston Royce coined the term software system engineering SwSE at one of the seminars of the Management of Software Acquisition course at the Defense Systems Management College at Fort Belvoir, Va. 12  According to Richard H. Thayer, emeritus professor in software engineering at California State University, Sacramento, software system engineering is concerned with applying system engineering principles specifically to the development of large, complex software systems provides a powerful tool for process and product management. 12  Software system engineers can take responsibility for the overall technical management of the system and the verification of the final system products. 12  Software architecture  edit  In the 1991 article Software Architecture Integrating Process and Technology Royce and Royce describe the connection between architecture and the software development process. 13  According to Philippe Kruchten et al. 2006 this article was the first to position software architecture  in both title and perspective  between technology and process. 14  See also  edit  Systems development life cycle Publications  edit  Royce published several books and articles. 15  Books 1959. Transonic flow over a non-lifting, slender body of revolution . Pasadena   California Institute of Technology, 1959. 1997. Software Engineering Project Management . 2nd edition. With R. Thayer  Ed Yourdon . Articles, a selection 1970.  Managing the Development of Large Software Systems , Proceedings of IEEE WESCON 26 August 19. 1989. Lockheeds Software Technology Center. In Modern software engineering, foundations and current perspectives . Peter A. Ng ed.. Van Nostrand Reinhold Co. p.  561578. 1990.  1 , Dr. Win Royce Process Round Table Aug. 10th 1990 1991. Current Problems. In Aerospace Software Engineering , edited by Christine Anderson and Merlin Dorfman, 515. Washington, D.C. American Institute of Aeronautics and Astronautics. 1991. Software Architecture Integrating Process and Technology, with Walker Royce in TRW Quest , vol. 14, no. 1, p.  215. 1992.  Status Report Computer-Aided Prototyping . With Walker Royce. In IEEE Software Vol 9 6 p.  7781 References  edit   Dr. Winston W. Royce 19291995 at www.informatik.uni-bremen.de. Retrieved Oct 27, 2008.  a b c d e f g Winston W. Royce 1970. Managing the Development of Large Software Systems in Technical Papers of Western Electronic Show and Convention WesCon August 2528, 1970, Los Angeles, USA.  Christine Anderson, Merlin Dorfman 1991 Aerospace software engineering a collection of concepts  Ellis Horowitz 1975 Practical strategies for developing large software systems . p. xii  httpswww.aiaa.orgHonorsAndAwardsRecipientsList.aspxawardIdade61ed3-745b-4d4f-9aea-73d7dbbb4687  Alan M. Davis, Tracing A Simple Necessity Neglected, in IEEE Software , vol. 12, no. 5, pp. 67, Sept., 1995  Meet our thought leaders at IBM Rational. Retrieved October 27, 2008.  Barry W. Boehm 1987. Software Process Management Lessons Learned from History in ICSE 87 Proceedings of the 9th international conference on Software Engineering pp 296-298  Wasserfallmodell   Entstehungskontext , Markus Rerych, Institut fr Gestaltungs- und Wirkungsforschung, TU-Wien. Accessed on line November 28, 2007.  Winston W. Royce at interaction-design.org. Retrieved Oct 27, 2008.  Bell, Thomas E., and T. A. Thayer. Software requirements Are they really a problem Proceedings of the 2nd international conference on Software engineering. IEEE Computer Society Press, 1976.  a b c Richard Hall Thayer 2002. Software System Engineering A Tutorial. In Computer , Apr. 2002.  W.E. Royce and W. Royce, Software Architecture Integrating Process and Technology, TRW Quest, vol. 14, no. 1, 1991, pp. 215.  Philippe Kruchten , Henk Obbink, and Judith Stafford 2006.  The past, present, and future for software architecture . IEEE Software Vol 23 2. p. 23  Royce Winston and W. W. Royce List of publications from the DBLP Bibliography Server. v t e Software engineering Fields Computer programming Requirements engineering Software deployment Software design Software maintenance Software testing Systems analysis Formal methods Concepts Data modeling Enterprise architecture Functional specification Modeling language Orthogonality Programming paradigm Software Software archaeology Software architecture Software configuration management Software development methodology Software development process Software quality Software quality assurance Software verification and validation Structured analysis Orientations Agile Aspect-oriented Object orientation Ontology Service orientation SDLC Models Developmental Agile EUP Executable UML Incremental model Iterative model Prototype model RAD UP Scrum Spiral model V-Model Waterfall model XP Other SPICE CMMI Data model ER model Function model Information model Metamodeling Object model Systems model View model Languages IDEF UML USL SysML Software engineers Victor Basili Kent Beck Grady Booch Fred Brooks Barry Boehm Peter Chen Danese Cooper Ward Cunningham Tom DeMarco Edsger W. Dijkstra Delores M. Etter Martin Fowler Adele Goldstine Margaret Hamilton C. A. R. Hoare Lois Haibt Mary Jean Harrold Grace Hopper Watts Humphrey Michael A. Jackson Ivar Jacobson Alan Kay Nancy Leveson Stephen J. Mellor Bertrand Meyer David Parnas Trygve Reenskaug Winston W. Royce James Rumbaugh Mary Shaw Peri Tarr Elaine Weyuker Niklaus Wirth Edward Yourdon Related fields Computer science Computer engineering Project management Risk management Systems engineering Category Commons Authority control DBLP  056935 MGP  39430 Retrieved from  httpsen.wikipedia.orgwindex.phptitleWinston_W._Royce oldid905908425  Categories  1929 births 1995 deaths American computer scientists American software engineers People from Clifton, Virginia Scientists from Virginia Hidden categories Use mdy dates from February 2012 All articles with unsourced statements Articles with unsourced statements from May 2019 Wikipedia articles with DBLP identifiers Wikipedia articles with MGP identifiers