Unified Modeling Language From Wikipedia, the free encyclopedia Jump to navigation Jump to search The Unified Modeling Language  UML  is a general-purpose, developmental, modeling language in the field of software engineering that is intended to provide a standard way to visualize the design of a system. 1  The creation of UML was originally motivated by the desire to standardize the disparate notational systems and approaches to software design. It was developed by Grady Booch , Ivar Jacobson and James Rumbaugh at Rational Software in 19941995, with further development led by them through 1996. 1  In 1997, UML was adopted as a standard by the Object Management Group OMG, and has been managed by this organization ever since. In 2005, UML was also published by the International Organization for Standardization ISO as an approved ISO standard. 2  Since then the standard has been periodically revised to cover the latest revision of UML. 3  Contents 1 History 1.1 Before UML 1.0 1.2 UML 1.x 1.2.1 Cardinality notation 1.3 UML 2 2 Design 2.1 Software development methods 2.2 Modeling 3 Diagrams 3.1 Structure diagrams 3.2 Behavior diagrams 3.3 Interaction diagrams 4 Metamodeling 5 Adoption 6 See also 7 References 8 Further reading 9 External links History  edit  History of object-oriented methods and notation Before UML 1.0  edit  UML has been evolving since the second half of the 1990s and has its roots in the object-oriented programming methods developed in the late 1980s and early 1990s. The timeline see image shows the highlights of the history of object-oriented modeling methods and notation. It is originally based on the notations of the Booch method , the object-modeling technique OMT and object-oriented software engineering OOSE, which it has integrated into a single language. 4  Rational Software Corporation hired James Rumbaugh from General Electric in 1994 and after that the company became the source for two of the most popular object-oriented modeling approaches of the day 5  Rumbaughs object-modeling technique OMT and Grady Booch s method. They were soon assisted in their efforts by Ivar Jacobson , the creator of the object-oriented software engineering OOSE method, who joined them at Rational in 1995. 1  UML 1.x  edit  Under the technical leadership of those three Rumbaugh, Jacobson and Booch, a consortium called the UML Partners was organized in 1996 to complete the Unified Modeling Language UML specification, and propose it to the Object Management Group OMG for standardisation. The partnership also contained additional interested parties for example HP , DEC , IBM and Microsoft . The UML Partners UML 1.0 draft was proposed to the OMG in January 1997 by the consortium. During the same month the UML Partners formed a group, designed to define the exact meaning of language constructs, chaired by Cris Kobryn and administered by Ed Eykholt, to finalize the specification and integrate it with other standardization efforts. The result of this work, UML 1.1, was submitted to the OMG in August 1997 and adopted by the OMG in November 1997. 1  6  After the first release a task force was formed 1  to improve the language, which released several minor revisions, 1.3, 1.4, and 1.5. 7  The standards it produced as well as the original standard have been noted as being ambiguous and inconsistent. 8  9  Cardinality notation  edit  As with database Chen, Bachman, and ISO ER diagrams , class models are specified to use look-across cardinalities , even though several authors  Merise , 10  Elmasri  Navathe 11  amongst others 12   prefer same-side or look-here for roles and both minimum and maximum cardinalities. Recent researchers Feinerer, 13  Dullea et al. 14   have shown that the look-across technique used by UML and ER diagrams is less effective and less coherent when applied to n -ary relationships of order strictly greater than 2. Feinerer says Problems arise if we operate under the look-across semantics as used for UML associations. Hartmann 15  investigates this situation and shows how and why different transformations fail., and As we will see on the next few pages, the look-across interpretation introduces several difficulties which prevent the extension of simple mechanisms from binary to n -ary associations. UML 2  edit  UML 2.0 major revision replaced version 1.5 in 2005, which was developed with an enlarged consortium to improve the language further to reflect new experience on usage of its features. 16  Although UML 2.1 was never released as a formal specification, versions 2.1.1 and 2.1.2 appeared in 2007, followed by UML 2.2 in February 2009. UML 2.3 was formally released in May 2010. 17  UML 2.4.1 was formally released in August 2011. 17  UML 2.5 was released in October 2012 as an In progress version and was officially released in June 2015. 17  Formal version 2.5.1 was adopted in December 2017. 18  There are four parts to the UML 2.x specification The Superstructure that defines the notation and semantics for diagrams and their model elements The Infrastructure that defines the core metamodel on which the Superstructure is based The Object Constraint Language OCL for defining rules for model elements The UML Diagram Interchange that defines how UML 2 diagram layouts are exchanged The current versions of these standards are 19  UML Superstructure version 2.4.1 UML Infrastructure version 2.4.1 OCL version 2.3.1 UML Diagram Interchange version 1.0. It continues to be updated and improved by the revision task force, who resolve any issues with the language. 20  Design  edit  UML offers a way to visualize a systems architectural blueprints in a diagram, including elements such as 4  any activities jobs individual components of the system and how they can interact with other software components  how the system will run how entities interact with others components and interfaces external user interface . Although originally intended for object-oriented design documentation, UML has been extended to a larger set of design documentation as listed above, 21  and been found useful in many contexts. 22  Software development methods  edit  UML is not a development method by itself 23  however, it was designed to be compatible with the leading object-oriented software development methods of its time, for example OMT , Booch method , Objectory and especially RUP that it was originally intended to be used with when work began at Rational Software. Modeling  edit  It is important to distinguish between the UML model and the set of diagrams of a system. A diagram is a partial graphic representation of a systems model. The set of diagrams need not completely cover the model and deleting a diagram does not change the model. The model may also contain documentation that drives the model elements and diagrams such as written use cases. UML diagrams represent two different views of a system model 24  Static or structural  view emphasizes the static structure of the system using objects, attributes, operations and relationships. It includes class diagrams and composite structure diagrams . Dynamic or behavioral  view emphasizes the dynamic behavior of the system by showing collaborations among objects and changes to the internal states of objects. This view includes sequence diagrams , activity diagrams and state machine diagrams . UML models can be exchanged among UML tools by using the XML Metadata Interchange XMI format. In UML, one of the key tools for behavior modelling is the use-case model, caused by OOSE . Use cases are a way of specifying required usages of a system. Typically, they are used to capture the requirements of a system, that is, what a system is supposed to do. 25  Diagrams  edit  UML diagram types Structural UML diagrams Class diagram Component diagram Composite structure diagram Deployment diagram Object diagram Package diagram Profile diagram Behavioral UML diagrams Activity diagram Communication diagram Interaction overview diagram Sequence diagram State diagram Timing diagram Use case diagram v t e UML 2 has many types of diagrams, which are divided into two categories. 4  Some types represent structural information, and the rest represent general types of behavior , including a few that represent different aspects of interactions . These diagrams can be categorized hierarchically as shown in the following class diagram 4  These diagrams may all contain comments or notes explaining usage, constraint, or intent. Structure diagrams  edit  Structure diagrams emphasize the things that must be present in the system being modeled. Since structure diagrams represent the structure, they are used extensively in documenting the software architecture of software systems. For example, the component diagram describes how a software system is split up into components and shows the dependencies among these components. Component diagram Class diagram Behavior diagrams  edit  Behavior diagrams emphasize what must happen in the system being modeled. Since behavior diagrams illustrate the behavior of a system, they are used extensively to describe the functionality of software systems. As an example, the activity diagram describes the business and operational step-by-step activities of the components in a system. Activity diagram Use case diagram Interaction diagrams  edit  Interaction diagrams, a subset of behavior diagrams, emphasize the flow of control and data among the things in the system being modeled. For example, the sequence diagram shows how objects communicate with each other regarding a sequence of messages. Sequence diagram Communication diagram Metamodeling  edit  Main article Meta-Object Facility Illustration of the Meta-Object Facility The Object Management Group OMG has developed a metamodeling architecture to define the UML, called the Meta-Object Facility . 26  MOF is designed as a four-layered architecture, as shown in the image at right. It provides a meta-meta model at the top, called the M3 layer. This M3-model is the language used by Meta-Object Facility to build metamodels, called M2-models. The most prominent example of a Layer 2 Meta-Object Facility model is the UML metamodel, which describes the UML itself. These M2-models describe elements of the M1-layer, and thus M1-models. These would be, for example, models written in UML. The last layer is the M0-layer or data layer. It is used to describe runtime instances of the system. 27  The meta-model can be extended using a mechanism called stereotyping . This has been criticised as being insufficientuntenable by Brian Henderson-Sellers and Cesar Gonzalez-Perez in Uses and Abuses of the Stereotype Mechanism in UML 1.x and 2.0. 28  Adoption  edit  UML has been marketed for many contexts. 22  29  It has been treated, at times, as a design silver bullet , which leads to problems. UML misuse includes overuse designing every part of the system with it, which is unnecessary and assuming that novices can design with it. 30  It is considered a large language, with many constructs . Some people including Jacobson  feel that UMLs size hinders learning and therefore, using it. 31  See also  edit  Applications of UML Business Process Model and Notation BPMN Model-based testing Model-driven engineering Object Oriented Role Analysis and Modeling Systems Modeling Language SysML List of Unified Modeling Language tools References  edit  This article is based on material taken from the Free On-line Dictionary of Computing prior to 1 November 2008 and incorporated under the relicensing terms of the GFDL , version 1.3 or later.  a b c d e Unified Modeling Language User Guide, The 2 ed.. Addison-Wesley. 2005. p.  496. ISBN   0321267974 . .mw-parser-output cite.citationfont-styleinherit.mw-parser-output .citation qquotes.mw-parser-output .citation .cs1-lock-free abackgroundurlupload.wikimedia.orgwikipediacommonsthumb665Lock-green.svg9px-Lock-green.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration abackgroundurlupload.wikimedia.orgwikipediacommonsthumbdd6Lock-gray-alt-2.svg9px-Lock-gray-alt-2.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output .citation .cs1-lock-subscription abackgroundurlupload.wikimedia.orgwikipediacommonsthumbaaaLock-red-alt-2.svg9px-Lock-red-alt-2.svg.pngno-repeatbackground-positionright .1em ce nter.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registrationcolor555.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration spanborder-bottom1px dottedcursorhelp.mw-parser-output .cs1-ws-icon abackgroundurlupload.wikimedia.orgwikipediacommonsthumb44cWikisource-logo.svg12px-Wikisource-logo.svg.pngno-repeatbackground-positionright .1em center.mw-parser-output code.cs1-codecolorinheritbackgroundinheritborderinheritpaddinginherit.mw-parser-output .cs1-hidden-errordisplaynonefont-size100.mw-parser-output .cs1-visible-errorfont-size100.mw-parser-output .cs1-maintdisplaynonecolor33aa33margin-left0.3em.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-outpu t .cs1-formatfont-size95.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-leftpadding-left0.2em.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-rightpadding-right0.2em , See the sample content, look for history  ISOIEC 195012005 - Information technology - Open Distributed Processing - Unified Modeling Language UML Version 1.4.2 . Iso.org. 1 April 2005 . Retrieved 7 May 2015 .  ISOIEC 19505-12012 - Information technology - Object Management Group Unified Modeling Language OMG UML - Part 1 Infrastructure . Iso.org. 20 April 2012 . Retrieved 10 April 2014 .  a b c d OMG Unified Modeling Language OMG UML, Superstructure. Version 2.4.1 . Object Management Group . Retrieved 9 April 2014 .  Andreas Zendler 1997 Advanced Concepts, Life Cycle Models and Tools for Objeckt-Oriented Software Development . p.122  UML Specification version 1.1 OMG document ad97-08-11 . Omg.org . Retrieved 22 September 2011 .  UML . Omg.org . Retrieved 10 April 2014 .  Gnova et alia 2004 Open Issues in Industrial Use Case Modeling  Will UML 2.0 Be Agile or Awkward PDF . Retrieved 22 September 2011 .  Hubert Tardieu, Arnold Rochfeld and Ren Colletti La methode MERISE Principes et outils Paperback - 1983  Elmasri, Ramez, B. Shamkant, Navathe, Fundamentals of Database Systems, third ed., Addison-Wesley, Menlo Park, CA, USA, 2000.  ER 2004   23rd International Conference on Conceptual Modeling, Shanghai, China, 8-12 November 2004 Archived 27 May 2013 at the Wayback Machine  A Formal Treatment of UML Class Diagrams as an Efficient Method for Configuration Management 2007 PDF . Retrieved 22 September 2011 .  James Dullea, Il-Yeol Song, Ioanna Lamprou - An analysis of structural validity in entity-relationship modeling 2002 PDF . Retrieved 22 September 2011 .    Reasoning about participation constraints and Chens constraints S Hartmann - 2003 PDF . Retrieved 17 August 2013 .  UML 2.0 . Omg.org . Retrieved 22 September 2011 .  a b c UML . Omg.org . Retrieved 22 September 2011 .  UML 2.5.1 specification . Omg.org . Retrieved 24 October 2018 .  OMG. OMG Formal Specifications Modeling and Metadata paragraph . Retrieved 12 February 2016 .  Issues for UML 2.6 Revision task Force mailing list . Omg.org . Retrieved 10 April 2014 .  Satish Mishra 1997. Visual Modeling  Unified Modeling Language UML Introduction to UML . Rational Software Corporation. Accessed 9 November 2008.  a b UML, Success Stories . Retrieved 9 April 2014 .  John Hunt 2000. The Unified Process for Practitioners Object-oriented Design, UML and Java . Springer, 2000. ISBN   1-85233-275-1 . p.5.door  Jon Holt Institution of Electrical Engineers 2004. UML for Systems Engineering Watching the Wheels IET, 2004, ISBN   0-86341-354-4 . p.58  Manuel Almendros-Jimnez, Jess  Iribarne, Luis. 2007. Describing Use-Case Relationships with Sequence Diagrams. Comput. J.. 50. 116-128. 10.1093comjnlbxl053.  Iman Poernomo 2006  The Meta-Object Facility Typed  in Proceeding SAC 06 Proceedings of the 2006 ACM symposium on Applied computing . pp. 1845-1849  UML 2.4.1 Infrastructure . Omg.org. 5 August 2011 . Retrieved 10 April 2014 .  B. Henderson-Sellers C. Gonzalez-Perez 2006. Uses and Abuses of the Stereotype Mechanism in UML 1.x and 2.0. in Model Driven Engineering Languages and Systems . Springer Berlin  Heidelberg.  UML 2.5 Do you even care . UML truly is ubiquitous  Death by UML Fever .  Ivar Jacobson on UML, MDA, and the future of methodologies . Further reading  edit  Ambler, Scott William 2004. The Object Primer Agile Model Driven Development with UML 2 . Cambridge University Press. ISBN   0-521-54018-6 . Chonoles, Michael Jesse James A. Schardt 2003. UML 2 for Dummies . Wiley Publishing. ISBN   0-7645-2614-6 . Fowler, Martin . UML Distilled A Brief Guide to the Standard Object Modeling Language 3rd ed.. Addison-Wesley. ISBN   0-321-19368-7 . Jacobson, Ivar  Grady Booch James Rumbaugh 1998. The Unified Software Development Process . Addison Wesley Longman. ISBN   0-201-57169-2 . Martin, Robert Cecil 2003. UML for Java Programmers . Prentice Hall. ISBN   0-13-142848-9 . Noran, Ovidiu S. Business Modelling UML vs. IDEF PDF . Retrieved 28 December 2005 . Horst Kargl. Interactive UML Metamodel with additional Examples . Penker, Magnus Hans-Erik Eriksson 2000. Business Modeling with UML . John Wiley  Sons. ISBN   0-471-29551-5 . External links  edit  Wikimedia Commons has media related to Unified Modeling Language . Wikiversity has learning resources about UML Official website v t e Unified Modeling Language Actors Organizations Object Management Group UML Partners Persons Grady Booch Ivar Jacobson James Rumbaugh Concepts Object oriented Object-oriented programming Object-oriented analysis and design Object-oriented modeling Structure Actor Attribute Artifact Class Component Interface Object Package Profile diagram Behavior Activity Event Message Method State Use case Relationships Association Composition Dependency Generalization or Inheritance  Extensibility Profile Stereotype Other Multiplicity Diagrams Structure Class Component Composite structure Deployment Object Package Behaviour Activity State Machine Use case Interaction Communications Sequence Interaction overview Timing Derived languages Systems Modeling Language SysML UML eXchange Format UXF XML Metadata Interchange XMI Executable UML xUML Other topics Glossary of UML terms Rational Unified Process List of Unified Modeling Language tools Object Modeling in Color v t e Software engineering Fields Computer programming Requirements engineering Software deployment Software design Software maintenance Software testing Systems analysis Formal methods Concepts Data modeling Enterprise architecture Functional specification Modeling language Orthogonality Programming paradigm Software Software archaeology Software architecture Software configuration management Software development methodology Software development process Software quality Software quality assurance Software verification and validation Structured analysis Orientations Agile Aspect-oriented Object orientation Ontology Service orientation SDLC Models Developmental Agile EUP Executable UML Incremental model Iterative model Prototype model RAD UP Scrum Spiral model V-Model Waterfall model XP Other SPICE CMMI Data model ER model Function model Information model Metamodeling Object model Systems model View model Languages IDEF UML USL SysML Software engineers Victor Basili Kent Beck Grady Booch Fred Brooks Barry Boehm Peter Chen Danese Cooper Ward Cunningham Tom DeMarco Edsger W. Dijkstra Delores M. Etter Martin Fowler Adele Goldstine Margaret Hamilton C. A. R. Hoare Lois Haibt Mary Jean Harrold Grace Hopper Watts Humphrey Michael A. Jackson Ivar Jacobson Alan Kay Nancy Leveson Stephen J. Mellor Bertrand Meyer David Parnas Trygve Reenskaug Winston W. Royce James Rumbaugh Mary Shaw Peri Tarr Elaine Weyuker Niklaus Wirth Edward Yourdon Related fields Computer science Computer engineering Project management Risk management Systems engineering Category Commons v t e ISO standards .mw-parser-output .noboldfont-weightnormal by standard number List of ISO standards   ISO romanizations   IEC standards 19999 1 2 3 4 5 6 7 9 16 17 31 -0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 128 216 217 226 228 233 259 269 302 306 361 428 500 518 519 639 -1 -2 -3 -5 -6 646 657 668 690 704 732 764 838 843 860 898 965 999 1000 1004 1007 1073-1 1155 1413 1538 1629 1745 1989 2014 2015 2022 2033 2047 2108 2145 2146 2240 2281 2533 2709 2711 2720 2788 2848 2852 3029 3103 3166 -1 -2 -3 3297 3307 3601 3602 3864 3901 3950 3977 4031 4157 4165 4217 4909 5218 5426 5427 5428 5725 5775 5776 5800 5807 5964 6166 6344 6346 6385 6425 6429 6438 6523 6709 6943 7001 7002 7010 7027 7064 7098 7185 7200 7498 -1 7637 7736 7810 7811 7812 7813 7816 7942 8000 8093 8178 8217 8373 8501-1 8571 8583 8601 8613 8632 8651 8652 8691 88058806 8807 8820-5 8859 -1 -2 -3 -4 -5 -6 -7 -8 -8-I -9 -10 -11 -12 -13 -14 -15 -16 8879 90009001 9036 9075 9126 9141 9227 9241 9293 9314 9362 9407 9506 9529 9564 95929593 9594 9660 9797-1 9897 9899 9945 9984 9985 9995 1000019999 10005 10006 10007 10116 10118-3 10160 10161 10165 10179 10206 10218 10303 -11 -21 -22 -28 -238 10383 10487 10585 10589 10646 10664 10746 10861 10957 10962 10967 11073 11170 11179 11404 11544 11783 11784 11785 11801 11898 11940  -2  11941 11941 TR 11992 12006 12182 12207 12234-2 13211 -1 -2 13216 13250 13399 13406-2 13450 13485 13490 13567 13568 13584 13616 14000 14031 14224 14289 14396 14443 14496 -2 -3 -6 -10 -11 -12 -14 -17 -20 14644 14649 14651 14698 14750 14764 14882 14971 15022 15189 15288 15291 15292 15398 15408 15444 -3 15445 15438 15504 15511 15686 15693 15706 -2 15707 15897 15919 15924 15926 15926 WIP 15930 16023 16262 16355-1 16612-2 16750 16949 TS 17024 17025 17100 17203 17369 17442 17799 18000 18004 18014 18245 18629 18916 19005 19011 19092 -1 -2 19114 19115 19125 19136 19407 19439 19500 19501 19502 19503 19505 19506 19507 19508 19509 19510 19600 19752 19757 19770 19775-1 19794-5 19831 20000 20000 20022 20121 20400 21000 21047 21500 218272002 22000 23270 23271 23360 24517 24613 24617 24707 25178 25964 26000 26262 26300 26324 27000 series 27000 27001 27002 27006 27729 28000 29110 29148 29199-2 29500 30170 31000 32000 37001 38500 40500 42010 45001 50001 55000 80000 -1 -2 -3 Category Authority control BNF  cb131836959 data GND  4469781-8 LCCN  sh97003561 Retrieved from  httpsen.wikipedia.orgwindex.phptitleUnified_Modeling_Language oldid912398283  Categories  Architecture description language Data modeling languages Data modeling diagrams Diagrams Knowledge representation ISO standards Specification languages Unified Modeling Language Software modeling language Modeling languages Hidden categories Webarchive template wayback links Use American English from January 2012 All Wikipedia articles written in American English Use dmy dates from July 2011 Wikipedia articles with BNF identifiers Wikipedia articles with GND identifiers Wikipedia articles with LCCN identifiers